/*! Fetch Inject v2.0.4 | Copyright (C) Josh Habdas @license Zlib */
var fetchInject=function(){'use strict';var a=function(a,b,d,f,e,c,g){c=b.createElement(d),g=b.getElementsByTagName(d)[0],c.appendChild(b.createTextNode(f.text)),c.onload=e(f),g?g.parentNode.insertBefore(c,g):b.head.appendChild(c)};return function(b,c){if(!arguments.length)return Promise.reject(new ReferenceError("Failed to execute 'fetchInject': 1 argument required but only 0 present."));if(arguments[0]&&arguments[0].constructor!==Array)return Promise.reject(new TypeError("Failed to execute 'fetchInject': argument 1 must be of type 'Array'."));if(arguments[1]&&arguments[1].constructor!==Promise)return Promise.reject(new TypeError("Failed to execute 'fetchInject': argument 2 must be of type 'Promise'."));var d=[],e=c?[].concat(c):[],f=[];return b.forEach(function(a){return e.push(window.fetch(a).then(function(a){return[a.clone().text(),a.blob()]}).then(function(a){return Promise.all(a).then(function(a){d.push({text:a[0],blob:a[1]})})}))}),Promise.all(e).then(function(){return d.forEach(function(b){f.push({then:function(c){b.blob.type.includes("text/css")?a(window,document,"style",b,c):a(window,document,"script",b,c)}})}),Promise.all(f)})}}();