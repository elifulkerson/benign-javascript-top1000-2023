if(! t.g_default_clientVideo && t.g_clientVideo ) { t.g_default_clientVideo = t.g_clientVideo; }var player = window;InstantiateDhtmlPopup_Player();var popUserMenu = new PopUserMenu(t,{ persist: 1 });var g_oParseEmoteInput = new ParseEmoteInput();var g_bPopupPlayer = 0;if(location.href.match(/new_window=1/) || g_sWindowType == 'popup' || g_sWindowType == 'iframe' ) { g_bPopupPlayer = 1; }var g_bDhtmlWindow = 0;if(location.href.match(/dhtml_window=1/) ) { g_bDhtmlWindow = 1; }window.onunload = onUnloadHandler;window.onbeforeunload = onUnloadHandler;var g_Model="";var g_sPlayerMode = '';var g_bAudio;if(t && t.g_hSelf ) { g_bAudio = t.g_hSelf.audio_muted; }if(t && t.g_hSelf && ( t.g_hSelf['models_per_page'] == '0' || ! t.g_hSelf['models_per_page'] ) ){ if(g_UA.mobile ) { t.g_hSelf['models_per_page'] = 100; } else { t.g_hSelf['models_per_page'] = g_UA.IE ? 200 : 350; }}var g_inChatPurchase={};var g_nBroadcasterId = 0;var g_videoPlayer;var Log = t.Log;var g_nDebugTimer = 0;if(! g_UA.mobile && ! g_UA.tablet ){ if(g_bPopupPlayer ) { window.onresize = OnResizeHandler; } else { top.window.onresize = OnResizeHandler; }}
if(navigator.userAgent.match(/iPad|iPhone|iPad|Android|Mobile|Tablet/) ){ var g_mobile_window_innerWidth = window.innerWidth; var g_mobile_window_innerHeight = window.innerHeight; setInterval(function(){ if(g_mobile_window_innerWidth != window.innerWidth || g_mobile_window_innerHeight != window.innerHeight ) { OnResizeHandler(); } g_mobile_window_innerWidth = window.innerWidth; g_mobile_window_innerHeight = window.innerHeight; });}var g_nBroadcasterId = 0;var aMatches = location.search.match(/broadcaster_id=(\d*)/);if(aMatches && aMatches[1] ) { g_nBroadcasterId = aMatches[1]; }function HandleTest() { return true; }function LoadPlayer(sAction,hOptions){ if(t.g_nAgeCheckRequired ) { console.log('CC required'); return; } sAction = sAction || ''; LoadPlayer.sActionRetainer = sAction; hOptions = hOptions || {}; LoadPlayer.hOptionsRetainer = hOptions; SetHTML.hCache = {}; var oTime = new Date(); if(g_sPlayerMode == 'player' && t.g_hoPlayerWindows && t.g_hoPlayerWindows[ g_nBroadcasterId ] && t.g_hoPlayerWindows[ g_nBroadcasterId ].hasOwnProperty('presentation_state')
 && t.g_hoPlayerWindows[ g_nBroadcasterId ].presentation_state == FCS.EVSESSION_PRIVATE && ( 10000 > oTime.getTime() - FcAcceptPrivate.nPrivateTimer ) ) { ChatQueue.Append("<b>Please end your private before changing rooms.</b><br>"); t.Log('LoadPlayer: returning, in token session'); return; } var nNewBroadcasterId = parseInt(hOptions['broadcaster_id'] ) || 0; if(Lounge.bIsLoaded && Lounge.hSettings['lounge_auto_click_link'] & LOUNGE_MASK_LOUNGE_MODE && Lounge.isListClick(event) ) { t.Log('LoadPlayer: returning, lounge cycle'); Lounge.VideoCycler.Cycle(nNewBroadcasterId ); return; } if(Lounge.oTimer ) clearTimeout(Lounge.oTimer ); mfcChatCommandHandlers.tipstop(); if(! UCRPlayer.bIsLoaded && ! Lounge.bIsLoaded ) { FcListChan.bShowLoungeGreeting = false; } UCRPlayer.bIsLoaded = false; var bLoungeTransition = false; if(t.g_hLoungeIds[ nNewBroadcasterId ] ) { bLoungeTransition = Lounge.bIsLoaded == false; Lounge.bIsLoaded = true; } else if(t.g_hUsers[ nNewBroadcasterId ] && t.g_hUsers[ nNewBroadcasterId ]['access_level'] != 4 ) {
 if(! t.UCR.hRooms[ nNewBroadcasterId + FCS.CHANNEL_ID_START ] ) { nNewBroadcasterId = 0; } else { UCRPlayer.hRoom = t.UCR.hRooms[ nNewBroadcasterId + FCS.CHANNEL_ID_START ]; UCRPlayer.bIsLoaded = true; if(UCRPlayer.hRoom.video == 1 ) { bLoungeTransition = Lounge.bIsLoaded == true; Lounge.bIsLoaded = false; if(UCRPlayer.hRoom.originator_id == t.g_hSelf.user_id ) { if(t.g_hWindows['broadcast'] && t.g_hWindows['broadcast'].window ) { t.g_hWindows['broadcast'].window.g_bCloseWindow = true; } } } else { bLoungeTransition = Lounge.bIsLoaded == false; Lounge.bIsLoaded = true; } } } else { bLoungeTransition = Lounge.bIsLoaded == true; Lounge.bIsLoaded = false; Lounge.nPreviousModelId = Lounge.nModelId; Lounge.nModelId = 0; } LoadPlayer.bVideoUnload = false; ModelMenuBar.Message.nLimiter = 0;
 ChatBox.bIgnoreTop = false; if(AutoNext.isActive() && ! hOptions.auto_advance ) { AutoNext.Toggle(false ); } if(ToggleVideo.hVideoDisabled.lounge === undefined ) ToggleVideo.hVideoDisabled.lounge = t.g_hSelf.hide_video; if(ToggleVideo.hVideoDisabled.model_rooms === undefined ) ToggleVideo.hVideoDisabled.model_rooms = t.g_hSelf.hide_video; if(t.g_hQS.search ) { ModelMenuBar.Search.sQuery = t.g_hQS.search.replace(/[^\w\s,]/g,''); t.g_hQS.search = ''; } var nDelay=0; if(! t ) { nDelay = 1; } if(! nDelay && ! t.g_hoPlayerWindows ) { nDelay = 2; } if(! nDelay && ! window.g_bPlayerHTMLLoaded ) { nDelay = 3; } if(! nDelay && ( sAction == "player" && nNewBroadcasterId && ! t.g_hUsers[nNewBroadcasterId] ) ) { nDelay = 4; } if(! nDelay && ( nNewBroadcasterId > 0 && ! t.g_hUsers[nNewBroadcasterId] ) ) { nDelay = 5; } if(! nDelay && ( ! t.g_bLoginDone && nNewBroadcasterId > 0 ) ) { nDelay = 6; } if(nDelay ) { if(! t.GetEl('online_broadcasters',document) ) { LoadHomepage(); } setTimeout(function(){ LoadPlayer(LoadPlayer.sActionRetainer, LoadPlayer.hOptionsRetainer );},100); t.Log('LoadPlayer: returning, delay #' + nDelay ); return; } if(! Lounge.bIsLoaded && g_sPlayerMode == 'player' && g_nBroadcasterId > 0 && g_nBroadcasterId == nNewBroadcasterId && ! g_bPopupPlayer && ! hOptions.force ) { Log("Model " + g_nBroadcasterId + " already loaded."); t.Log('LoadPlayer: returning, model already loaded');
 return; } g_nBroadcasterId = nNewBroadcasterId; var g_nWindowName = PublicChannel(g_nBroadcasterId ); var sPreviousPlayerMode = g_sPlayerMode; if(g_nBroadcasterId > 0 ) { g_sPlayerMode = 'player'; } else { g_sPlayerMode = 'homepage'; } t.g_hGroupShowInitiators[ g_nBroadcasterId ] = new Array(); if(g_nBroadcasterId == t.g_hLoungeIds.Lounge10000 && t.g_hSelf['rewards_points'] < 10000 ) { location = 'user_banned.html'; return; t.Log('LoadPlayer: returning, user banned'); }
 if(LoadPlayer.nPreviousBroadcasterId > 0 && t.g_hoPlayerWindows[ LoadPlayer.nPreviousBroadcasterId ] ) { t.TxCmd(FCS.FCTYPE_JOINCHAN, t.g_nSessionId, 0, t.g_hoPlayerWindows[ LoadPlayer.nPreviousBroadcasterId ].room_channel, FCS.FCCHAN_PART); if(ChatOverlay && ChatOverlay.bEnabled ) ChatOverlay.remove_listeners(); var nLastModelId = bLoungeTransition ? Lounge.nPreviousModelId : LoadPlayer.nPreviousBroadcasterId; if(t.IsTokenSession(t.g_hoPlayerWindows[ LoadPlayer.nPreviousBroadcasterId ].presentation_state ) && ! ( t.g_hoPMWindows[nLastModelId] && t.g_hoPMWindows[nLastModelId].pm_video ) && ( t.g_hUsers[nLastModelId] && t.g_hUsers[nLastModelId].sessionid ) ) { t.TxCmd(FCS.FCTYPE_ENDSESSION, t.g_nSessionId, 0, t.g_hUsers[nLastModelId].sessionid, 0, null); } } if(g_sPlayerMode == 'player' && t.g_hoPlayerWindows && t.g_hoPlayerWindows[ g_nBroadcasterId ] && t.g_hoPlayerWindows[ g_nBroadcasterId ]['window'] ) { try {
 if(t.g_hoPlayerWindows[ g_nBroadcasterId ]['window'] != window ) { if(t.g_hoPlayerWindows[ g_nBroadcasterId ]['window'].opener) t.g_hoPlayerWindows[ g_nBroadcasterId ]['window'].close(); else t.g_hoPlayerWindows[ g_nBroadcasterId ]['window'].LoadPlayer('homepage', { broadcaster_id: 0 } ); } } catch(e) { } } if(! t.g_hoPlayerWindows[ nNewBroadcasterId ] ) { t.InitializePlayerWindowHash(nNewBroadcasterId ); } if(! t.g_hoPlayerWindows[ nNewBroadcasterId ]['window'] ) { t.g_hoPlayerWindows[ nNewBroadcasterId ]['window'] = window; t.g_hoPlayerWindows[ nNewBroadcasterId ]['handle'] = window; } if(LoadPlayer.nPreviousBroadcasterId != nNewBroadcasterId && t.g_hoPlayerWindows[ LoadPlayer.nPreviousBroadcasterId ] ) { delete t.g_hoPlayerWindows[ LoadPlayer.nPreviousBroadcasterId ]; RegisterWindow.renameWindow(PublicChannel(LoadPlayer.nPreviousBroadcasterId ), PublicChannel(nNewBroadcasterId ), window ); } var bHomepagePlayerTransition = false; if(( LoadPlayer.nPreviousBroadcasterId && ! g_nBroadcasterId ) || ( ! LoadPlayer.nPreviousBroadcasterId && g_nBroadcasterId ) ) { bHomepagePlayerTransition = true; } if(bHomepagePlayerTransition ) { mfcBroadcasterDisplay.hOptions.bPauseRefresh = false;
 mfcBroadcasterDisplay.sScrollingReferenceType = ''; } if(g_sPlayerMode == 'player' && t.g_hoPMWindows[g_nBroadcasterId] && t.g_hoPMWindows[g_nBroadcasterId]['window'] && t.g_hoPMWindows[g_nBroadcasterId]['window'].g_fVideoLoaded == true ) { t.g_hoPMWindows[g_nBroadcasterId]['window'].LoadVideo('pre_unload'); } if(g_sPlayerMode == 'player' && t.ModelHistory.Append && ! hOptions['history_click'] ) { setTimeout(function(){ t.ModelHistory.Append(g_nBroadcasterId ); }, 100 ); } if(g_UA.IE ) { mfcBroadcasterDisplay._InvalidateBroadcasterHtmlCache(); }; if(! g_bPopupPlayer && t.BrowserHistoryControl  ) { var sUsername = g_nBroadcasterId ? t.g_hUsers[g_nBroadcasterId]['username'] : 'Homepage'; if(window.history.pushState == undefined ) { if(g_UA.IE || g_UA.Firefox || g_UA.Opera ) { top.window.location.hash = sUsername; } } else if(! hOptions.historic_call ) { var nScrollPos = 0; var oEl; if(LoadHomepage.sTplName == 'homepage' ) nScrollPos = document.body.scrollTop; else if(oEl = GetEl('online_broadcasters_container') ) oEl.scrollTop; t.BrowserHistoryControl.Append({ load: 'player', broadcaster_id: g_nBroadcasterId }, sUsername ); } }
 if(t.g_hSelf['model_list_mode'] == 'scroll' ) { if(hOptions.start != undefined && hOptions.end != undefined ) { mfcBroadcasterDisplay.nModelsPerPage_Start = hOptions.start; mfcBroadcasterDisplay.nModelsPerPage_End = hOptions.end; } else { mfcBroadcasterDisplay.DynamicScroll_RestorePosition_Save(); } } clearTimeout(LoadPlayer.nDelayedRecommendations ); var bFrameReload = true; if(g_sPlayerMode == 'homepage' || sAction == "homepage" ) { if(LoadLayout.oChatImageControls ) { LoadLayout.oChatImageControls.deregister(); } mfcBroadcasterDisplay._RegulateBroadcasterHtmlCache(); mfcBroadcasterDisplay.hOptions.bPauseRefresh = false; LoadHomepage(); top.document.title = "Homepage - " + t.g_hPlatform.name; if(! g_bPopupPlayer && t.ExtraMenuSelector ) { t.ExtraMenuSelector.UpdateFeature(0, 'passive' ); } if(t.g_hSelf.access_level == 0 && ! t.TogglePersonalMenu.bUserSpecified && ! g_bPopupPlayer ) { t.TogglePersonalMenu.Execute({ display: 1, render_only: true }); } } else { if(t.g_hSelf['show_header'] == 2 && ! g_bPopupPlayer && sPreviousPlayerMode != 'player' ) { t.ToggleHeader({ hide: true, render_only: true }); } if(t.g_hSelf.access_level == 0 && ! t.TogglePersonalMenu.bUserSpecified && ! g_bPopupPlayer ) { t.TogglePersonalMenu.Execute({ display: 0, render_only: true });
 } top.document.title = t.g_hUsers[g_nBroadcasterId].username + " - Chat Room - " + t.g_hPlatform.name; if(! g_bPopupPlayer && t.ExtraMenuSelector ) { var nDelay = isInViewport(GetEl('recommend_extra_menu') ) ? 2500 : 10000; LoadPlayer.nDelayedRecommendations = setTimeout(function() { t.Recommend.Request(GetBroadcasterId(), 'passive' ); LoadRecommendations(); },nDelay ); } if(t.g_hSelf['previous_video_size'] ) { t.g_hSelf['video_size'] = t.g_hSelf['previous_video_size']; delete t.g_hSelf['previous_video_size']; } if(g_UA.Opera ) { document.body.style.overflow = 'hidden'; } if(! t.g_hUsers[g_nBroadcasterId] ) { alert("player called but user hash doesnt exist for: " + g_nBroadcasterId + ", redirecting to homepage"); LoadPlayer("homepage"); } PeopleBox.Reset({ self_id: t.g_hSelf.user_id, channel_owner_id: g_nBroadcasterId }); g_nChannel = PublicChannel(g_nBroadcasterId ); t.inheritPresentationState(g_nBroadcasterId, t.g_hoPMWindows, t.g_hoPlayerWindows); var nChannelJoinMode = FCS.FCCHAN_JOIN; if(! hOptions['suppress_history'] ) nChannelJoinMode |= FCS.FCCHAN_HISTORY; t.g_hoPlayerWindows[ g_nBroadcasterId ].room_channel = PublicChannel(g_nBroadcasterId ); t.TxCmd(FCS.FCTYPE_JOINCHAN, t.g_nSessionId, 0, t.g_hoPlayerWindows[ g_nBroadcasterId ].room_channel, nChannelJoinMode ); PeopleBox.Signal_BatchJoin_Initiating(); if(! GetEl('videochat_table') ) { LoadLayout(); }
 if(Lounge.bIsLoaded ) { Lounge.hSettings['lounge_auto_click_link'] = t.g_hSelf['lounge_auto_click_link']; if(! UCRPlayer.bIsLoaded && t.g_hSelf['access_level'] != 2 && t.g_hSelf['access_level'] != 5 ) { t.Log('LoadPlayer: returning, UCR access denied'); return; } Lounge.VideoCycler.Init(hOptions); LoadBackground(); ChatQueue.Append('reset'); LoadPlayerMenu(); RefreshSessionState(); setTimeout(function(){ LayoutSizing.size_online_model_area('force') }, 100 ); } else { { bFrameReload = false; ChatQueue.Append('reset'); LoadVideo(hOptions ); LoadPlayerMenu(); RefreshSessionState(); if(! g_UA.Android ) { if(typeof(LoadPlayer.OnlineBroadcasterList_Timer) !== 'undefined' ) clearTimeout(LoadPlayer.OnlineBroadcasterList_Timer); } }
 LoadBackground(); } scrollTo(0,0); ChatBox.ScrollToBottom('force1'); ChatBox.bInitialChatLoading = 1; setTimeout(function() { ChatBox.bInitialChatLoading = 0; }, 7000 ); RoomHeading.render(); WhiteboardNotice({ mode: 'init'}); AutoNotes_Player.Process(g_nBroadcasterId ); IframeContent.autoLoad(); ToggleVideo.HideAll(); if(t.g_bChatOverlayMode || ChatOverlay.bEnabled ) { ChatOverlay.toggle(true);
 } if(! hOptions.do_not_retain_last_viewed ) { if(AdvanceRoom.aVisitedModels == undefined) { AdvanceRoom.aVisitedModels = new Array(); } AdvanceRoom.aVisitedModels.push(LoadPlayer.nPreviousBroadcasterId ); } mfcChatCommands.config.text_input = document.getElementById('message_input'); ModelMenuBar.Refresh(); RefreshMessageBar(); if(! LoadPlayer.nPreviousBroadcasterId ) { SlimMode(); } setTimeout(PlatformNotification, 1500 ); } LoadPlayer.nPreviousBroadcasterId = g_nBroadcasterId; if(! g_bPopupPlayer ) { if(bFrameReload && ModelMenuBar.Search.sQuery ) { mfcBroadcasterDisplay.DynamicScroll_Configure({ detach_scroll_events: 1 } ); ModelMenuBar.Search.Execute(); } else if(t.g_hSelf['model_list_mode'] == 'scroll' && bHomepagePlayerTransition && ! t.g_hSelf.single_page_scroll
 && ! t.g_hSelf.single_page_website ) { LayoutSizing.size_online_model_area('force'); OnlineBroadcasterList.Refresh('force'); mfcBroadcasterDisplay.DynamicScroll_RestorePosition_Recall(); } else if(bHomepagePlayerTransition && t.g_hSelf['single_page_website'] && g_sPlayerMode == 'player' ) { setTimeout(function() { OnlineBroadcasterList.Refresh('reset'); }, 10 ); } else if(! bHomepagePlayerTransition && g_sPlayerMode == 'player' && ! Lounge.bIsLoaded ) { mfcBroadcasterDisplay.ChangeSelected(g_nBroadcasterId ); } else { OnlineBroadcasterList.Refresh('reset'); } } if(g_sPlayerMode == 'player' && t.g_hUsers[ g_nBroadcasterId ].roomHelper == t.g_hSelf.user_id ) { g_roomHelper.setParam({ nModel: g_nBroadcasterId }); g_roomHelper.UpdateExternals(); } if(t.g_hQS.simulate_countdown && g_nBroadcasterId ) setTimeout(function() { t.SimulateCommand(g_nBroadcasterId ); }, 5000 ); NightMode_Player.ApplyStyle(); if(g_inChatPurchase && typeof(g_inChatPurchase.deregister) === 'function' ) g_inChatPurchase.deregister(); g_inChatPurchase = new MfcInChatPurchase({ callback_message_func: function(msg ) { ChatQueue.Append("<div class=inChatPurchase>" + msg + "</div>"); }, get_token_func: function(){ return t.g_hSelf.token; }, get_user_tokens_remaining_func: function(){ return t.g_hSelf.tokens; }, get_purchase_link_func: function(){ return t && t.A('purchase'); } });}t.events.on('ChatOptions.SetFontSize',function(){
 var size = t.g_hSelf.font_size_chatroom && t.g_hSelf.font_size_chatroom.replace(/-/g,'_'); var els = document.getElementsByClassName('chat_contents'); for(var a=0; a < els.length; a++ ) { for(var b=0; b < els[a].classList.length; b++ ) { if(els[a].classList[b].indexOf('chat_font_size_') > -1 ) els[a].classList.remove(els[a].classList[b] ); } els[a].classList.add('chat_font_size_' + size); }});t.events.on('ChatOptions.HideChatElement',function(opts ){ opts = opts || {}; var els = document.getElementsByClassName(opts.container_class); for(var a=0; a < els.length; a++ ) { if(t.g_hSelf[opts.key] ) { els[a].classList.add(opts.hide_class); } else { els[a].classList.remove(opts.hide_class); } }});function PlatformNotification(){ var hUser = t.g_hUsers[ g_nBroadcasterId ]; if(! hUser ) { return; } var sMsg=''; if(hUser.platform_id != t.g_hPlatform.id && hUser.state < FCS.FCVIDEO_RX_IDLE ) { sMsg += "<br><br><span class=user_style style=\"" + MfcCustomFonts.prototype.get_style(hUser) + "\">"; }
 if(sMsg ) ChatQueue.Format_Append(sMsg, 0, { 'chat_style':'chat_command' } );}var NightMode_Player = { current_state: false, previous_styles: { body: {} }};NightMode_Player.ApplyStyle = function(){ if(NightMode_Player.current_state === t.NightMode_Top.enabled ) { return false; } NightMode_Player.current_state = t.NightMode_Top.enabled; if(! NightMode_Player.previous_styles.body.background ) { NightMode_Player.previous_styles.body.background = document.body.style.background; } if(t.NightMode_Top.enabled ) { document.body.style.background = ''; document.body.style.backgroundColor = '#' + t.g_hSelf.night_mode_color; var oEl; if(oEl = GetEl('online_broadcasters_list') ) { oEl.style.background = ''; } PopModelIndex.colors[FCS.FCVIDEO_TX_PVT] = '#555555'; PopModelIndex.colors[FCS.FCVIDEO_TX_GRP] = '#115511'; PopModelIndex.colors[FCS.FCVIDEO_TX_CLUB] = '#115511'; PopModelIndex.colors[FCS.FCVIDEO_TX_IDLE] = ''; PopModelIndex.colors['new_model'] = '#997733'; } else { document.body.style.background = NightMode_Player.previous_styles.body.background; } NightMode.Apply(); LoadLayout.SetInputFont(); LoadBackground(); return true;};NightMode_Player.Execute = function(){ if(! NightMode_Player.ApplyStyle() ) { return; }};
function LoadRecommendations(nRecommendModelId ){ if(( t.g_hSelf.show_recommendations_first ) && ! mfcBroadcasterDisplay.hOptions.bPauseRefresh && ! g_UA.mobile && mfcBroadcasterDisplay.Get_scrollTop() < 200 && ( ( t.g_hSelf.model_list_mode == 'scroll' ) || ( t.g_hSelf.model_list_mode == 'page' && mfcBroadcasterDisplay.hOptions.nCurrentPage == 1 ) ) ) { if(nRecommendModelId ) { LoadRecommendations.nRecommendModelId = nRecommendModelId; } else { if(Lounge.bIsLoaded ) LoadRecommendations.nRecommendModelId = Lounge.nModelId; else if(g_nBroadcasterId > 0 ) LoadRecommendations.nRecommendModelId = g_nBroadcasterId; } var mfcRecommend; if(t.MfcRecommend ) mfcRecommend = new t.MfcRecommend({ callback: LoadRecommendations.Callback }); else mfcRecommend = new MfcRecommend({ callback: LoadRecommendations.Callback }); mfcRecommend.getRecommendations({ model_id: ( LoadRecommendations.nRecommendModelId || '' ), include_models_of_interest: 1 } ); }};LoadRecommendations.ClearBroadcasterListCache = function(hOrder ){ if ( typeof(hOrder) === 'object' && typeof(mfcBroadcasterDisplay) === 'object' ) { for ( var nX in hOrder ) { LoadRecommendations._bRefreshBroadcasterList = true; mfcBroadcasterDisplay.ClearBroadcasterHtmlCacheById(hOrder[nX]); }
 }};LoadRecommendations.Callback = function(result ){ LoadRecommendations._bRefreshBroadcasterList = false; if ( typeof(LoadRecommendations.hRecommendations) === 'object' && typeof(LoadRecommendations.hRecommendations.order) === 'object' ) { bRefreshList = true; LoadRecommendations.ClearBroadcasterListCache(LoadRecommendations.hRecommendations.order); } if(result && result.result ) { LoadRecommendations.hRecommendations = result.result; LoadRecommendations.ClearBroadcasterListCache(LoadRecommendations.hRecommendations.order); } if ( LoadRecommendations._bRefreshBroadcasterList ) { OnlineBroadcasterList.Refresh(); } if(t.g_hSelf.model_list_mode == 'scroll' ) mfcBroadcasterDisplay.DynamicScroll_RestorePosition_Recall();};LoadRecommendations.GetRecommendations = function(result ){ return LoadRecommendations.hRecommendations;};t.events.onRx(FCS.FCTYPE_GUESTCOUNT,function(fcMsg) { FcGuestCount(fcMsg) }, window.name );function FcGuestCount(fcMsg ){ if(PublicChannel(g_nBroadcasterId) != fcMsg.to ) { return; } if(PeopleBox && PeopleBox.SetGuestCount ) { PeopleBox.SetGuestCount(fcMsg.arg1 ); }} t.events.onRx(FCS.FCTYPE_LISTCHAN, function(fcMsg ) { if(g_nBroadcasterId == t.GetRoomOwnerId(fcMsg.arg2 ) ) FcListChan();}, window.name );function FcListChan(){ ChatBox.ScrollToBottom('force2'); if(! FcListChan.bShowLoungeGreeting ) { var sRoomMessage = ''; if(UCRPlayer.bIsLoaded && ! UCRPlayer.hRoom.video )
 { sRoomMessage = "<b>Welcome to " + "\"<span style=\"" + UCRPlayer.hRoom.name_font_style + "\"><b>" + UCRPlayer.hRoom.name + "</b></span>\"" + "<br><br><b>Note:</b> the " + t.g_hPlatform.performer + "s on camera do not see the messages you type in this room." } else if(Lounge.bIsLoaded ) { sRoomMessage = "<b>Welcome to the " + t.g_hLoungeIds[ g_nBroadcasterId ] + ".</b> " + "This is a special room where you can visit with other Premium members while browsing the site's best and newest " + t.g_hPlatform.performer + "s." + "<br><br><b>Note:</b> the " + t.g_hPlatform.performer + "s on camera do not see the messages you type in this room."; } if(sRoomMessage ) { ChatQueue.Append("<div class=emphasized_bg style=\"border:4px solid #F3F3F3;padding:13px;margin:10px 8px 6px 0px;-webkit-border-radius:6px;-moz-border-radius:6px;border-radius:6px;\">" + sRoomMessage + "</div><br>"); } FcListChan.bShowLoungeGreeting = true; }}var AutoNotes_Player = {};AutoNotes_Player.Process = function(nUserId ){ if(t.g_hSelf['access_level'] < 1 ) return; if(! ( t.g_hSelf.display_notes_automatically & g_hAutoNotesBits['automatic_notes_chatroom'] ) ) return; clearTimeout(AutoNotes_Player.nTimer ); AutoNotes_Player.nTimer = setTimeout(function() { AutoNotes_Player.Process_Delay(nUserId); }, 1000 );};AutoNotes_Player.Process_Delay = function(nUserId ){ AutoNotes_Player.oReq = new XMLHttpRequest(); var qs = Math.random(); var apiUrl = ( MfcClientRes && MfcClientRes.apiUrl ) || ( "//api." + t.g_hPlatform.domain ); AutoNotes_Player.oReq.open("GET", apiUrl + "/userNotepad/" + nUserId ); AutoNotes_Player.oReq.withCredentials = true; AutoNotes_Player.oReq.onreadystatechange = () => { if ( AutoNotes_Player.oReq.readyState !== 4 ) { return; } var res = t.ParseJSON(AutoNotes_Player.oReq.responseText );
 if(! res || ! res.result ) { return; } ChatQueue.Append(t.AutoNotes.getHtml(res.result, window.name ) ); }; AutoNotes_Player.oReq.send();};var UCRPlayer = { bIsLoaded: false};var RoomTopic = { sRoomTopic: '', nPopupTimer: 0, hUser: {}};RoomTopic.topic_html = function(){ if(t.g_hSelf.show_chat_header_topic == 0 ) { return ''; } RoomTopic.hUser = t.g_hUsers[ GetBroadcasterId() ]; RoomTopic.sRoomTopic = RoomTopic.condition_topic(RoomTopic.hUser.topic || '' ); var sHtml=''; if(RoomTopic.sRoomTopic && typeof RoomTopic.sRoomTopic != 'undefined' && RoomTopic.sRoomTopic != 'undefined') { sHtml = " <span class=user_style style=\"" + MfcCustomFonts.prototype.get_style(RoomTopic.hUser ) + "\"> " + ProcessDynamicTopic(RoomTopic.hUser, RoomTopic.sRoomTopic ) + " </span> "; } else { sHtml = "<span style=\"color:#999999;\"><i>No topic set</i></span>"; } return sHtml;};RoomTopic.condition_topic = function(sTopic ){ return ConditionString(sTopic,{ remove_html: true, break_long_strings: true, link_affiliated_sites: true } );};RoomTopic.render_topic = function(hOptions ){ hOptions = hOptions || {}; RoomTopic.hUser = t.g_hUsers[ GetBroadcasterId() ];
 if(! RoomTopic.hUser ) { return; } if(LoadVideo.currentlyDisplayedBroadcasterId && LoadVideo.currentlyDisplayedBroadcasterId != RoomTopic.hUser.user_id ) { setTimeout(function(){ RoomTopic.render_topic(hOptions); },2000); return; } if(! hOptions.force && FnRateLimit('RoomTopic.render_topic',1000,function(){ RoomTopic.render_topic(); }) ) { return; } var tc = SlimMode.enabled ? 'inline_topic_container' : 'topic_container'; var topic_container = GetEl(tc); if(topic_container && topic_container.innerHTML && RoomTopic.render_topic_current_topic == ( RoomTopic.hUser.topic + t.g_hSelf.show_chat_header_topic ) ) { return; } var centeringWrapper = SlimMode.enabled ? function(sH) {return sH} : function(sH) { return " <div style=\" position: relative; top: 50%; transform: translateY(-50%); \">" + sH + "</div>"; }; var sStyle = SlimMode.enabled ? 'position:absolute;top:4px;font-size:12px;height:16px;line-height:16px;overflow:hidden;' : '"font-size:11px;height:40px;vertical-align:middle;text-align:center;position:absolute;top:0px;left:0px;width:100%;cursor:pointer;"'; if(topic_container ) { if(t.g_hSelf.show_chat_header_topic == 0 ) { topic_container.style.display = 'none'; } else { if(! DivSwapEffect({ copy_class: 'topic_text', container: topic_container, html: centeringWrapper(RoomTopic.topic_html() ), speed: hOptions.auto_advance ? 1 : 0.2 }) ) { topic_container.innerHTML = " <div id=topic_text class=topic_text style="+sStyle+"\
 onClick=\"RoomTopic.popup_topic();\" onMouseOver=\"//RoomTopic.popup_topic_mouseover();\" onMouseOut=\"//RoomTopic.popup_topic_mouseout();\" > " + centeringWrapper(RoomTopic.topic_html() ) + " </div> "; } topic_container.style.display = 'table-cell'; } RoomTopic.render_topic_current_topic = RoomTopic.hUser.topic + t.g_hSelf.show_chat_header_topic; }};RoomTopic.show_topic = function(bMode ){ t.UserExtensions.Write('show_chat_header_topic', bMode ? 1 : 0 ); RefreshMessageBar(); LayoutSizing.size_online_model_area();};RoomTopic.popup_topic_mouseover = function(){ RoomTopic.nPopupTimer = setTimeout(RoomTopic.popup_topic , 500 );};RoomTopic.popup_topic_mouseout = function(){ clearTimeout(RoomTopic.nPopupTimer );};RoomTopic.popup_topic = function(){ var sHtml = " <div class=user_style style=\"max-width:300px;font-size:16px;word-wrap:break-word;opacity:0.98;" + MfcCustomFonts.prototype.get_style(RoomTopic.hUser || {} ) + "\"  onClick=\" g_oDhtmlPopup.close(); setTimeout(RoomTopic.popup_topic_mouseout, 0 ); \"> <div>" + RoomTopic.sRoomTopic + "</div> </div> "; g_oDhtmlPopup.open(sHtml, { top:20, left:20 } );};var RoomHeading = {};RoomHeading.render = function(sHeading ){ if(! sHeading ) { if(t.RoomHelper_TopHandlers && t.RoomHelper_TopHandlers.authorized_rooms[ g_nBroadcasterId ] ) { sHeading = "\
 <span style=\"cursor:pointer;\" onClick=\"RoomHelper_PlayerHandlers.AboutPopup();\"> <img style=\"position:absolute;top:1px;left:4px;\" src=\"" + t.g_hPlatform.image_url_cdn + "files/images/icons/shield.png\"> <span style=\"padding-left:20px;padding-right:2px;font-weight:bold;\"> <a href=# onClick=\"return false;\" >Room Helper</a> </span> </span> |  <a href=# onClick=\"RoomHelper_PlayerHandlers.OpenChangeTopicPopup(); return false;\">Set Topic</a>"; if(! sHeading ) { sHeading = "<span style=\"color:gray;font-style:italic;\">No topic is currently set.</span>"; } } } var oEl; if(oEl = GetEl('room_heading') ) { if(sHeading ) { oEl.innerHTML = sHeading; oEl.style.display = 'block'; } else { oEl.innerHTML = ''; oEl.style.display = 'none'; } }};function LoadBackground(){ var oEl; if(! ( oEl = GetEl('videochat_container_td') ) ) { return; } if(t.g_hSelf['chat_bg_color'] != '' && t.g_hSelf['chat_bg_color'] != undefined ) { var sBGColor = t.g_hSelf['chat_bg_color'].replace(/\W/,''); if(t.NightMode_Top.enabled ) { sBGColor = NightMode.HexInvert(sBGColor ); } oEl.style.background = "#" + sBGColor + " no-repeat scroll bottom right"; return; } if(g_UA.mobile ) { return; } var sUrl = ''; var nBGID; if(t.g_hQS['bg'] ) { sUrl = t.g_hPlatform.image_url_cdn + "files/images/chat_backgrounds/" + t.g_hQS['bg'] + ".jpg"; } else if(t.g_hUsers[ g_nBroadcasterId ]['chat_background_id'] > 0)
 { var nBGID = t.g_hUsers[ g_nBroadcasterId ]['chat_background_id']; sUrl = t.g_hPlatform.image_url_cdn + "files/images/chat_backgrounds/" + ( t.NightMode_Top.enabled ? 'inverted/' : '' ) + nBGID + ".jpg"; } else if(Lounge.bIsLoaded ) { sUrl = t.g_hPlatform.image_url_cdn + "files/images/misc/lounge_486121_bg" + ( t.NightMode_Top.enabled ? '.inverted' : '' ) + ".jpg"; } else { sUrl = t.g_hPlatform.image_url_cdn + "files/images/misc/chat_bg" + ( t.NightMode_Top.enabled ? '.inverted' : '' ) + ".jpg"; } oEl.style.background = "#fff url(" + sUrl + ") no-repeat scroll bottom right";}function GetSortedModelList(sMode, hOptions ){ hOptions = hOptions || {}; var aEligableModels = new Array(); var nFailSafeModel_HighCamScore = 0; var nFailSafeModel_nUserId = 0; if(sMode == 'all_available' ) { return mfcBroadcasters.FilteredAndSorted('public_and_current'); } var aCustomAlerts = []; if(sMode.match(/custom_alert_(\d+)/) && t.CustomAlerts && t.CustomAlerts.customAlerts && t.CustomAlerts.customAlerts[ RegExp.$1 ] ) { aCustomAlerts = t.CustomAlerts.customAlerts[ RegExp.$1 ].list; } for(var nUserId in t.g_hUsers ) { if(t.g_hUsers[ nUserId ]['access_level'] != 4 ) { continue; } if(t.g_hUsers[ nUserId ]['state'] >= FCS.FCVIDEO_RX_IDLE ) { continue; } if(t.g_hUsers[ nUserId ]['state'] == FCS.FCVIDEO_TX_AWAY ) { continue; }
 if(typeof(t.g_hUsers[ nUserId ]['state']) == 'undefined' ) { continue; } if(t.g_hLoungeIds[ nUserId ] ) { continue; } if(t.BlockedModelRegionCheck(nUserId ) && ! t.g_hUsers[ nUserId ]['friend'] ) { continue; } if(t.g_hUsers[nUserId]['hidden'] && ! t.g_hUsers[ nUserId ]['friend'] ) { continue; } if(t.g_hUsers[ nUserId ]['state'] == FCS.FCVIDEO_TX_IDLE && aCustomAlerts.length && aCustomAlerts.indexOf(parseInt(nUserId ) ) > -1 ) { aEligableModels.push(nUserId); } else if(sMode == 'all_online' && ( t.g_hUsers[nUserId]['state'] == FCS.FCVIDEO_TX_IDLE || t.g_hUsers[nUserId]['state'] == FCS.FCVIDEO_TX_PVT || t.g_hUsers[nUserId]['state'] == FCS.FCVIDEO_TX_CLUB || t.g_hUsers[nUserId]['state'] == FCS.FCVIDEO_TX_GRP ) ) { aEligableModels.push(nUserId); } else if(sMode == 'all_available' && t.g_hUsers[nUserId]['state'] == FCS.FCVIDEO_TX_IDLE ) { aEligableModels.push(nUserId); } else if(sMode == 'new' && t.g_hUsers[nUserId]['new_model']
 && t.g_hUsers[nUserId]['new_model'] <= t.g_hSelf.new_model_days ) { aEligableModels.push(nUserId); } else if(sMode == 'friends' && t.g_hUsers[nUserId]['state'] == FCS.FCVIDEO_TX_IDLE && t.g_hUsers[nUserId]['friend'] ) { aEligableModels.push(nUserId); } else if(( t.g_hUsers[nUserId]['rating'] == -1 || t.g_hUsers[nUserId]['rating'] > 9.9 || t.g_hUsers[nUserId]['cam_score'] > 1500 ) && sMode == 'best' && t.g_hUsers[nUserId]['state'] == FCS.FCVIDEO_TX_IDLE && ! t.g_hUsers[nUserId]['hidden'] ) { aEligableModels.push(nUserId); } else if(t.g_hUsers[nUserId]['state'] == FCS.FCVIDEO_TX_PVT && sMode == 'private' && ! t.g_hUsers[nUserId]['hidden'] ) { aEligableModels.push(nUserId); } else if(t.g_hUsers[nUserId]['state'] == FCS.FCVIDEO_TX_CLUB && sMode == 'clubshow' && ! t.g_hUsers[nUserId]['hidden'] ) { aEligableModels.push(nUserId); } else if(t.g_hUsers[nUserId]['state'] == FCS.FCVIDEO_TX_GRP && sMode == 'group' && ! t.g_hUsers[nUserId]['hidden'] ) { aEligableModels.push(nUserId); } else if(t.g_hUsers[nUserId]['state'] == FCS.FCVIDEO_TX_IDLE && sMode == 'all_available' && ! t.g_hUsers[nUserId]['hidden'] ) { aEligableModels.push(nUserId); } else if(sMode == 'friends_bookmarked' && ( t.g_hUsers[ nUserId ]['friend'] || t.g_hUsers[ nUserId ]['bookmarked'] ) ) { aEligableModels.push(nUserId); } else if(sMode == 'bookmarked' && t.g_hUsers[ nUserId ]['bookmarked'] ) { aEligableModels.push(nUserId); } else if(sMode == 'trending' ) { GetSortedModelList.TrendingRooms.KeepCurrent(); if(GetSortedModelList.TrendingRooms.trending.indexOf(parseInt(nUserId ) ) > -1 ) { aEligableModels.push(nUserId); } } else if(sMode == 'friends' && t.g_hUsers[ nUserId ]['friend'] ) { aEligableModels.push(nUserId); } else if(sMode == 'trending' || sMode == 'popular5' || sMode == 'popular25' || sMode == 'popular100' || sMode == 'most_popular' ) { aEligableModels.push(nUserId); } else if(sMode.indexOf('models_in_') === 0 && t.g_hUsers[nUserId]['continent'] == sMode.substr(10,2)
 ) { aEligableModels.push(nUserId); } if(nFailSafeModel_HighCamScore < t.g_hUsers[nUserId]['cam_score'] ) { nFailSafeModel_nUserId = nUserId; nFailSafeModel_HighCamScore = t.g_hUsers[nUserId]['cam_score']; } } if(aEligableModels.length == 0 ) { aEligableModels.push(nFailSafeModel_nUserId ); } var aRatingIDPairs = new Array(); var n = 0; var bReverse = false; for(var nK=0; nK < aEligableModels.length; nK++ ) { var nUserId = aEligableModels[nK]; if(! t.g_hUsers[nUserId] ) { continue; } var sCriteria = ''; if(hOptions.public_only && t.g_hUsers[nUserId].state != FCS.FCVIDEO_TX_IDLE ) continue; if(hOptions.alphabetical ) { sCriteria = t.g_hUsers[nUserId]['username'].toUpperCase(); } else if(sMode == 'trending' ) { GetSortedModelList.TrendingRooms.KeepCurrent(); sCriteria = GetSortedModelList.TrendingRooms.trending.indexOf(parseInt(nUserId ) ); } else if(sMode == 'popular5' || sMode == 'popular25' || sMode == 'popular100' || sMode == 'most_popular' ) { sCriteria = MfcStringUtilities.char_padding(t.g_hUsers[nUserId]['room_count'] || 0,5,0) || 0.0; bReverse = true; } else if(sMode == 'rating' || sMode == 'all_available' ) { sCriteria = MfcStringUtilities.char_padding(t.g_hUsers[nUserId]['cam_score'] || 0,5,0) || 0.0; bReverse = true; } else { if(t.g_hSelf.online_model_sort == 'popular_room' || t.g_hSelf.online_model_sort == 'rating' || t.g_hSelf.online_model_sort == 'creation_date' || t.g_hSelf.online_model_sort == 'newest_login' ) { bReverse = true; } sCriteria = mfcBroadcasters.DetermineSortKey(nUserId ); } aRatingIDPairs[n++] = sCriteria + " " + nUserId; } aRatingIDPairs.sort(); if(bReverse ) { aRatingIDPairs.reverse(); } if(sMode != 'all_available' && ( sMode == 'popular5' || sMode == 'popular25' || sMode == 'popular100' || sMode == 'most_popular' ) ) { var nHighestCount=0, nHighestId=0; var nLimit=100; if(sMode == 'popular5') { nLimit = 5; } else if(sMode == 'popular25') { nLimit = 25; } else if(sMode == 'popular100') { nLimit = 100; } for(var nK=0; nK < aRatingIDPairs.length; nK++ ) { var nUserId = aRatingIDPairs[nK].split(' ')[1]; if(sMode == 'popular' && t.g_hUsers[nUserId].room_count < ( sMode == 'most_popular' ? 1000 : 100 ) ) { nLimit = nK; break; } else if(sMode == 'most_popular' && t.g_hUsers[nUserId].room_count > nHighestCount ) { nHighestCount = t.g_hUsers[nUserId].room_count;
 nHighestId = nUserId; } } if(sMode == 'popular5' || sMode == 'popular25' || sMode == 'popular100' ) aRatingIDPairs = aRatingIDPairs.splice(0, nLimit || 1 ); else if(sMode == 'most_popular' ) aRatingIDPairs = [ ( 1 + ' ' + nHighestId ) ]; } var aSortedIDs = new Array(); for(var nK=0; nK < aRatingIDPairs.length; nK++ ) { aSortedIDs.push(aRatingIDPairs[nK].split(' ')[1] ); } return aSortedIDs;};GetSortedModelList.TrendingRooms = { trending: [], call_lock: false};GetSortedModelList.TrendingRooms.KeepCurrent = function(nMSecs ){ if(nMSecs ) { GetSortedModelList.TrendingRooms.nMSecs = nMSecs; } if(GetSortedModelList.TrendingRooms.call_lock ) { return; } setTimeout(function() { GetSortedModelList.TrendingRooms.call_lock = false; }, 5000 ); GetSortedModelList.TrendingRooms.call_lock = true; var nTerminate = 0; if(Lounge.bIsLoaded ) { nTerminate = 1; } else if(Lounge.bIsLoaded && Lounge.VideoCycler.sMode != 'trending' ) { nTerminate = 2; } else if(! Lounge.bIsLoaded && ! AutoNext.isActive() ) { nTerminate = 3; } if(nTerminate ) { clearTimeout(GetSortedModelList.TrendingRooms.nTimer ); return; } if(! GetSortedModelList.TrendingRooms.mfcTrendingRooms ) GetSortedModelList.TrendingRooms.mfcTrendingRooms = new MfcTrendingRooms(); GetSortedModelList.TrendingRooms.mfcTrendingRooms.getCounts({ callback: GetSortedModelList.TrendingRooms.Callback, lookback: 60 }); clearTimeout(GetSortedModelList.TrendingRooms.nTimer ); GetSortedModelList.TrendingRooms.nTimer = setInterval(GetSortedModelList.TrendingRooms.KeepCurrent, GetSortedModelList.TrendingRooms.nMSecs );};
GetSortedModelList.TrendingRooms.Callback = function(oRes ){ GetSortedModelList.TrendingRooms.trending = []; if(! oRes || ! oRes.order ) { return } for(var a = 0; a < oRes.order.length; a++ ) { if(! oRes.order[a] || ! oRes.data[ oRes.order[a] ] || ! t.g_hUsers[oRes.order[a]] ) { continue; } if(( GetSortedModelList.TrendingRooms.trending.length > 0 && oRes.data[ oRes.order[a] ].diff < 50 ) || GetSortedModelList.TrendingRooms.trending.length > 4 ) { break; } GetSortedModelList.TrendingRooms.trending.push(oRes.order[a] ); }};var Lounge = { oTimer: 0, nOffset: 0, oLoadVideo: 0, aPreviouslyViewedModels: new Array(), nModel: 0, bIsLoaded: false, hSettings: {}};Lounge.VideoCycler = { bDisable: 0, nInterval: 60, sMode: 'all_available', HaltAutoClick: 0};Lounge.VideoCycler.Init = function(hOptions ){ Lounge.VideoCycler.sMode = t.g_hSelf.lounge_video_cycle_mode || 'all_available'; if(hOptions['lounge_model_id'] ) Lounge.VideoCycler.Cycle(hOptions['lounge_model_id'],{ advance: 'halt', external_click: true }); else Lounge.VideoCycler.Cycle(0,{ advance: 'force' });};Lounge.VideoCycler.isActive = function(){ return ( ! t.g_hSelf['lounge_pause_mode'] ) && Lounge.bIsLoaded;};
Lounge.VideoCycler.Cycle = function(nModelId, hOptions ){ hOptions = hOptions || {}; var sAdvance = hOptions.advance; if(ClickDragVideo.resizeMode == 'video' ) { clearTimeout(Lounge.oTimer ); Lounge.oTimer = setTimeout(function(){ Lounge.VideoCycler.Cycle(0,{ advance: 'next', auto_advance: true }); }, 500 ); return; } if(Lounge.nModelId && Lounge.nModelId == nModelId && g_nBroadcasterId == LoadPlayer.nPreviousBroadcasterId ) { if(Lounge.bClickedOnceAlready && ! hOptions.external_click ) { Lounge.bClickedOnceAlready = false; Lounge.bIsLoaded = false; LoadPlayer('player',{ broadcaster_id: Lounge.nModelId, force: true, auto_advance: true }); return false; } else { Lounge.bClickedOnceAlready = true; Lounge.FlashLoungeModeLabel(); } } else { Lounge.bClickedOnceAlready = false; } if(Lounge.nModelId && sAdvance != 'last' ) { Lounge.aPreviouslyViewedModels.push(Lounge.nModelId ); } if(nModelId ) { Lounge.VideoCycler.HaltAutoClick = 1; setTimeout(function(){ Lounge.VideoCycler.HaltAutoClick = 0; }, 1000 ); } if(t.IsTokenSession(t.g_hoPlayerWindows[ g_nBroadcasterId ].presentation_state ) ) {
 RequestEndSession(); setTimeout(function(){ Lounge.VideoCycler.Cycle(nModelId)}, 500 ); return; } clearTimeout(Lounge.oTimer); clearTimeout(Lounge.oLoadVideo); var nOffset = nOffset || 1; var nModelId; var aSortedIDs; Lounge.VideoCycler.sToolTip = ''; if(nModelId ) { aSortedIDs = GetSortedModelList('all_available'); var nFoundOffset; for(var nK=0; nK < aSortedIDs.length; nK++ ) { if(aSortedIDs[nK] == nModelId ) { nFoundOffset = nK; } } if(nFoundOffset !== undefined ) { Lounge.nOffset = nFoundOffset; nModelId = aSortedIDs[ Lounge.nOffset ]; } else { nModelId = nModelId; } Lounge.VideoCycler.sToolTip = `Viewing ${t.g_hUsers[nModelId].username}`; } else if(sAdvance == 'last' && Lounge.aPreviouslyViewedModels.length > 0 ) { nModelId = Lounge.aPreviouslyViewedModels.pop(); Lounge.VideoCycler.sToolTip = `Viewing ${t.g_hUsers[nModelId].username}`; } else { if(Lounge.VideoCycler.sMode == 'trending'
 && sAdvance != 'delayed' && GetSortedModelList.TrendingRooms.trending.length == 0 ) { GetSortedModelList.TrendingRooms.KeepCurrent(t.g_hSelf.lounge_video_cycle_interval * 1000 ); setTimeout(function() { Lounge.VideoCycler.Cycle(0,{ advance: 'delayed' }); }, 1000 ); return; } if(Lounge.VideoCycler.sMode.match(/custom_alert/) && ( ! t.CustomAlerts.customAlerts || ! Object.keys(t.CustomAlerts.customAlerts ).length ) ) { GetSortedModelList.TrendingRooms.KeepCurrent(t.g_hSelf.lounge_video_cycle_interval * 1000 ); setTimeout(function() { Lounge.VideoCycler.Cycle(0,{ advance: 'delayed' }); }, 1000 ); return; } aSortedIDs = GetSortedModelList(Lounge.VideoCycler.sMode ); if(! aSortedIDs[ Lounge.nOffset ] ) { Lounge.nOffset = 0; } for(var nK=0; nK < aSortedIDs.length; nK++ ) { if(aSortedIDs[nK] == Lounge.nModelId ) { if(sAdvance == 'next' ) { Lounge.nOffset = parseInt(nK) + 1; } else if(sAdvance == 'back' ) { Lounge.nOffset = parseInt(nK) - 1; } } } if(Lounge.nOffset == aSortedIDs.length ) { Lounge.nOffset = 0; } if(Lounge.nOffset == -1 ) { Lounge.nOffset = aSortedIDs.length - 1;
 } nModelId = aSortedIDs[ Lounge.nOffset ]; if(t.g_hUsers[nModelId] ) Lounge.VideoCycler.sToolTip = `Viewing ${t.g_hUsers[nModelId].username}, feed #${Lounge.nOffset+1} out of ${aSortedIDs.length} feeds`; } if(t.VideoCycler.hModes[ Lounge.VideoCycler.sMode ] ) Lounge.VideoCycler.sToolTip += ( ' in the \'' + t.VideoCycler.hModes[ Lounge.VideoCycler.sMode ].long + '\' category'); if (t.g_hoPlayerWindows[ g_nBroadcasterId ].presentation_state == FCS.EVSESSION_VOYEUR) { RequestEndSession('voyeur'); } if(Lounge.nModelId != nModelId || sAdvance == 'force' ) { Lounge.nModelId = nModelId; if(event ) { LoadVideo({ 'broadcaster_id': Lounge.nModelId }); LayoutSizing.size_video(); } else { Lounge.oLoadVideo = setTimeout(function(){ LoadVideo({ 'broadcaster_id': Lounge.nModelId, auto_advance: hOptions.auto_advance }); LayoutSizing.size_video(); }, 200 ); } RefreshMessageBar(); LoadPlayerMenu(); if(! g_bPopupPlayer ) { mfcBroadcasterDisplay.ChangeSelected(Lounge.nModelId ); if(t.ExtraMenuSelector ) { t.Recommend.Request(Lounge.nModelId, 'passive' ); } } ModelMenuBar.Refresh(); if(['mfc_share_embed','bio','user_notepad','whiteboard'].indexOf(IframeContent.resource ) > -1 ) { setTimeout(()=>{ IframeContent(IframeContent.resource, { user_id: Lounge.nModelId, username: t.g_hUsers[ Lounge.nModelId ].username }, null ); },( Lounge.VideoCycler.isActive() ? 2500 : 1000 ));
 } } if(t.g_hSelf['lounge_pause_mode'] == 0 && sAdvance != 'halt' ) { if(! t.g_hSelf.lounge_video_cycle_interval ) { t.g_hSelf.lounge_video_cycle_interval = 60; } Lounge.oTimer = setTimeout(function(){ Lounge.VideoCycler.Cycle(0,{ advance: 'next', auto_advance: true }); }, t.g_hSelf.lounge_video_cycle_interval * 1000); } else { LoadRecommendations(); } };Lounge.VideoCycler.PauseToggle = function(nMode ){ clearTimeout(Lounge.oTimer); if(nMode != undefined ) { t.g_hSelf['lounge_pause_mode'] = nMode; } else { t.g_hSelf['lounge_pause_mode'] = t.g_hSelf['lounge_pause_mode'] ? 0 : 1; } t.UserExtensions.Write('lounge_pause_mode', t.g_hSelf['lounge_pause_mode'] ); RefreshMessageBar(); if(Lounge.VideoCycler.isActive() ) { Lounge.VideoCycler.Cycle(); }};Lounge.VideoCycler.IntervalControl = function(){ var aH = new Array(); aH.push("<a href=# onClick=\"Lounge.VideoCycler.Mode(); return false;\">" + t.g_hSelf.lounge_video_cycle_interval + " sec.</a> "); if(Lounge.VideoCycler.isActive() ) aH.push("<a href=# onClick=\"Lounge.VideoCycler.PauseToggle(); return false;\" class=highlight_bg >Stop</a>"); else aH.push("<a href=# onClick=\"Lounge.VideoCycler.PauseToggle(); return false;\" >Start</a>"); SetHTML('lounge_video_cycler_interval',aH.join(''), { 'force': true } ); var aH_slim = []; if(Lounge.VideoCycler.isActive() ) aH_slim.push("<img src=\"" + t.g_hPlatform.image_url_cdn + "files/images/icons/svg/pause.svg\" onClick=\" Lounge.VideoCycler.PauseToggle();\" style=\"cursor:pointer;height:10px;width:10px;opacity:0.5;margin-right:10px;background-color:yellow;padding:3px;margin-bottom:-3px;\" >"); else aH_slim.push("<img src=\"" + t.g_hPlatform.image_url_cdn + "files/images/svg/refresh.svg\" onClick=\"Lounge.VideoCycler.Mode();\" style=\"cursor:pointer;height:16px;width:16px;opacity:0.8;margin-right:6px;margin-bottom:-3px;\" title=\"Automatically cycle through chat rooms.\"></a>");
 SetHTML('lounge_video_cycler_interval_slim',aH_slim.join(''), { 'force': true } );};Lounge.VideoCycler.ChangeInterval = function(nInterval ){ g_oDhtmlPopup.close(); t.UserExtensions.Write('lounge_video_cycle_interval', nInterval ); RefreshMessageBar(); clearTimeout(Lounge.oTimer); Lounge.VideoCycler.Cycle();};Lounge.VideoCycler.sMode = 'all_available';if(t.g_hPlatform.id == PLAT_CAM ){ delete t.VideoCycler.hModes['popular100']; delete t.VideoCycler.hModes['new']; delete t.VideoCycler.hModes['private']; delete t.VideoCycler.hModes['group'];}Lounge.VideoCycler.Mode = function(){ DhtmlPrompt({ popup_options: { extra_content_class: 'video_controls' }, prompt_type: 'confirm', message: Lounge.VideoCycler.UIHtml(), callback: Lounge.VideoCycler.PauseToggle, ok_label: Lounge.VideoCycler.isActive() ? 'Stop' : 'Start', cancel_label: 'Close' });};Lounge.VideoCycler.UIHtml = function(){ var aH = [" <div style=font-size:13px;padding:10px;width:370px;> <b>Choose the " + t.g_hPlatform.performer + "s shown in the Lounge:</b> <br><br> <table width=370> "]; for(var sMode in t.VideoCycler.hModes ) { var long = t.VideoCycler.hModes[sMode].long; long = long.replace(/Custom Selection/, t.A('custom_alerts') + 'Custom Selection</a>'); aH.push(" <tr>\
 <td width=50 align=center> <input value=1 type=radio id=video_cycler_mode" + sMode + " name=video_cycler_mode " + ( Lounge.VideoCycler.sMode == sMode ? 'CHECKED' : '' ) + " onClick=\" Lounge.VideoCycler.SelectMode('" + sMode + "'); \" > </td> <td style=\"font-size:13px;cursor:pointer;\" onClick=\" GetEl('video_cycler_mode" + sMode + "').click();\">" + long + ".</td> </tr> "); } var aModelListRefreshSeconds = new Array(); var aSeconds = [5,10,15,30,60,120]; for(var nK=0; nK<aSeconds.length; nK++ ) { aModelListRefreshSeconds.push("<option " + ( t.g_hSelf.lounge_video_cycle_interval == aSeconds[nK] ? 'SELECTED' : '' ) + " value=" + aSeconds[nK] + ">" + aSeconds[nK] + "</option>"); } aH.push(" </table> <br><br> Advance to the next room every:  <select onChange=\" Lounge.VideoCycler.ChangeInterval(this.value);\"> " + aModelListRefreshSeconds.join('') + " </select> seconds. </div> "); return aH.join('');};Lounge.VideoCycler.SelectMode = function(sMode ){ Lounge.VideoCycler.sMode = sMode; t.UserExtensions.Write('lounge_video_cycle_mode', Lounge.VideoCycler.sMode ); Lounge.VideoCycler.Cycle(); LoadVideo({ 'reset' : true }); RefreshMessageBar();};Lounge.FlashLoungeModeLabel = function(){ var oEl = GetEl('lounge_mode_label'); if(! oEl ) { return; } if(! Lounge.lounge_mode_label_ClassName ) { Lounge.lounge_mode_label_ClassName = oEl.className; } oEl.className= Lounge.lounge_mode_label_ClassName + ' highlight_bg';
 setTimeout(function() { var oEl = GetEl('lounge_mode_label'); if(oEl ) { oEl.style.backgroundColor = '';} }, 2000 );};Lounge.isListClick = function(event ){ var listClick; try { var online_broadcasters = GetEl('online_broadcasters'); var text_list = GetEl('text_list'); listClick = ( online_broadcasters && event && online_broadcasters.contains(event.srcElement ) ) || ( text_list && event && text_list.contains(event.srcElement ) ); } catch(e){ console.log(e); }; return listClick;};function PopModelIndex(hOptions ){ hOptions = hOptions || {}; var sH = ""; var aSortedIds = GetSortedModelList('all_online',{ alphabetical: 1 }); var sRow = ''; var nCx = ''; var nFrameWidth = g_UA.IE ? document.getElementsByTagName('body')[0].clientWidth : window.innerWidth; var nPopupWidth = nFrameWidth - 400; var nCellWidth = 100; var nRows = hOptions['mode'] == 'full' ? 18 : 18; var nFontSize = hOptions['mode'] == 'full' ? 10 : 10; var now = new Date().getTime(); var nCols = 0; for(var nK=0; nK < aSortedIds.length; nK++ ) {
 var nUserId = aSortedIds[nK]; var hUser = t.g_hUsers[nUserId]; if(hUser['hidden'] ) { continue; } var sExtra = ''; if(hUser['state'] == FCS.FCVIDEO_TX_PVT ) { sExtra = 'background-color:' + PopModelIndex.colors[FCS.FCVIDEO_TX_PVT] + ';'; } else if(hUser['state'] == FCS.FCVIDEO_TX_GRP ) { sExtra = 'background-color:' + PopModelIndex.colors[FCS.FCVIDEO_TX_GRP] + ';'; } else if(hUser['state'] == FCS.FCVIDEO_TX_CLUB ) { sExtra = 'background-color:' + PopModelIndex.colors[FCS.FCVIDEO_TX_CLUB] + ';'; } else if(hUser['state'] != FCS.FCVIDEO_TX_IDLE ) { sExtra = 'background-color:' + PopModelIndex.colors[FCS.FCVIDEO_TX_IDLE] + ';'; } else if(hUser['new_model'] && hUser['new_model'] <= t.g_hSelf.new_model_days ) { sExtra = 'background-color:' + PopModelIndex.colors['new_model'] + ';'; } else if(( now - t.g_nInstanceTime > 180000 ) && ( now - hUser.broadcast_start_time < 180000 ) ) { sExtra = 'background-color:' + PopModelIndex.colors['recent_login'] + ';'; } if(hUser['friend'] ) { sExtra += 'font-weight:bold;'; } sRow += "<div style=\"" + sExtra + "\">"; if(hOptions.lounge_mode ) { sRow += "<a href=# class=cpo_listeners data-cpouid='"+nUserId+"' data-cpo_left_click=lounge >"; } else { sRow += "<a href=# class=cpo_listeners data-cpouid='"+nUserId+"' data-cpo_left_click=player onClick=\" return PopModelIndex.clickModel(event," + nUserId + "); \" >"; } sRow += hUser['username'] + "</a></div>"; nCx++;
 if(nCx % nRows == 0) { nCols++; sH += "<td valign=top style='font-size:" + nFontSize + "px;padding-right:10px;width:" + nCellWidth + "px;'>" + sRow + "</td>"; sRow = ''; } } sH += "<td valign=top style='font-size:" + nFontSize + "px;padding-right:10px;width:" + nCellWidth + "px;'>" + sRow + "</td>"; var sTitle = hOptions.lounge_mode ? 'Lounge Video Select' : 'Chat Rooms'; if(Lounge.bIsLoaded && ! hOptions.lounge_mode && Lounge.hSettings['lounge_auto_click_link'] & LOUNGE_MASK_LOUNGE_MODE ) { sTitle += " (Lounge-Mode Model List)"; } var sPopupContent = " <b>" + sTitle + "</b><br> <div id=text_list style=\"height:250px;width:" + nPopupWidth + "px;overflow:auto;border:1px solid #CCCCCC;border-width:0px 1px;\"> <table > " + sH + " </table> </div> "; if(t.g_hPlatform.id == PLAT_MFC ) { sPopupContent += " <div style='font-size:" + nFontSize + "px;font-weight:normal;padding:8px 0px;'> <span style=background-color:" + PopModelIndex.colors['new_model'] + ";padding:5px;>New " + t.g_hPlatform.Performer + "</span> <span style=background-color:" + PopModelIndex.colors['recent_login'] + ";padding:5px;>Recent Login</span> <span style=background-color:" + PopModelIndex.colors[FCS.FCVIDEO_TX_GRP] + ";padding:5px;>Group Show</span> <span style=background-color:" + PopModelIndex.colors[FCS.FCVIDEO_TX_CLUB] + ";padding:5px;>Club Show</span> <span style=background-color:" + PopModelIndex.colors[FCS.FCVIDEO_TX_PVT] + ";padding:5px;>In Private</span> (<span style=font-weight:bold;padding:5px;>Friends in Bold</span>) "; if(! hOptions.lounge_mode ) { sPopupContent += " <input type=checkbox onClick=\" PopModelIndex.KeepOpenAfterClick(this.checked); \" " + ( t.g_hCk.pmi_retain ? 'checked':'' ) + "> Keep this popup open "; } sPopupContent += " </div> "; } else
 { sPopupContent += " <div style='font-size:" + nFontSize + "px;font-weight:normal;padding:8px 0px;'> (<span style=font-weight:bold;padding:5px;>Friends in Bold</span>) </div> "; } if(PopModelIndex.popup ) { PopModelIndex.popup.close(); } var hOptions = { no_close_on_mouseout: true, provide_close_button: true, width: nPopupWidth, event: event }; if(g_UA.iOS ) { hOptions.left = 0; } PopModelIndex.popup = new MfcDhtmlPopup({ extra_content_class: 'video_controls', instance_name: 'PopModelIndex' }); PopModelIndex.popup.open(sPopupContent, hOptions );};PopModelIndex.clickModel = function(event, nUserId ){ if(! t.g_hCk.pmi_retain ) { PopModelIndex.popup.close(); }};PopModelIndex.KeepOpenAfterClick = function(bChecked ){ t.SetCookie('pmi_retain', bChecked ? 1 : 0 ,'Thu, 21-Jan-2021 00:00:01 GMT');};PopModelIndex.colors = {};PopModelIndex.colors[FCS.FCVIDEO_TX_PVT] = '#FFAAAA99';PopModelIndex.colors[FCS.FCVIDEO_TX_GRP] = '#55FF55';PopModelIndex.colors[FCS.FCVIDEO_TX_CLUB] = '#55FF55'; PopModelIndex.colors[FCS.FCVIDEO_TX_IDLE] = '';PopModelIndex.colors['new_model'] = '#FFFF44';PopModelIndex.colors['recent_login'] = '#AAAAAAAA';function FocusOnInput(){ if(g_UA.tablet || g_UA.mobile ) { return; } var aFocusRetry = new Array(100,500); for(var nK=0; nK < aFocusRetry.length; nK++ ) setTimeout(FocusOnInputHelper, aFocusRetry[sK] );
 if(t.g_fConnected == true && location.search.indexOf('no_focus=1') == -1 ) { window.focus(); }}function FocusOnInputHelper(){ var oEl = GetEl('message_input'); if(! oEl || location.search.indexOf('no_focus=1') > -1 ) return; oEl.focus(); oEl.value = oEl.value;}function LoadHomepage(nW){ if(LoadVideo.clientVideo && LoadVideo.clientVideo.Disconnect ) { LoadVideo.clientVideo.Disconnect(); LoadVideo.clientVideo = null; } OnlineBroadcasterList.bFilterSortOptionsLoaded = 0; Lounge.nModelId = 0; TagsHandlers.bFrameLoaded = false; if(! GetEl("player_main") ) { return; } var hSwaps = {}; hSwaps['online_model_controls'] = "<div id=online_broadcaster_controls class=online_broadcaster_controls></div>"; hSwaps['filter_sort_options'] = "<div class=filter_sort_options id=filter_sort_options></div>"; LoadHomepage.sTplName = 'homepage'; SetHTML('player_main',MfcStringUtilities.parse_template(HTMLTemplates(LoadHomepage.sTplName ),hSwaps,{ cleanup_unused_tags:1 })); var oElHomepageUpdate = GetEl('homepage_update'); if(t.g_hSelf['access_level'] == 4 ) { oElHomepageUpdate.style.display = 'block'; SetHTML('homepage_update',OnlineBroadcasterList.ModelNoticeHTML()); } else if(t.g_bLoginDone
 && top.document.location.hash.match(/(\w+)/) ) { var sModelName = RegExp.$1; var nModelId = ''; for(var nUserId in t.g_hUsers) { if(t.g_hUsers[nUserId]['username'] && t.g_hUsers[nUserId]['username'].toLowerCase() == sModelName.toLowerCase()) { nModelId = nUserId; } } if ( ( ! t.g_hUsers[nModelId] || ( t.g_hUsers[nModelId] && t.g_hUsers[nModelId]['access_level'] != 4 ) ) && ! t.UCR.hRooms[ nModelId + FCS.CHANNEL_ID_START ] && sModelName != 'Homepage' ) { oElHomepageUpdate.style.display = 'block'; SetHTML('homepage_update',g.container("top,content_container") + g.heading(sModelName + " Is Offline","offline_girl."+"gif") + "<div class=content><br>" + sModelName + " is offline at the moment. View her <a href=\"//profiles." + t.g_hPlatform.domain + "/" + sModelName + "\" target=_blank>Profile</a> and <a href=\"https://share.myfreecams.com/"+sModelName+"\" target=_blank>MFC Share</a> to learn more about her and see when she will return.<br><br></div>" + g.container("bottom,content_container")); } } else if(! t.g_hCk['username'] && t.g_hPlatform.id == PLAT_MFC && ! t.g_hCk['gw'] ) { oElHomepageUpdate.style.display = 'block'; SetHTML('homepage_update', g.container("top,content_container") + g.heading("Welcome To " + t.g_hPlatform.name,"smily.gif") + "<div class=content><div> Hello, and welcome to " + t.g_hPlatform.name + "! There is a lot to explore, so take your time and make yourself at home. <img src=\"" + t.g_hPlatform.image_url_cdn + "files/images/icons/emoticon_icon.png\"> </div> <div style=padding-top:5px;>Visit the " + A('mobile') + "Mobile Site</a> on your phone at " + A('mobile') + "m." + t.g_hPlatform.domain + "</a>.&nbsp; Please " + A('contact') + "Contact Us</a> for anything at all.&nbsp; Have fun!</div></div>" + g.container("bottom,content_container")); t.SetCookie('gw','1','Thu, 21-Jan-2021 00:00:01 GMT'); } else if(! t.UpdateRead && top.location.search.indexOf('code=') > -1 ) { oElHomepageUpdate.style.display = 'block'; SetHTML('homepage_update', g.container("top,content_container") + g.heading("Welcome To " + t.g_hPlatform.name ,"smily.gif") 
 + "<div class=content><br><b>Status Update:</b> Thanks for confirming your registration. You are now a member of " + t.g_hPlatform.name + " and we have logged you in. Enjoy!<br><br> </div>" + g.container("bottom,content_container") ); t.UpdateRead = 1; } if(! g_UA.mobile && t.g_sConnectionMode == 'ajax' ) { oElHomepageUpdate.style.display = 'block'; var sHtml = g.container("top,content_container") + "<div style=\"padding:4px 10px;\">You are connected to " + t.g_hPlatform.name + " through <b>" + t.g_sConnectionMode + "</b>. If you have problems viewing video, please <a href=https://wiki." + t.g_hPlatform.domain + "/wiki/Technical_Help#Connection_modes target=_blank>learn more about connection modes and how to fix this issue</a>.</div>"; + g.container("bottom,content_container"); SetHTML('homepage_update',sHtml); } ModelMenuBar.Refresh(); OnlineBroadcasterList.Refresh('force'); LoadRecommendations(); if(g_UA.Firefox || t.g_hSelf.single_page_website ) { LayoutSizing.size_online_model_area(); }} function VideoHeight(){ var hTop = FindAbsoluteOffset('video_top'); var hBottom = FindAbsoluteOffset('video_bottom'); if(typeof(hTop ) != 'object' || typeof(hBottom ) != 'object' ) { return 375; } return hBottom['y'] - hTop['y'];}function LoadLayout(nW){ var hSwaps = {}; TagsHandlers.bFrameLoaded = false; OnlineBroadcasterList.bFilterSortOptionsLoaded = 0;
 var nVideoSize = g_UA.IE ? 1 : t.g_hSelf['video_size']; if(g_nBroadcasterId ) { hSwaps['width'] = GetVideoDimensions()['width']; hSwaps['height'] = GetVideoDimensions()['height']; if(t.g_hSelf.hide_chat ) { hSwaps['chat_container_style'] = "display:none;"; } else { hSwaps['chat_container_message_style'] = "display:none;"; } if(t.g_hSelf['hide_people'] ) { hSwaps['people_content_td_style'] = "display:none;"; hSwaps['people_reveal_style'] = "display:block;"; } else { hSwaps['people_content_td_style'] = ""; hSwaps['people_reveal_style'] = "display:none;"; } hSwaps['chat_container_message'] = " <br><br>Chat is turned off.<br><br><a href=# onClick=\"ToggleChat.Toggle(0); return false;\">Click here</a> to re-enable. "; if(! hSwaps['chat_height'] || hSwaps['chat_height'] == 'NaN') { hSwaps['chat_height'] = Math.floor(hSwaps['width'] * (3/4)) + 28; } hSwaps['video'] = " <div id=video_wrapper style=\"transition:width .3s, height .3s;position:relative;height:" + hSwaps['height'] + "px;width:" + hSwaps['width'] + "px;\"> <div id=click_drag_model_list_faux_grip class=click_drag_model_list_faux_grip></div> </div> "; } hSwaps['model_name'] = t.g_hUsers[g_nBroadcasterId] ? t.g_hUsers[g_nBroadcasterId]['username'] : ''; hSwaps['online_model_controls'] = "<div id=online_broadcaster_controls class=online_broadcaster_controls style=\"font-size:11px;padding-left:6px;text-align:right;display:block;\"></div>"; if(! g_UA.mobile && ! t.NightMode_Top.enabled )
 hSwaps['input_style'] = MfcCustomFonts.prototype.get_style(t.g_hSelf ); var sLayout = 'player'; var sTemplate = HTMLTemplates(sLayout ); SetHTML('player_main',MfcStringUtilities.parse_template(sTemplate,hSwaps,{ cleanup_unused_tags:1 })); ModelMenuBar.Refresh(); ModelMenuBar.bHideOnlineModels = ModelMenuBar.bHideOnlineModels || g_bPopupPlayer; OnlineBroadcasterList.HideReveal(); var el; if(g_bPopupPlayer ) { ( el = GetEl('online_broadcasters_td') ) && ( el.style.display = 'none' ); ( el = GetEl('online_broadcaster_controls') ) && ( el.style.display = 'none' ); ( el = GetEl('click_drag_model_list_td') ) && ( el.style.display = 'none' ); ( el = GetEl('videochat_container_td') ) && ( el.style.paddingLeft = '0px' ); ( el = GetEl('video_area') ) && ( el.style.marginTop = '0px' ) && ( el.style.marginLeft = '5px' ); if(g_bDhtmlWindow ) { ( el = GetEl('title_table') ) && ( el.style.top = '4px' ); } } ClickDragVideo.Initialize(); FocusOnInput(); LayoutSizing.size_video({ no_chat_resize:1 }); if ( LoadLayout.oChatImageControls ) { LoadLayout.oChatImageControls.deregister(); } LoadLayout.oChatImageControls = new MfcChatImageControls({ control_container: GetEl('chat_image_controls'), text_input_id: 'message_input', user: t.g_hSelf, A: t.A }); LoadLayout.oChatImageControls.place_controls(); PeopleBoxHelper.MenuHighlight();}LoadLayout.SetInputFont = function(){ if(oEl = GetEl('message_input') ) { oEl.style.removeProperty('color'); oEl.style.setProperty('color', '#' + MfcCustomFonts.prototype.get_font_color(t.g_hSelf ), 'important');
 oEl.style.fontFamily = MfcCustomFonts.prototype.get_font_family(t.g_hSelf ); oEl.style.fontStyle = MfcCustomFonts.prototype.get_font_style(t.g_hSelf ); oEl.style.fontWeight = MfcCustomFonts.prototype.get_font_weight(t.g_hSelf ); oEl.style.fontVariant = MfcCustomFonts.prototype.get_font_variant(t.g_hSelf ); }};var ClickDragVideo = { nOffsetX:'', nOffsetY:'', nStartX:'', nStartY:'', ResizeVideo_TimeDelay:'', nStartVideoWidth:'', nAdditionalVideoChatHeight: 0, bUserDefinedModelListHeight: false};ClickDragVideo.Initialize = function() { ClickDragVideo.oClickDragVideoTd = GetEl('click_drag_video_grip'); if(ClickDragVideo.oClickDragVideoTd ) { ClickDragVideo.oClickDragVideoTd.onmousedown = function(event) { ClickDragVideo.OnMouseDown(event); }; ClickDragVideo.oClickDragVideoTd.ontouchstart = function(event) { ClickDragVideo.OnTouchStart(event); }; ClickDragVideo.oClickDragVideoTd.ontouchmove = function(event) { ClickDragVideo.OnTouchMove(event); }; ClickDragVideo.oClickDragVideoTd.ontouchend = function() { ClickDragVideo.OnTouchEnd(); }; } else { console.log('Could not attach ClickDragVideo events'); } if(t.g_hSelf.chat_area_height && t.g_hSelf.chat_area_height < window.innerHeight ) { ClickDragVideo.resizeMode = 'model_list'; ClickDragVideo.bUserDefinedModelListHeight = false; ClickDragVideo.OnMouseMove_ResizeLayout(null,null,t.g_hSelf.chat_area_height); ClickDragVideo.OnMouseUp(null,null,t.g_hSelf.chat_area_height); ClickDragVideo.resizeMode = ''; }};ClickDragVideo.ExtractNumber = function(value){ var n = parseInt(value); return n == null || isNaN(n) ? 0 : n;};ClickDragVideo.OnTouchStart = function(e) { ClickDragVideo.OnMouseDown(e.touches[0] ); };
ClickDragVideo.OnTouchMove = function(e) { ClickDragVideo.OnMouseMove_ResizeLayout(e.touches[0] ); };ClickDragVideo.OnTouchEnd = function() { ClickDragVideo.OnMouseUp(); };ClickDragVideo.OnMouseDown = function(e){ if ( e == null ) { e = window.event; } if((e.target || e.srcElement).id == 'click_drag_model_list_grip' ) { var oEl; if(! t.g_hSelf.single_page_website && ( oEl = GetEl('inner_body') ) ) { oEl.style.overflowX = 'hidden'; oEl.style.overflowY = 'hidden'; } if(oEl = GetEl('mouse_move_shield') ) { oEl.style.display = 'block'; } if(oEl = GetEl('videochat_footer') ) { ClickDragVideo.nStartOnlineBroadcasterTop = oEl.offsetTop; } if(oEl = GetEl('click_drag_model_list_grip') ) { oEl.style.backgroundColor = "#FF04"; oEl.style.zIndex = 20; } var nWidth; var nHeight; var oElChatBox; if(oElChatBox = GetEl('videochat_table') ) { nWidth = oElChatBox.offsetWidth; nHeight = oElChatBox.offsetHeight; oElChatBox.style.height = nHeight + 'px'; oElChatBox.style.width = nWidth + 'px'; oElChatBox.style.position='absolute'; } var oVideoChatTable; if(oVideoChatTable = GetEl('videochat_container_td') ) { oVideoChatTable.style.height = nHeight + 'px'; } if(! ( ClickDragVideo.oClickDragModelListTd = (e.target || e.srcElement) ) ) { return; } ClickDragVideo.resizeMode = 'model_list'; } else if((e.target || e.srcElement).id == 'click_drag_video_grip' ) { var oEl; if(oEl = GetEl('click_drag_model_list_faux_grip') ) { oEl.style.display = "block"; } if(oEl = GetEl('resize_video_icon') ) { oEl.style.display = "none"; }
 if(! ( ClickDragVideo.oClickDragVideoTd = (e.target || e.srcElement) ) ) { return; } ClickDragVideo.resizeMode = 'video'; var nBroadcasterId = GetBroadcasterId(); var el; ( el = LoadVideo.clientVideo.video_container ) && ( ClickDragVideo.nStartVideoWidth = el.offsetWidth ); } else if((e.target || e.srcElement).id == 'click_drag_chat_under_video_grip' ) { var oVR = GetEl('video_wrapper'); if(oVR ) { ClickDragVideo.nStartChatTop = oVR.offsetHeight; } var oEl; if(oEl = GetEl('click_drag_chat_under_video_grip') ) { oEl.style.backgroundColor = "#FF04"; } var oVideoArea = GetEl('video_area'); ClickDragVideo.nAvailableWidth = oVideoArea.offsetWidth; if(! ( ClickDragVideo.oClickDragChatUnderVideoTd = (e.target || e.srcElement) ) ) { return; } ClickDragVideo.resizeMode = 'chat_under_video'; if(! t.g_hSelf.single_page_website && ( oEl = GetEl('inner_body') ) ) { oEl.style.overflowX = 'hidden'; oEl.style.overflowY = 'hidden'; } } else { return; } ClickDragVideo.nStartX = e.clientX; ClickDragVideo.nStartY = e.clientY; document.body.focus(); return false;};ClickDragVideo.OnMouseUp = function(e,nNewWidth,nNewHeight){ if(ClickDragVideo.resizeMode == 'video' && ClickDragVideo.oClickDragVideoTd ) { var oEl; if(oEl = GetEl('click_drag_model_list_faux_grip') ) { oEl.style.display = 'none'; } if(oEl = GetEl('resize_video_icon') ) { oEl.style.display = "block"; } ClickDragVideo.oClickDragVideoTd = null; var video_area = GetEl('video_area'); var online_broadcasters_td = GetEl('online_broadcasters_td');
 if(video_area && online_broadcasters_td && video_area.offsetHeight > online_broadcasters_td.offsetTop ) { ClickDragVideo.ModelListSizeReset(); } } else if(ClickDragVideo.resizeMode == 'model_list' )//&& ClickDragVideo.oClickDragModelListTd )
 { var oEl; if(! t.g_hSelf.single_page_website && ( oEl = GetEl('inner_body') ) ) { oEl.style.overflowX = 'hidden'; oEl.style.overflowY = 'auto'; } if(oEl = GetEl('mouse_move_shield') ) { oEl.style.display = 'none'; } if(oEl = GetEl('click_drag_model_list_grip') ) { oEl.style.backgroundColor = ""; oEl.style.zIndex = 2; } var oVideoChatTable = GetEl('videochat_container_td'); var oVideoArea = GetEl('video_area'); var nNewHeight = ( oVideoChatTable && ! nNewHeight ) ? oVideoChatTable.offsetHeight : ( nNewHeight || 0 ); var hVideoDimensions = GetVideoDimensions(); if(ClickDragVideo.nHeightDifference < 0 && oVideoArea && ( oVideoChatTable.offsetHeight - oVideoArea.offsetHeight ) < 0 ) { var nWhiteSpace = oVideoArea.offsetHeight - oVideoChatTable.offsetHeight; var oRoomOptions; var nOptionsHeight=0; if(oRoomOptions = GetEl('room_options') ) { nOptionsHeight = oRoomOptions.offsetHeight; } var nNewVideoWidth = ( ( oVideoChatTable.offsetHeight - ( nOptionsHeight + 50 ) ) * CurrentVideoAspectRatio() ); if(nNewVideoWidth > 0 ) { LayoutSizing.size_video({ width: nNewVideoWidth , mode: 'user_initiated' }); ClickDragVideo.bUserDefinedModelListHeight = false; } } else { ClickDragVideo.bUserDefinedModelListHeight = true; var nNewVideoHeight = ( oVideoChatTable.offsetHeight - oVideoArea.offsetHeight ) + hVideoDimensions.height;
 if(hVideoDimensions.width < oVideoArea.offsetWidth && hVideoDimensions.width < 240 && ClickDragVideo.nStartY < 360 && oVideoArea ) { if(nNewVideoHeight > 240 ) { nNewVideoHeight = 240; } LayoutSizing.size_video({ width: parseInt(nNewVideoHeight * CurrentVideoAspectRatio() ) , mode: 'user_initiated' }); } } var oElChatBox; if(oElChatBox = GetEl('videochat_table') ) { oElChatBox.style.height = ( nNewHeight ); oElChatBox.style.width = ''; oElChatBox.style.position='relative'; } if(g_UA.mobile ) { ClickDragVideo.oClickDragModelListTd.style.backgroundColor = ''; } if(ClickDragVideo.oClickDragModelListTd ) ClickDragVideo.oClickDragModelListTd.ondragstart = null; ClickDragVideo.oClickDragModelListTd = null; if(nNewHeight < oVideoArea.offsetHeight ) { ClickDragVideo.ModelListSizeReset(); } LayoutSizing.size_online_model_area(); LayoutSizing.size_chat_area(); } else if(ClickDragVideo.resizeMode == 'chat_under_video' ) { if(! t.g_hSelf.single_page_website && ( oEl = GetEl('inner_body') ) ) { oEl.style.overflowX = 'hidden'; oEl.style.overflowY = 'auto'; } var oEl; if(oEl = GetEl('click_drag_chat_under_video_grip') ) { oEl.style.backgroundColor = ""; } var oVideoArea = GetEl('video_area'); var nNewHeight = ( oVideoArea && ! nNewHeight ) ? oVideoArea.offsetHeight : ( nNewHeight || 0 ); ClickDragVideo.oClickDragVideoTd = null; } ClickDragVideo.resizeMode = ''; ClickDragVideo.OnMouseMove_HideRevealReset();};ClickDragVideo.OnMouseMove_HideRevealReset = function(){ var oClickDragReset = GetEl('click_drag_model_list_reset'); if(oClickDragReset ) { var oVideoChatTable = GetEl('videochat_container_td'); var oVideoChatTable = GetEl('videochat_container_td'); var oVideoArea = GetEl('video_area'); if(ClickDragVideo.bUserDefinedModelListHeight && ( Math.abs(oVideoChatTable.offsetHeight - oVideoArea.offsetHeight ) > 20 ) && ! ( ToggleVideo.hAllHidden.model_rooms && ! Lounge.bIsLoaded ) && ! ( ToggleVideo.hAllHidden.lounge && Lounge.bIsLoaded ) ) { if(t.g_hSelf.chat_area_height != oVideoChatTable.offsetHeight ) t.UserExtensions.Write('chat_area_height', oVideoChatTable.offsetHeight ); oClickDragReset.style.display = 'block'; } else { if(t.g_hSelf.chat_area_height != 0 ) t.UserExtensions.Write('chat_area_height', 0 );
 oClickDragReset.style.display = 'none'; } }};ClickDragVideo.OnMouseMove_ResizeLayout = function(e,nNewWidth,nNewHeight){ if(e == null ) { var e = window.event; } if(! e ) { return; } if(e.stopPropagation) e.stopPropagation(); if(e.preventDefault) e.preventDefault(); e.cancelBubble=true; e.returnValue=false; if(ClickDragVideo.ResizeVideo_TimeDelay ) { clearTimeout(ClickDragVideo.ResizeVideo_TimeDelay ); } if(ClickDragVideo.resizeMode == 'video' ) { if(! nNewWidth ) { nNewWidth = ClickDragVideo.nStartVideoWidth + ( e.clientX - ClickDragVideo.nStartX ); } var hPlayerSize = GetPlayerDimensions(); var nBroadcasterId = GetBroadcasterId(); var oVideoWrapper = GetEl('video_wrapper'); var oVideoArea = GetEl('video_area'); var click_drag_video_grip = GetEl('click_drag_video_grip'); var oVideoPlayer = LoadVideo.clientVideo && LoadVideo.clientVideo.video_container; var nPadding = 30; if(nNewWidth > ( hPlayerSize.width - nPadding ) ) { nNewWidth = hPlayerSize.width - nPadding; } var nNewHeight = nNewWidth * ( 1 / CurrentVideoAspectRatio() ); if(oVideoWrapper )// && oVideoArea.offsetHeight < hPlayerSize.height )

 { oVideoPlayer.style.width = ( nNewWidth + 2 ) + 'px'; oVideoPlayer.style.height = Math.round(nNewHeight + 2 ) + 'px'; if(! ClickDragVideo.wrapperTransition ) { ClickDragVideo.wrapperTransition = oVideoWrapper.style.transition; } var oEl; if(oEl = GetEl('click_drag_model_list_faux_grip') ) { oEl.style.left = ( nNewWidth - 10 ) + 'px'; oEl.style.height = ( ( ( 1 / CurrentVideoAspectRatio() ) * nNewWidth ) + 20 ) + 'px'; } oVideoWrapper.style.transition = ''; oVideoPlayer.style.opacity = 0.7; } ClickDragVideo.ResizeVideo_TimeDelay = setTimeout(function() { LayoutSizing.size_video({ width: nNewWidth, mode: 'user_initiated' }); ChatBox.ScrollToBottom('force3'); LayoutSizing.size_online_model_area(); LayoutSizing.size_chat_area(); oVideoPlayer.style.opacity = 1; oVideoWrapper.style.transition = ClickDragVideo.wrapperTransition; ClickDragVideo.wrapperTransition = ''; }, 400 ); } else if(ClickDragVideo.resizeMode == 'model_list' && ! ModelMenuBar.bHideOnlineModels ) { if(! nNewHeight && ClickDragVideo.nStartY ) { nNewHeight = ClickDragVideo.nStartOnlineBroadcasterTop + ( e.clientY - ClickDragVideo.nStartY ); ClickDragVideo.nHeightDifference = ( e.clientY - ClickDragVideo.nStartY ); } else {
 ClickDragVideo.nHeightDifference = ClickDragVideo.nStartOnlineBroadcasterTop + nNewHeight; } var oEl; if(oEl = GetEl('videochat_container_td') ) { oEl.style.height = nNewHeight + 'px'; } if(oEl = GetEl('chat_container') ) { oEl.style.height = nNewHeight + 'px'; } } else if(ClickDragVideo.resizeMode == 'chat_under_video' ) { var oVR = GetEl('video_wrapper'); if(! nNewHeight && ClickDragVideo.nStartY ) { nNewHeight = ClickDragVideo.nStartChatTop + ( e.clientY - ClickDragVideo.nStartY ); ClickDragVideo.nHeightDifference = ( e.clientY - ClickDragVideo.nStartY ); } else { ClickDragVideo.nHeightDifference = ClickDragVideo.nStartChatTop + nNewHeight; } var nNewWidth = ( nNewHeight * CurrentVideoAspectRatio() ); var nAvailableWidth = ClickDragVideo.nAvailableWidth - 7; var bExceeded=false; if(nNewWidth > nAvailableWidth ) { nNewWidth = nAvailableWidth; bExceeded = true; } if(nNewWidth <= nAvailableWidth && ! bExceeded ) { oVR.style.width = nNewWidth + 'px'; oVR.style.height = ( nNewHeight ) + 'px'; } ClickDragVideo.ResizeVideo_TimeDelay = setTimeout(function() { LayoutSizing.size_video({ width: ( nNewWidth - 2 ), mode: 'user_initiated' }); LayoutSizing.size_chat_area();
 }, 750 ); }};ClickDragVideo.ModelListSizeReset = function(e){ t.UserExtensions.Write('chat_area_height', 0 ); ClickDragVideo.resizeMode = 'model_list'; ClickDragVideo.bUserDefinedModelListHeight = false; var oEl = GetEl('videochat_table'); if(oEl ) { oEl.style.height = ''; oEl.style.position = ''; } var oVideoChatTable; if(oVideoChatTable = GetEl('videochat_container_td') ) { oVideoChatTable.style.height = ''; } var oChatContainer; if(oChatContainer = GetEl('chat_container') ) { oChatContainer.style.height = ''; } LayoutSizing.size_online_model_area(); LayoutSizing.size_chat_area(); var oClickDragReset = GetEl('click_drag_model_list_reset'); if(oClickDragReset ) { oClickDragReset.style.display = 'none'; } LayoutSizing.size_online_model_area(); LayoutSizing.size_video();};function CurrentVideoAspectRatio(){ var nBroadcasterId = GetBroadcasterId(); return ( t.g_hUsers[nBroadcasterId] && t.g_hUsers[nBroadcasterId] && t.g_hUsers[nBroadcasterId].video_aspect_ratio ) || 1.7777;}var ModelMenuBar = { bHideOnlineModels: null, TagsViewMode: 'original'};
t.events.on('player.ModelMenuBar.Refresh',function() { ModelMenuBar.Refresh.apply(this,arguments); }, window.name );t.events.on('player.ModelMenuBar.HighlightSpeaker',function() { ModelMenuBar.HighlightSpeaker.apply(this,arguments); }, window.name );ModelMenuBar.HighlightSpeaker = function(bOnOff ){ var oEl = GetEl('popup_preview_mute_speaker'); if(! oEl ) { return; } oEl.style.backgroundColor = bOnOff ? 'yellow' : '';};ModelMenuBar.Refresh = function(hOptions ){ hOptions = hOptions || {}; if(FnRateLimit('ModelMenuBar.Refresh',1000,function(){ ModelMenuBar.Refresh(hOptions); }) ) { return; } var nModelId = GetBroadcasterId(); var sUsername = t.g_hUsers[nModelId] ? t.g_hUsers[nModelId].username : ''; if(! ModelMenuBar.bHideOnlineModels ) ModelMenuBar.bHideOnlineModels = ( t && t.g_hSelf && t.g_hSelf.hide_online_models ) ? 1 : 0; ModelMenuBar.RefreshChatUnderVideoFlag(); if(g_bPopupPlayer ) { return; } if(ModelMenuBar.bHideOnlineModels && g_sPlayerMode == 'player' ) { var sH = ''; if(ModelMenuBar.bHideOnlineModels ) { if(ModelMenuBar.bChatUnderVideo ) sH += "<a href=\"#\" onClick=\" t.UserExtensions.Write('chat_under_video',-1); ModelMenuBar.HideRevealOnlineBroadcasters(); \">Chat Beside Video</a>"; else sH += "<a href=\"#\" onClick=\" t.UserExtensions.Write('chat_under_video',1); ModelMenuBar.HideRevealOnlineBroadcasters(); \">Chat Under Video</a>"; if(t.g_hSelf.chat_under_video ) sH += " or <a href=\"#\" onClick=\" t.UserExtensions.Write('chat_under_video',0); ModelMenuBar.HideRevealOnlineBroadcasters(); \">Use Default</a>"; sH += " &nbsp;"; } if(! g_UA.mobile ) { sH += "<a href=\"#\" onClick=\"PopModelIndex({ mode:'full' }); return false;\" title='Show Text List of " + t.g_hPlatform.Performer + "s'>Text List of " + t.g_hPlatform.Performer + "s</a>"; } else { GetEl('online_broadcaster_controls_container_minimized').style.paddingTop='30px'; }
 if(ModelMenuBar.bChatUnderVideo ) { ( el = GetEl('click_drag_model_list_td') ) && ( el.style.display = 'none' ); } sH += " &nbsp;<a href=# onClick=\"ModelMenuBar.HideOnlineBroadcasters(false); return false;\" title=\"Show/Hide " + t.g_hPlatform.Performer + " List\" style='text-decoration:none;'><span id=toggle_online_broadcasters><span style='text-decoration:underline;'>Un-Hide " + t.g_hPlatform.Performer + "s</span> <img src='/files/images/svg/maximize2.svg' style='height:12px; margin-bottom:-2px;'></span></a> "; SetHTML('online_broadcaster_controls_container_minimized',sH,{ 'force': true }); GetEl('online_broadcaster_controls_container').style.display='none'; GetEl('online_broadcasters_td').style.height='18px'; GetEl('online_broadcaster_controls_container_minimized').style.display='block'; return; } var nFontSize; if(g_sPlayerMode == 'player' ) { nFontSize = 12; } else { nFontSize = 13; } var sOptions = ''; var hModes = { 'models': { name: ( t.g_hPlatform.Performer + 's' ), title: "Online " + t.g_hPlatform.performer + "s" }, 'bio': { name: 'Profile', title: sUsername + "'s Profile" } }; if(t.g_hUsers[nModelId] && t.g_hUsers[nModelId]['whiteboard1'] ) { hModes['whiteboard'] = { 'name': 'Whiteboard', 'title': sUsername + "'s Whiteboard" }; } if(t.g_hSelf.access_level >= FCS.FCLEVEL_BASIC ) { hModes['user_notepad'] = {'name': 'Notes', 'title': "Notes for " + sUsername }; } if(! Lounge.bIsLoaded && t.g_hSelf.access_level > FCS.FCLEVEL_BASIC ) { hModes['pm_friend'] = {'name': 'Private Message', 'title': 'Private Message with ' + sUsername }; } if(t.g_hUsers[nModelId] ) { if(t.g_hUsers[nModelId]['share'] && t.g_hUsers[nModelId]['share']['albums'] > 0 ) hModes['mfc_share_embed'] = {'name': 'MFC Share', 'title': PossessiveApostrophe(sUsername) + " MFC Share" }; } var sMainSelector = "";
 hModes.models.icon_url = "images/png/menu-color.16x16.png"; hModes.bio.icon_url = "files/images/icons/png/my_profile.48x48.png"; if(hModes.user_notepad ) { hModes.user_notepad.icon_url = "files/ico/notepad.48x48.png"; if(t.g_hUsers[nModelId] && ! t.g_hUsers[nModelId]['notes'] ) hModes.user_notepad.css = "filter:grayscale(100%); opacity:0.5;"; } if(hModes.whiteboard ) { hModes.whiteboard.icon_url = "images/png/presentation.16x16.png"; } if(hModes.mfc_social_embed ) { hModes.mfc_social_embed.icon_url = "images/flat/solid/svg_green/earth-1.svg"; } if(hModes.pm_friend ) { hModes.pm_friend.icon_url = "images/png/chat-bubbles.16x16.png"; } if(t.g_hUsers[nModelId] ) { if(t.g_hUsers[nModelId]['share'] && t.g_hUsers[nModelId]['share']['albums'] > 0) { hModes.mfc_share_embed.name = " logo-mfc_share"; hModes.mfc_share_embed.icon_url = "files/images/misc/clear.gif"; } } for(var sMode in hModes ) { var sSel=''; var sStyle=""; if(sMode == IframeContent.resource ) { sStyle += "border:1px solid #8888;background-color:#8881;box-shadow: inset 1px 1px 1px 1px #8883;"; } else { sStyle += "border:1px solid transparent; "; } sMainSelector += "<img src=\"" + t.g_hPlatform.image_url_cdn + hModes[sMode].icon_url + "\" style=\"" + sStyle + ( hModes[sMode].css || '' ) + "height:16px;margin-bottom:0px;vertical-align:bottom;cursor:pointer;padding:1px;border-radius:3px;\"\
 title=\"" + hModes[sMode].title + "\" class=\"player_submenu_item subc_"+hModes[sMode].name+"\" onClick=\" IframeContent('" + sMode + "',{ user_id: " + nModelId + ", username: '" + sUsername + "', scrollTo: true }, event); \" > "; } var left=0, top=0, width, height, oEl; var hPopupOpts = { username: ( t.g_hUsers[g_nBroadcasterId] && t.g_hUsers[g_nBroadcasterId].username ), user_id: nModelId, channel: PublicChannel(nModelId), height: 500, width: 800, popup_title: ( PossessiveApostrophe(t.g_hUsers[nModelId] && t.g_hUsers[nModelId].username) + " Whiteboard") }; if(t.g_hSelf.window_mode & WINDOW_MODE_DESKTOP_DHTML ) { if(oEl = GetEl('online_broadcasters_td') ) { var xy = FindAbsoluteOffset(oEl); hPopupOpts.left = xy.x + 20; hPopupOpts.top = xy.y + 55; hPopupOpts.width = oEl.offsetWidth - 40; hPopupOpts.height = oEl.offsetHeight - 90; } } var sSubControls = ""; if(IframeContent.resource == 'bio' || IframeContent.resource == 'mfc_share_embed' || IframeContent.resource == 'mfc_social_embed' || IframeContent.resource == 'whiteboard' || IframeContent.resource == 'user_notepad' ) { if(t.g_hPlatform.id == PLAT_CAM ) { sSubControls += " <img src=\"" + t.g_hPlatform.image_url_cdn + "files/images/icons/svg/link_purple.svg\" id=profile_preview_link height=14 width=14 style=\"cursor:pointer;border-radius:5px;margin-bottom:0px; " + ( ProfilePreview.linkedToRoom ? '' : 'opacity:0.6' ) + "\" onClick=\"ProfilePreview.linkToRoom();\" title=\"Toggle whether the Profile is Linked to the " + t.g_hPlatform.Performer + " you are watching.\" > "; } else if(t.g_hPlatform.id == PLAT_MFC ) {
 sSubControls += " &nbsp; &nbsp; "; sSubControls += " <img class=\"subc_profile_window\" src=\"" + t.g_hPlatform.image_url_cdn + "files/images/icons/svg/" + ( SlimMode.enabled ? 'vertical_shrink.svg' : 'vertical_size.svg' ) + "\" id=profile_preview_resize_icon height=14 width=14 onClick=\"SlimMode(! SlimMode.enabled );\" style=\"cursor:pointer;margin-bottom:0px;opacity:0.6;\" title=\"" + ( SlimMode.enabled ? 'Shrink Profile Window by Expanding Room Controls' : 'Expand Lower Window by Hiding Room Controls' ) + "\" > "; } sSubControls += " <img class=\"subc_merge\" src=\"" + t.g_hPlatform.image_url_cdn + "files/images/icons/svg/" + ( IframeContent.bSinglePage ? 'no_merge.svg' : 'merge.svg' ) + "\" id=profile_preview_single_page_icon height=14 width=14 onClick=\"t.ChatOptions.SetSinglePageScrolling(! IframeContent.bSinglePage );\" style=\"cursor:pointer;margin-bottom:0px;opacity:0.6;\" title=\"" + ( IframeContent.bSinglePage ? 'Un-Merge the Chat Room and Profile / 2 Independent Scroll Bars' : 'Merge Chat Room and Profile into a Single Page / Single Scroll' ) + "\" > "; } if(typeof(IframeContent.fTitle ) == 'function' ) { sSubControls += " &nbsp; &nbsp; "; sSubControls += IframeContent.fTitle(); } if(IframeContent.resource == 'bio' ) { sSubControls += " <a class=\"subc_bio\" title=\"Pop " + sUsername + "'s profile into a new window and return to the " + t.g_hPlatform.performer + " list.\" target=_blank href=\"//profiles." + t.g_hPlatform.domain + "/" + sUsername + "\" onClick=\"IframeContent('models',{},event);\"><img src=\"" + t.g_hPlatform.image_url_cdn + "files/images/icons/png/popout.16x16.png\" style=\"margin-bottom:0px;cursor:pointer;\"></a> "; } else if(IframeContent.resource == 'pm_friend' ) { sSubControls += " "; } else if(IframeContent.resource == 'mfc_share_embed' ) { sSubControls += " <a class=\"subc_social\" title=\"Pop " + sUsername + "'s MFC Social into a new window and return to the " + t.g_hPlatform.performer + " list.\" target=_blank href=\"//share." + t.g_hPlatform.domain + "/" + sUsername + "\" onClick=\"IframeContent('models',{},event);\"><img src=\"" + t.g_hPlatform.image_url_cdn + "files/images/icons/png/popout.16x16.png\" style=\"margin-bottom:0px;cursor:pointer;\"></a> "; } else if(IframeContent.resource == 'mfc_social_embed' ) { sSubControls += " <a title=\"Pop " + sUsername + "'s MFC Share into a new window and return to the " + t.g_hPlatform.performer + " list.\" target=_blank href=\"//social." + t.g_hPlatform.domain + "/" + ( t.g_hUsers[nModelId].social && t.g_hUsers[nModelId].social.uname ) + "\" onClick=\"IframeContent('models',{},event);\"><img src=\"" + t.g_hPlatform.image_url_cdn + "files/images/icons/png/popout.16x16.png\" style=\"margin-bottom:0px;cursor:pointer;\"></a> "; } else if(IframeContent.resource == 'whiteboard' || IframeContent.resource == 'user_notepad' ) { sSubControls += " " + t.A(IframeContent.resource,hPopupOpts) + "<img onClick=\"IframeContent.loadLast();\" src=\"" + t.g_hPlatform.image_url_cdn + "files/images/icons/png/popout.16x16.png\" style=\"\"></a> "; } var sLowerHalfControls=''; if(t.g_hPlatform.id == PLAT_CAM ) { if(sMainSelector ) { sBGColor = t.g_hUsers[ g_nBroadcasterId ] && t.g_hUsers[ g_nBroadcasterId ].chat_text_color ? MfcCustomFonts.prototype.lighten_hex(t.g_hUsers[ g_nBroadcasterId ].chat_text_color,0.92) : '#EBEBEB'; sLowerHalfControls += " <div class=\"subcontrols_outer sbco1\" style=\" margin-right: 5px; float: left; height:15px; display: inline-block; font-size:11px; background-color: " + sBGColor + "; padding:1px 3px 8px 3px; box-shadow: 2px 2px 4px rgba(0,0,0,0.17); border-radius:3px; border: 1px solid #66666644; \"> " + sMainSelector + " </div> "; } if(sSubControls ) { sLowerHalfControls += " <div class=\"subcontrols_outer sbco2\" style=\" margin-right: 5px; float: left; height:15px; display: inline-block; font-size:11px; background-color:#fff; padding:3px; box-shadow: 2px 2px 4px box-shadow: 2px 2px 4px rgba(0,0,0,0.17); border-radius:3px; border: 1px solid #66666644; \"> " + sSubControls + " </div> "; } } else { sLowerHalfControls += " <div class=\"subcontrols_outer sbco3\" style=\" display: inline-block; font-size:11px; background-color:#fff; padding:5px; box-shadow: 0px 2px 6px rgba(0,0,0,0.17); border-radius:3px; border: 1px solid #66666644; float: left; \"> " + sMainSelector + " " + sSubControls + " </div> "; } var sLoungeControls = ""; var sH=''; if(sLoungeControls || sLowerHalfControls ) { sLowerHalfControls = " <div style=\"font-size:11px;position:absolute;left:7px;top:3px;z-index:10; \"> " + sLowerHalfControls + " " + sLoungeControls + " </div> "; } if(IframeContent.enabled && g_sPlayerMode == 'player' ) { var right = 4; sLowerHalfControls += " <div id=iframe_content_close style=\"font-size:11px;position:absolute;right:" + right + "px;top:3px;z-index:10; background-color:#fff; padding:2px; box-shadow: 2px 2px 4px rgba(0,0,0,0.17); border-radius:3px; border: 1px solid #66666644; \"><img src=\"" + t.g_hPlatform.image_url_cdn + "files/styles/mfc/images/misc/window_menu_x_2.png\" style=\"cursor:pointer;\" onClick=\"IframeContent('models',{},event);\" title=\"Close this feature and return to the online " + t.g_hPlatform.performer + " list.\"></div> "; SetHTML('lower_half_controls',sLowerHalfControls); return;
 } var sOnlinePatternKey = g_sPlayerMode == 'player' ? 'online_model_pattern_player' : 'online_model_pattern'; var hIcons = {}; var hIconsClass = {}; hIcons= { animated: 'images/flat/solid/svg_green/video-1.svg', previews: 'images/flat/solid/svg_green/camera-3.svg', avatars: 'images/flat/solid/svg_green/profile-1.svg', small: 'images/flat/stroke/svg_green/grid-1.svg', large: 'images/flat/stroke/svg_green/grid-solid.svg', overlay_avatar: 'images/flat/solid/svg_green/add-window-man2.svg', overlay_preview: 'images/flat/solid/svg_green/add-window-camera.svg', links: 'images/svg/see_menu.svg' }; hIconsClass= { animated: ' ', previews: ' ', avatars: ' ', small: ' ', large: ' ', overlay_avatar: ' ', overlay_preview: ' ', links: ' ' }; if(t.g_hSelf[sOnlinePatternKey] == 4 || t.g_hSelf[sOnlinePatternKey] == 5 ) { if(t.g_hPlatform.id == PLAT_CAM ) hIconsClass.animated += 'selected_model_menu_bar_icons'; else hIconsClass.animated += 'selected_model_menu_bar_icons_animations '; } else if(t.g_hSelf[sOnlinePatternKey] == 1 || t.g_hSelf[sOnlinePatternKey] == 2 ) { hIconsClass.avatars += 'selected_model_menu_bar_icons '; } if(t.g_hSelf[sOnlinePatternKey] == 2 || t.g_hSelf[sOnlinePatternKey] == 5 ) { hIconsClass.large += 'selected_model_menu_bar_icons '; } else if(t.g_hSelf[sOnlinePatternKey] == 1 || t.g_hSelf[sOnlinePatternKey] == 4 ) { hIconsClass.small += 'selected_model_menu_bar_icons '; } if(t.g_hSelf['model_list_overlay_avatar_' + g_sPlayerMode ] ) { hIconsClass.overlay_avatar += 'selected_model_menu_bar_icons '; } if(t.g_hSelf['model_list_overlay_preview_' + g_sPlayerMode ] ) { hIconsClass.overlay_preview += 'selected_model_menu_bar_icons '; } if(t.g_hSelf['model_list_show_links_' + g_sPlayerMode ] ) { hIconsClass.links += 'selected_model_menu_bar_icons '; } var sAvatarsSelected=''; var sExtraOption=''; if(t.g_hSelf[sOnlinePatternKey] == 1 || t.g_hSelf[sOnlinePatternKey] == 2 ) { sAvatarsSelected = 'SELECTED'; } else if(t.g_hSelf[sOnlinePatternKey] == 3 ) { sExtraOption = "<option>(Text)</option>"; } var pattern = mfcBroadcasterDisplay.hCurrentPattern[g_sPlayerMode] || t.g_hSelf[sOnlinePatternKey]; var sH=" <span id=\"online_model_control_message\">" + ModelMenuBar.Message.sCache + "</span>  "; sH += "<img class=\"model_menu_bar_icons " + hIconsClass.avatars + " \" src=\"" + t.g_hPlatform.image_url_cdn + hIcons.avatars + "\" title=\"Avatars\" onClick=' t.FilterSortOptions.ToggleCheckbox(window,\"display_avatars\",null,null,{ player_mode: g_sPlayerMode }); ' >"; sH += "<img class=\"model_menu_bar_icons " + hIconsClass.animated + " \" src=\"" + t.g_hPlatform.image_url_cdn + hIcons.animated + "\" title=\"Previews\" onClick=' t.FilterSortOptions.ToggleCheckbox(window,\"display_previews\",null,null,{ player_mode: g_sPlayerMode }); ' > "; if(t.g_hSelf[sOnlinePatternKey] == 4 || t.g_hSelf[sOnlinePatternKey] == 5
 || t.g_hSelf['model_list_overlay_preview_' + g_sPlayerMode ] ) { var sDisabled=''; var aAutoUpdatePerSecOptions = []; if(( t.g_hSelf[sOnlinePatternKey] == 1 || t.g_hSelf[sOnlinePatternKey] == 2 ) && ! t.g_hSelf['model_list_overlay_preview_' + g_sPlayerMode ] ) { sDisabled = 'disabled=true'; aAutoUpdatePerSecOptions.push("<option>N/A</option>"); } else { var aAutoUpdatePerSecIncrements = [0,1,5,10,30,50,100,300,500,10000]; var current=0; if(! ( t.g_hSelf['auto_update_livesnaps'] & ( g_sPlayerMode == 'player' ? 2 : 1 ) ) ) { current = 0; } else { current = t.g_hSelf['auto_update_livesnaps_persec_'+g_sPlayerMode]; } for(a=0; a < aAutoUpdatePerSecIncrements.length; a++ ) { var sLabel = ''; if(a == 0 ) { sLabel = 'Still'; } else if(a == aAutoUpdatePerSecIncrements.length-1 ) { sLabel = 'Max'; } else { sLabel += aAutoUpdatePerSecIncrements[a] + "/sec"; } aAutoUpdatePerSecOptions.push("<option value=" + aAutoUpdatePerSecIncrements[a] + " " + ( aAutoUpdatePerSecIncrements[a] == current ? 'SELECTED' : '' ) + ">" + sLabel + "</option>" ); } } sH += "<select id=auto_update_livesnaps_persec " + sDisabled + " onChange=\" ModelMenuBar.ToggleSetting('auto_update_livesnaps_persec_' + g_sPlayerMode ,this.value); \" style='font-size:11px;width:57px;height:20px;position:relative;bottom:1px;border:1px solid #bbb;' title=\"Larger number means more frames per second but it may slow down your computer.\"> " + aAutoUpdatePerSecOptions.join('') + " </select> "; } if(t.g_hSelf[sOnlinePatternKey] == 4 || t.g_hSelf[sOnlinePatternKey] == 5 ) { sH += " <img class=\"model_menu_bar_icons " + hIconsClass.overlay_avatar + " \" src=\"" + t.g_hPlatform.image_url_cdn + hIcons.overlay_avatar + "\" title=\"Avatar Overlay\" onClick=' t.FilterSortOptions.ToggleCheckbox(window,\"model_list_overlay_avatar_" + g_sPlayerMode + "\",null,null,{ player_mode: g_sPlayerMode }); ' > "; }
 else if(t.g_hSelf[sOnlinePatternKey] == 1 || t.g_hSelf[sOnlinePatternKey] == 2 ) { sH += " <img class=\"model_menu_bar_icons " + hIconsClass.overlay_preview + " \" src=\"" + t.g_hPlatform.image_url_cdn + hIcons.overlay_preview + "\" title=\"Preview Overlay\" onClick=' t.FilterSortOptions.ToggleCheckbox(window,\"model_list_overlay_preview_" + g_sPlayerMode + "\",null,null,{ player_mode: g_sPlayerMode }); ' > "; } if(t.g_hSelf[sOnlinePatternKey] != 3 ) { sH += " <img class=\"model_menu_bar_icons " + hIconsClass.small + " \" src=\"" + t.g_hPlatform.image_url_cdn + hIcons.small + "\" title=\"Small Icons\" onClick=' t.FilterSortOptions.ToggleCheckbox(window,\"display_small\",null,null,{ player_mode: g_sPlayerMode }); ' ><img class=\"model_menu_bar_icons " + hIconsClass.large + " \" src=\"" + t.g_hPlatform.image_url_cdn + hIcons.large + "\" title=\"Large Icons\" onClick=' t.FilterSortOptions.ToggleCheckbox(window,\"display_large\",null,null,{ player_mode: g_sPlayerMode }); ' > "; } if(( g_sPlayerMode == 'homepage' || t.g_hSelf['model_list_show_links_' + g_sPlayerMode ] ) && t.g_hSelf[sOnlinePatternKey] != 3 ) { sH += " <img class=\"model_menu_bar_icons " + hIconsClass.links + " \" src=\"" +  hIcons.links + "\" title=\"Menu Links\" style=\"height:16px;width:16px;margin-top: -3px;\" onClick=' t.FilterSortOptions.ToggleCheckbox(window,\"model_list_show_links_" + g_sPlayerMode + "\",null,null,{ player_mode: g_sPlayerMode }); ' ></a> "; } sH += "<a class=\"omc_settings\" href=# onClick=\"FilterSortOptions_Player.Popup(); return false;\" style='text-decoration:none;' title=\"" + t.g_hPlatform.Performer + " List Settings\">"; if(g_sPlayerMode == 'homepage' ) sH += "<span class=full><img src='/images/flat/solid/svg_green/settings-2.svg'> <span style='text-decoration:underline;'>Settings</span></span>"; else sH += "<span class=mini><img src='/images/flat/solid/svg_green/settings-2.svg' style='margin-bottom: -3px;'></span>"; sH += "</a>"; sH += "<input type=text name=search id=online_model_search style=\" background:url(" + t.g_hPlatform.image_url_cdn + "files/images/misc/magnifying_glass_bg.png) no-repeat top right;\" class=\"text_input omc_search\" onKeyUp=\" ModelMenuBar.Search.Interaction(event,this); \" onPaste=\" ModelMenuBar.Search.Interaction(event,this); \" onClick=\" ModelMenuBar.Search.Interaction(event,this,'prepare_only'); \" placeholder=\"Search...\" value='" + ( ModelMenuBar.Search.sQuery ? ModelMenuBar.Search.sQuery.replace(/[^\w\s,]/,'') : "" ) + "'\
 > "; if(g_sPlayerMode == 'homepage' ) { sH += "<span id=new_models class=\"omc_new_models " + ( ToggleNewModels.nShowOnlyNew ? "selected_model_menu_bar_icons" : "" ) + "\">"; sH += "<a href=# onClick=\"ToggleNewModels(); return false;\" title=\"Show only new " + t.g_hPlatform.performer + "s\">"; sH += "<img src='/images/svg/woman_waving.svg' style='height:16px;width:16px;margin-bottom:-3px;padding-right:2px;' title='Click here to see new models'>"; sH += "New Models</a>"; sH += "</span>"; } else { sH += "<a href=# onClick=\"ToggleNewModels(); return false;\" title=\"Show only new " + t.g_hPlatform.performer + "s\" style='display:inline-block;position:relative;height:12px;width:25px;'>"; sH += "<img src='/images/svg/woman_waving.svg' id=new_models class=\"omc_new_models_player " + ( ToggleNewModels.nShowOnlyNew ? "selected_model_menu_bar_icons" : "" ) + "\" style='position:absolute;top:-5px;left:0px;margin-bottom:-3px;padding:2px;' title='Click here to see new models'>"; sH += "</a>"; } sH += "</a>"; if(t.g_hSelf.enable_auto_scroll_control ) { sH += "<span class=\"omc_autoscroll\" id=auto_scroll_control>" + ModelMenuBar.AutoScroll_HTML() + "</span>"; } if(t.g_hSelf.show_text_list_link ) { sH += "<a class=\"omc_text_list\" href=# onClick=\"PopModelIndex({ mode:'full' }); return false;\" title='Show Text List of " + t.g_hPlatform.Performer + "s'>Text</a>&nbsp; "; } sH += "<a href=# onClick='OnlineBroadcasterList.PauseRefresh();return false;' title='Pause/Restart Updating of " + t.g_hPlatform.Performer + " List'>"; sH += "<img class=\"omc_pauseplay " + ( mfcBroadcasterDisplay.hOptions.bPauseRefresh ? 'highlight_bg' : '' ) + "\" src='"; sH += t.g_hPlatform.image_url_cdn + 'files/images/icons/svg/' + ( mfcBroadcasterDisplay.hOptions.bPauseRefresh ? 'play.svg' : 'pause.svg' ); sH += "' title=\"" + ( mfcBroadcasterDisplay.hOptions.bPauseRefresh ? 'Restart' : 'Pause' ) + " updating of " + t.g_hPlatform.Performer + " List\" ></a>"; sH += "<a href=# onClick=\" ModelMenuBar.RefreshModelList(); return false;\" title=\"Refresh " + t.g_hPlatform.performer + " list\">"; sH += "<img class=\"omc_refresh_icon\" id=refresh_icon "; sH += " src=\"" + t.g_hPlatform.image_url_cdn + "files/images/svg/refresh.svg\""; sH += " title=\"Manually refresh " + t.g_hPlatform.performer + " list\"></a>"; if(( g_UA.mobile ) && t.g_hSelf.model_list_mode == 'page' ) { sH += "<br>"; } if(t.g_hSelf.model_list_mode == 'page' ) { var aModelsPerPage = new Array(20,50,100,200,300,400,500); var sModelsPerPageOptions = '';
 for(var nK=0; nK < aModelsPerPage.length; nK++ ) { sModelsPerPageOptions += "<option value=" + aModelsPerPage[nK] + " " + ( t.g_hSelf['models_per_page'] == aModelsPerPage[nK] ? 'SELECTED' : '' ) + ">" + aModelsPerPage[nK] + ( g_sPlayerMode == 'homepage' ? ( ' ' + t.g_hPlatform.Performer + 's/Page' ) : '&#47;page' ) + "</option>"; } sH += " <select class=\"omc_per_page\" name=\"models_per_page\" onChange=\" mfcBroadcasterDisplay.hOptions.nCurrentPage=1; t.UserExtensions.Write('models_per_page',this.value); OnlineBroadcasterList.Refresh('reset',{scroll_to_top:1}); \"> " + sModelsPerPageOptions + " </select> <span id=\"model_list_paging\">" + ModelMenuBar.Paging.sContents + "</span> "; } if(g_sPlayerMode == 'player' ) { sH += "<a href=# onClick=\"ModelMenuBar.HideOnlineBroadcasters(" + ( ModelMenuBar.bHideOnlineModels ? 0 : 1 ) + "); return false;\" onTouchStart=\"ModelMenuBar.HideOnlineBroadcasters(" + ( ModelMenuBar.bHideOnlineModels ? 0 : 1 ) + "); return false;\" title=\"Show/Hide " + t.g_hPlatform.Performer + " List\"><span id=toggle_online_broadcasters>" + "<img src='/files/images/svg/" + ( ModelMenuBar.bHideOnlineModels ? 'maximize2.svg' : 'minimize2.svg' ) + "' style='height:12px; margin:0px 4px -1px 2px;'>" + "</span></a>"; } SetHTML('online_broadcaster_controls',sH); SetHTML('lower_half_controls',sLowerHalfControls); ModelMenuBar.Message.Set();};ModelMenuBar.PreviewZoom = function(){ var sOnlinePatternKey = g_sPlayerMode == 'player' ? 'online_model_pattern_player' : 'online_model_pattern'; if(mfcBroadcasterDisplay.hTempPatternToggleMode[g_sPlayerMode] ) { mfcBroadcasterDisplay.hCurrentPattern[g_sPlayerMode] = mfcBroadcasterDisplay.hCurrentPattern[g_sPlayerMode] == 4 ? 5 : 4; } else if(t.g_hSelf[sOnlinePatternKey] == 4 || t.g_hSelf[sOnlinePatternKey] == 5 ) { t.g_hSelf[sOnlinePatternKey] = t.g_hSelf[sOnlinePatternKey] == 4 ? 5 : 4; t.UserExtensions.Write(sOnlinePatternKey, t.g_hSelf[sOnlinePatternKey] ); mfcBroadcasterDisplay.hCurrentPattern[g_sPlayerMode] = t.g_hSelf[sOnlinePatternKey]; } ModelMenuBar.Refresh();
 OnlineBroadcasterList.Refresh('reset');};ModelMenuBar.ToggleSetting = function(sKey, sValue ){ var sInitialValue = t.g_hSelf[ sKey ]; if(sKey == ( 'auto_update_livesnaps_persec_' + g_sPlayerMode ) ) { if(sValue == '0' ) { ModelMenuBar.ToggleSetting('auto_update_livesnaps',0); return; } else if(! ( t.g_hSelf.auto_update_livesnaps & ( g_sPlayerMode == 'player' ? 2 : 1 ) ) ) { ModelMenuBar.ToggleSetting('auto_update_livesnaps',1); } } if(sKey == 'auto_update_livesnaps' ) { var bit = g_sPlayerMode == 'player' ? 2 : 1; if(sValue == 1 ) t.g_hSelf[ sKey ] = t.g_hSelf[ sKey ] | bit; else t.g_hSelf[ sKey ] = t.g_hSelf[ sKey ] & ~ bit; } else { t.g_hSelf[ sKey ] = sValue; } if(t.g_hSelf[ sKey ] != sInitialValue ) { t.UserExtensions.Write(sKey,t.g_hSelf[ sKey ]); } if(sKey == 'auto_update_livesnaps' || sKey == ( 'auto_update_livesnaps_persec_' + g_sPlayerMode ) ) { mfcBroadcasterDisplay._ClearBroadcasterHtmlCache(); OnlineBroadcasterList.Refresh('force'); } ModelMenuBar.Refresh();};ModelMenuBar.TogglePauseLivesnapAnimations = function(bPaused ){ if(typeof(bPaused) == 'undefined' ) { t.g_hSelf.pause_auto_update_livesnaps = ! t.g_hSelf.pause_auto_update_livesnaps; }
 oEl = GetEl('pause_animation_icon'); if(oEl ) { if(t.g_hPlatform.id == PLAT_CAM ) oEl.src = t.g_hPlatform.image_url_cdn + 'images/flat/stroke/svg/' + ( t.g_hSelf.pause_auto_update_livesnaps ? 'play-2.svg' : 'pause-3.svg' ); else oEl.src = t.g_hPlatform.image_url_cdn + 'files/images/icons/svg/' + ( t.g_hSelf.pause_auto_update_livesnaps ? 'play.svg' : 'pause.svg' ); } mfcBroadcasterDisplay._ClearBroadcasterHtmlCache(); OnlineBroadcasterList.Refresh('force');};ModelMenuBar.RefreshModelList = function(){ var oEl = GetEl('refresh_icon'); if(! oEl ) { return; } oEl.classList.add('active'); mfcBroadcasters.ClearListCache(); mfcBroadcasterDisplay.DisplayLoadingMessage(); setTimeout(function() { mfcBroadcasterDisplay.RemoveLoadingMessage(); OnlineBroadcasterList.Refresh('force'); oEl.classList.remove('active'); },400);};ModelMenuBar.ToggleCamPreview = function(nMode ){ if(nMode != undefined ) mfcBroadcasterDisplay.hTempPatternToggleMode[g_sPlayerMode] = nMode; else mfcBroadcasterDisplay.hTempPatternToggleMode[g_sPlayerMode] = mfcBroadcasterDisplay.hTempPatternToggleMode[g_sPlayerMode] ? 0 : 1; if(mfcBroadcasterDisplay.hTempPatternToggleMode[g_sPlayerMode] ) { if(mfcBroadcasterDisplay.hTempPatternToggleType[g_sPlayerMode] == 'avatar' ) mfcBroadcasterDisplay.hCurrentPattern[g_sPlayerMode] = 1; else mfcBroadcasterDisplay.hCurrentPattern[g_sPlayerMode] = 4; } else { var sOnlinePatternKey = g_sPlayerMode == 'player' ? 'online_model_pattern_player' : 'online_model_pattern'; mfcBroadcasterDisplay.hCurrentPattern[g_sPlayerMode] = t.g_hSelf[sOnlinePatternKey]; } ModelMenuBar.Refresh(); OnlineBroadcasterList.Refresh('reset'); if(t.g_hSelf.model_list_mode == 'scroll' ) mfcBroadcasterDisplay.DynamicScroll_RestorePosition_Recall();
};function GetCurrentBroadcasterDisplayPattern(){ var sOnlinePatternKey = g_sPlayerMode == 'player' ? 'online_model_pattern_player' : 'online_model_pattern'; return mfcBroadcasterDisplay.hCurrentPattern[g_sPlayerMode] || t.g_hSelf[sOnlinePatternKey];}ModelMenuBar.Search = { hNoMatch_Tracker: {}, AltSearchQuery: {}, hBoolSearch: {}, oLock: {}, sQuery: ''};ModelMenuBar.Search.Interaction = function(event, oInput, sMode ){ if(event.keyCode == 13 ) { ModelMenuBar.Search.Execute('execute'); return; } if(! oInput.value && ! ModelMenuBar.Search.sQuery ) { return; } if(oInput.value.match(/Search\.\.\./) ) { oInput.style.background=''; oInput.value=oInput.value.replace(/.*Search\.\.\./,''); } if(sMode == 'prepare_only' ) { return; } setTimeout(function() { ModelMenuBar.Search.Execute(); }, 0 ); setTimeout(function() { var oEl = GetEl('online_model_search'); if(oEl ) { oEl.focus(); } }, 250 );};ModelMenuBar.Search.Execute = function(sMode, sSearchTerm, hOptions ){ hOptions = hOptions || {};
 mfcBroadcasterDisplay.scrollTo(0); if(ModelMenuBar && ModelMenuBar.AutoScroll_Stop ) { ModelMenuBar.AutoScroll_Stop(); } var oInput = GetEl('online_model_search'); if(! oInput ) { Log('ModelMenuBar.Search.Execute error, no search oInput'); return; } if(sMode == 'clear' ) { ModelMenuBar.Search.OfflineUsernameLookup_Found = 0; oInput.value = ''; ModelMenuBar.Search.sQuery = ''; NewsFeedSearch.Clear(); ShareSearch.Clear(); ModelSearch.Clear('topics'); ModelSearch.Clear('tags'); TagsHandlers.Unload(); Tags.unload(); if(GetEl('online_model_control_message') ) { SetHTML('online_model_control_message',""); } if(GetEl('homepage_update') ) { GetEl('homepage_update').style.display='none'; } OnlineBroadcasterList.Refresh('force'); } else if(sMode == 'update' && ModelMenuBar.Search.sQuery ) { ModelSearch.Execute('topics','',hOptions); if(t.g_hPlatform.id == PLAT_MFC && ModelMenuBar.Search.bFullWord ) { NewsFeedSearch.Execute(); if(ModelMenuBar.Search.bBoolSearch && ModelMenuBar.TagsViewMode != 'original' ) { TagsHandlers.Unload(); ModelSearch.Execute('tags'); } else { if(g_hQS.old_tags ) { g_oTags.RefineTags('update'); } else
 { Tags.load(); } } } } else if(sMode == 'execute' || sMode == 'delayed_execution' ) { if(! sSearchTerm ) { sSearchTerm = oInput.value; } sSearchTerm = sSearchTerm.replace(/["'<>]/g,''); sSearchTerm = sSearchTerm.replace(/^\s+/,''); sSearchTerm = sSearchTerm.replace(/\s+$/,''); sSearchTerm = sSearchTerm.replace(/,\s*$/g,''); sSearchTerm = sSearchTerm.replace(/,/g,' or '); if(sSearchTerm.length < 2 ) return; if(! oInput.value.match(/.*Search\.\.\./) ) ModelMenuBar.Search.sQuery = sSearchTerm; ModelMenuBar.Search.NoMatches('reset'); ModelMenuBar.Search.bBoolSearch = ModelMenuBar.Search.sQuery.match(/ (and|not|or) /) ? true : false; ModelMenuBar.Search.hBoolSearch = MfcBoolSearch.prototype.parseQueryString(sSearchTerm ); if(OnlineBroadcasterList.Refresh.sCurrentlyLoadedQuery && ModelMenuBar.Search.sQuery == OnlineBroadcasterList.Refresh.sCurrentlyLoadedQuery ) { return; } mfcBroadcasterDisplay.hOptions.nCurrentPage = 1; OnlineBroadcasterList.Refresh.sCurrentlyLoadedQuery = null; OnlineBroadcasterList.Refresh('force'); ModelMenuBar.Search.OfflineUsernameLookup_Found = 0; if(t.FcUsernameLookup && t.FcUsernameLookup.Query ) { t.FcUsernameLookup.Query(ModelMenuBar.Search.sQuery, ModelMenuBar.Search.OfflineUsernameLookupCallback ); } ModelSearch.Execute('topics','',hOptions); ModelSearch.hMatches.tags = '-';
 ModelMenuBar.Search.bFullWord = 0; clearTimeout(ModelMenuBar.nLongerExecuteDelayTimer ); if(ModelMenuBar.Search.sQuery.length > 3 || sMode == 'delayed_execution' || ModelMenuBar.Search.sQuery.match(/^(gape|milf|bdsm|fuck|tiny|wife|goth|pain|katy|scar|foot|kiss|nerd|dick|deep|clit|slut|kink|bush|tits|bust|girl|wild|huge|love|fist|boob|cock|lady|feet|cute|hair|teen|milk|asia|anal|preg|milf|sub|wet|pee|cum|dom|ass|mom|big|bbw|red|toy)$/) ) { ModelMenuBar.Search.bFullWord = 1; ModelSearch.Clear('tags'); TagsHandlers.Unload(); if(ModelMenuBar.Search.bBoolSearch && ModelMenuBar.TagsViewMode != 'original' ) { ModelSearch.Execute('tags'); } else { if(g_hQS.old_tags ) { g_oTags.sStyleOverride = 'player'; g_oTags.Load(); g_oTags.TagSearch(ModelMenuBar.Search.hBoolSearch ); } else { Tags.load(); } } NewsFeedSearch.Execute(); ShareSearch.Execute(); } else { ModelMenuBar.nLongerExecuteDelayTimer = setTimeout(function() { ModelMenuBar.Search.Execute('delayed_execution') },2500); NewsFeedSearch.Clear(); ShareSearch.Clear(); TagsHandlers.Unload(); } LayoutSizing.size_online_model_area(); } else {
 clearTimeout(ModelMenuBar.Search.oLock ); if(ModelMenuBar.sLastSearch && ModelMenuBar.sLastSearch.indexOf(oInput.value ) > -1 && ModelMenuBar.sLastSearch.length > oInput.value.length ) { ModelMenuBar.sLastSearch = oInput.value; ModelMenuBar.Search.oLock = setTimeout(function(){ ModelMenuBar.Search.Execute('execute') },2500); return; } ModelMenuBar.sLastSearch = oInput.value; if(oInput.value == '' ) ModelMenuBar.Search.oLock = setTimeout(function(){ ModelMenuBar.Search.Execute('clear') },500); else ModelMenuBar.Search.oLock = setTimeout(function(){ ModelMenuBar.Search.Execute('execute') },1500); }};ModelMenuBar.Search.OfflineUsernameLookupCallback = function(nErrCode, sUsername, hUser, hContext ){ var nUserId = hUser ? hUser.user_id : 0; if(! nUserId || ! t.g_hUsers[ nUserId ] || t.g_hUsers[ nUserId ].access_level != 4 || t.g_hUsers[nUserId].state < FCS.FCVIDEO_RX_IDLE ) { return; } ModelMenuBar.Search.OfflineUsernameLookup_Found = nUserId; sHtml = " <div class=search_offline_model_result id=search_offline_model_result onContextMenu=\" return Player_popUserMenu_open(" + nUserId + "); \"> <table> <tr> <td style=\"padding-right:20px;\"> <img class=avatar_border src=\"" + AvatarUrl(nUserId,90) + "\" draggable=\"true\" ondragstart=\" t.nDragUserId=" + nUserId + "; \"> </td> <td> <div style=\"padding-bottom:10px;\"> <span style=\"font-size:21px;\"><b>" + t.g_hUsers[nUserId].username + "</b></span> is currently offline. </div> <div> " + A('bio',{ username: t.g_hUsers[nUserId].username }) + "<b>View Profile</b></a> |\
 " + A('tip',{ username: t.g_hUsers[nUserId].username, broadcaster_id: nUserId }) + "<b>Send Offline Tip</b></a> | <a href=# onClick=\"Player_popUserMenu_open(" + t.g_hUsers[nUserId].user_id + "); return false;\" title=\"Show Options Menu for " + t.g_hUsers[nUserId].username + ".\"><b>Menu</b></a> "; if(t.g_hUsers[ nUserId ].share && t.g_hUsers[ nUserId ].share.things ) { sHtml += "| "; if(t.g_hUsers[ nUserId ].share.albums ) { sHtml += "<b><a href=\"//share." + t.g_hPlatform.domain + "/" + t.g_hUsers[ nUserId ].username + "/albums\" rel='noopener noreferrer' target='_blank'>"; sHtml += t.g_hUsers[ nUserId ].share.albums + " Albums</a></b> on "; } sHtml += "<a href=\"//share." + t.g_hPlatform.domain + "/" + t.g_hUsers[ nUserId ].username + "\" rel='noopener noreferrer' target='_blank'>"; sHtml += "<img class=\"logo-mfc_share\" style=\"height:11px;width:80px;padding-right:3px;margin-bottom:-2px;\" src=\"" + t.g_hPlatform.image_url_cdn + "files/images/misc/clear.gif\">"; sHtml += "</a>"; } sHtml += " </div> </td> </tr> </table> </div> "; var oEl; if(oEl = document.getElementById('search_offline_model_result') ) { oEl.parentNode.innerHTML = sHtml; } else { var oEl = GetEl('online_broadcasters_header'); if(oEl ) { oEl.style.display = 'block'; oEl.innerHTML = sHtml; } }};ModelMenuBar.Search.HighlightInput = function(){ var oEl; if(oEl = GetEl('online_model_search') ) { oEl.value=''; oEl.focus();
 setTimeout(function() { oEl.classList.add('highlight_bg'); }, 50 ); }};ModelMenuBar.Search.NoMatches = function(sSearchCategory ){ if(sSearchCategory == 'reset' ) { if(ModelMenuBar.Search.hNoMatch_Tracker['no_matches_triggered'] ) GetEl('homepage_update').style.display='none'; ModelMenuBar.Search.hNoMatch_Tracker = {}; return; } ModelMenuBar.Search.hNoMatch_Tracker[ sSearchCategory ] = 1; if(! ModelMenuBar.Search.hNoMatch_Tracker['by_news'] || ! ModelMenuBar.Search.hNoMatch_Tracker['by_topics'] || ! ModelMenuBar.Search.hNoMatch_Tracker['by_name'] || ! ModelMenuBar.Search.hNoMatch_Tracker['by_tags'] || ModelMenuBar.Search.OfflineUsernameLookup_Found ) { if(ModelMenuBar.Search.hNoMatch_Tracker['no_matches_triggered'] ) GetEl('homepage_update').style.display='none'; return; } if(ModelMenuBar.Search.hNoMatch_Tracker['no_matches_triggered'] ) { return; } ModelMenuBar.Search.hNoMatch_Tracker['no_matches_triggered'] = true; var sHtml=''; if(! ModelMenuBar.Search.sQuery.match(/ (or|not) /) && ModelMenuBar.Search.sQuery.match(/\w\s+\w/) ) { var sCleanSearch = ModelMenuBar.Search.sQuery; sCleanSearch = sCleanSearch.replace(/\s+/g,' '); sCleanSearch = sCleanSearch.replace(/^\s+/,''); sCleanSearch = sCleanSearch.replace(/\s+$/,''); var sAlternateAnd=''; if(sCleanSearch.match(/ and /) ) { sCleanSearch = sCleanSearch.replace(/ and /,' ');
 } else { ModelMenuBar.Search.AltSearchQuery.and = sCleanSearch.replace(/\s/g,' and '); sAlternateAnd = " or <b><a href=\"javascript:ModelMenuBar.Search.RunAltSearchQuery('and');\">" + ModelMenuBar.Search.AltSearchQuery.and.replace(/ and /g,' <i>and</i> ') + "</a></b> "; } ModelMenuBar.Search.AltSearchQuery.or = sCleanSearch.replace(/\s/g,' or '); sHtml = " Search instead for <b><a href=\"javascript:ModelMenuBar.Search.RunAltSearchQuery('or');\">" + ModelMenuBar.Search.AltSearchQuery.or.replace(/ or /g,' <i>or</i> ') + "</a></b> " + sAlternateAnd + " "; GetEl('homepage_update').style.display='block'; SetHTML('homepage_update',sHtml); } else { sHtml = " No search results.&nbsp; See our <a href=\"https://wiki." + t.g_hPlatform.domain + "/wiki/Instructions_and_Features#Search\" target=\"_blank\">Wiki page</a> for advanced search options. "; } sHtml = " <div class=\"search_no_matches\"> " + sHtml + " </div> "; GetEl('homepage_update').style.display='block'; SetHTML('homepage_update',sHtml);};ModelMenuBar.Search.RunAltSearchQuery = function(sAltMode ){ var oInput = GetEl('online_model_search'); if(! oInput ) { return; } oInput.value = ModelMenuBar.Search.AltSearchQuery[ sAltMode ]; ModelMenuBar.Search.Execute('execute');};ModelMenuBar.Search.LoadAlternateTagsView = function(sMode ){ ModelMenuBar.TagsViewMode = sMode;
 if(sMode == 'list' ) { TagsHandlers.Unload(); ModelSearch.Execute('tags'); } else if(sMode == 'original' ) { ModelSearch.Clear('tags');if(g_hQS.old_tags ){ g_oTags.sStyleOverride = 'player'; g_oTags.Load(); g_oTags.TagSearch(ModelMenuBar.Search.hBoolSearch );}else{ Tags.load();} }};ModelMenuBar.HideOnlineBroadcasters = function(sMode, bTemporary ){ ModelMenuBar.bHideOnlineModels = sMode ? 1 : 0; if(! ModelMenuBar.bHideOnlineModels && ModelMenuBar.bChatUnderVideo ) { t.UserExtensions.Write('chat_under_video',0); } ClickDragVideo.ModelListSizeReset(); if(! bTemporary ) { t.UserExtensions.Write('hide_online_models', ModelMenuBar.bHideOnlineModels ); } setTimeout(ModelMenuBar.HideRevealOnlineBroadcasters, 500 );};ModelMenuBar.RefreshChatUnderVideoFlag = function(){ var nHWRatio = ( window.innerHeight / window.innerWidth ); var bConditionalChatUnderVideo = ( g_bPopupPlayer && nHWRatio > 0.65 ); ModelMenuBar.bChatUnderVideo = ( t.g_hSelf.chat_under_video == 1 && t.g_hSelf.chat_under_video != -1 && ! g_bPopupPlayer && ModelMenuBar.bHideOnlineModels ) || ( ! t.g_hSelf.chat_under_video
 && ModelMenuBar.bHideOnlineModels && nHWRatio > 0.65 ) || ( g_bPopupPlayer && nHWRatio > 0.65 ); return ModelMenuBar.bChatUnderVideo;};ModelMenuBar.HideRevealOnlineBroadcasters = function(){ if(g_sPlayerMode != 'player' || g_bPopupPlayer ) { return; } ModelMenuBar.RefreshChatUnderVideoFlag(); var oModelListGripTd = GetEl('click_drag_model_list_td'); if(ModelMenuBar.bHideOnlineModels ) { if(! t.g_hSelf['single_page_website'] ) GetEl('videochat_container_td').style.height='calc(100% - 26px)'; if(oModelListGripTd ) { oModelListGripTd.style.display = 'none'; } var oEl; if(! IframeContent.enabled && ( oEl = GetEl('lower_half_controls') ) ) { oEl.style.display = 'none'; } } else { GetEl('online_broadcaster_controls_container').style.display='block'; GetEl('online_broadcasters_td').style.height=''; GetEl('online_broadcaster_controls_container_minimized').style.display='none'; GetEl('videochat_container_td').style.height=''; if(oModelListGripTd ) { oModelListGripTd.style.display = 'block'; } var oEl; if(( oEl = GetEl('lower_half_controls') ) ) { oEl.style.display = 'block'; } } ModelMenuBar.Refresh(); OnResizeHandler();
 ChatBox.ScrollToBottom('force4'); OnlineBroadcasterList.Refresh('reset'); setTimeout(function() { OnResizeHandler(); ChatBox.ScrollToBottom('force4'); OnlineBroadcasterList.Refresh('reset'); },500);};ModelMenuBar.LoadingDone = function(){ if(! GetEl('online_model_loading_message') ) { return; } SetHTML('online_model_loading_message', "");};ModelMenuBar.Message = { bThrottleRendering: 0, nThrottleRenderingTimer: 0, nLimiter: 0, sCache: '', oReq: createRequestObject()};ModelMenuBar.Message.Set = function(sMode ){ if(! GetEl('online_model_control_message') ) { return; } if(t.g_nConnectingMode != FCS.FCTYPE_CONNECTED || ! t.g_bLoginDone ) { SetHTML('online_model_control_message',"<span class=\"omc_loading_init\"><i id=\"omc_loading_init_bar\"></i></span>"); return; } var sHtml = ''; var bar = GetEl('omc_loading_init_bar'); //prevent restarting of progress bar during nightmode transition
 if(!t.FcSessionState.bModelsLoaded && !bar ) { if(ModelMenuBar.Message.bThrottleRendering ) { clearTimeout(ModelMenuBar.Message.nThrottleRenderingTimer ); ModelMenuBar.Message.nThrottleRenderingTimer = setTimeout(function(){ ModelMenuBar.Message.bThrottleRendering = 0; if(bar ) { bar.classList.add('active'); } },1000); return; } ModelMenuBar.Message.bThrottleRendering = 1;
 sHtml = "<span class=\"omc_loading_init\"><i id=\"omc_loading_init_bar\"></i></span>"; ModelMenuBar.Message.nPreviousCount = ModelMenuBar.Message.nCurrentCount; } else if(ModelMenuBar.Search.sQuery ) { var aMatches = []; if(mfcBroadcasterDisplay.nTotalModels > 0 ) aMatches.push("<b>" + mfcBroadcasterDisplay.nTotalModels + "</b> <a href=#online_models_section>names</a>"); if(ModelSearch.hMatches.topics > 0 ) aMatches.push("<b>" + ModelSearch.hMatches.topics + "</b> <a href=#topics_section>topics</a>"); if(ModelSearch.hMatches.tags > 0 ) aMatches.push("<b>" + ModelSearch.hMatches.tags + "</b> <a href=#tags_section>tags</a>"); if(NewsFeedSearch.sSearchMatches > 0 ) aMatches.push("<b>" + NewsFeedSearch.sSearchMatches + "</b> <a href=#news_section>news feeds</a>"); sHtml += " " + ( aMatches.length ? ('<span class=highlight_bg>Matches: ' + aMatches.join(', ') + '</span>') : '<span style="color:gray;">No Matches</span>' ) + " &nbsp; <a href=\"javascript:ModelMenuBar.Search.Execute('clear');\"><b>Clear Search</b></a> &nbsp; "; } else if(t.g_hPlatform.id == PLAT_MFC ) { if(ModelMenuBar.Message.bThrottleRendering > 0 && ModelMenuBar.Message.bThrottleRendering < 10 ) { ModelMenuBar.Message.bThrottleRendering++; clearTimeout(ModelMenuBar.Message.nThrottleRenderingTimer ); ModelMenuBar.Message.nThrottleRenderingTimer = setTimeout(function() { ModelMenuBar.Message.bThrottleRendering = 0; ModelMenuBar.Message.Set(sMode ); }, 1000 ); return; } ModelMenuBar.Message.bThrottleRendering = 1; clearTimeout(ModelMenuBar.Message.nThrottleRenderingTimer ); ModelMenuBar.Message.nThrottleRenderingTimer = setTimeout(function() { ModelMenuBar.Message.bThrottleRendering = 0; }, 1000); var back_to_top_active = ( t.g_hSelf.model_list_mode == 'scroll' && mfcBroadcasterDisplay.scrollable_element && mfcBroadcasterDisplay.nLast_scrollTop > 300 && sMode != 'back_to_top' ) ? 'active' : ''; sHtml += "<a class=\"omc_back_to_top "+back_to_top_active+"\" href=\"javascript:mfcBroadcasterDisplay.DynamicScroll_BackToTop(); ModelMenuBar.Message.Set('back_to_top'); this.classList.remove('active'); \"><img src=\"https://img.mfcimg.com/images/flat/solid/svg_green/up-circle-4.svg\" title=\"Return to Top of Model List\"></a> ";
 var sRegionTop='', nRegionTop=0; var hRegionModels = mfcBroadcasters.GetRegionTopModels(); var nTotalBroadcasters = mfcBroadcasters.nCurrentTotal || 0; var sTotalBroadcasters = ( nTotalBroadcasters <= 10 ) ? "<span class=\"omc_loading_init inactive\"><i class=\"inactive\" id=\"omc_loading_init_bar\"></i></span>" : '<span class="omc_total"><b>' + nTotalBroadcasters + '</b> <a href="javascript:PopupDynamicScroll.Menu();">'; if(g_sPlayerMode == 'homepage' ) sTotalBroadcasters += t.g_hPlatform.Performer + 's'; else sTotalBroadcasters += "<img src='/images/svg/woman.svg' style='height:16px;width:16px;margin-bottom:-3px;margin-left:-2px;' title='Online Models'>"; sTotalBroadcasters += '</a></span>'; for(var nModelId in hRegionModels ) { nRegionTop++; } if(nRegionTop ) { sRegionTop = "<a class\"omc_region_top\" href=# onClick=\"FilterSortOptions_Player.Popup({ highlight_top: 1 });return false;\" title=\"" + t.g_hPlatform.Performer + " List Settings\"><b>" + nRegionTop + "</b> Top</a>"; } sHtml += sTotalBroadcasters; if(mfcBroadcasters.nHiddenModels ) { sHtml += " <span class=\"omc_total no_view\" title=\"Hidden Models\"><b>" + mfcBroadcasters.nHiddenModels + "</b> <a href=# onClick='FilterSortOptions_Player.Popup({ highlight_hidden: 1 });return false;' title=\"There are " + mfcBroadcasters.nHiddenModels + " hidden models. Click here to edit your " + t.g_hPlatform.Performer + " List Settings\"><img style=\"background-color: #FFFFFF88;padding:0px 1px;border-radius:5px;\" src=\"" + t.g_hPlatform.image_url_cdn + "files/images/icons/svg/no_view.svg\"></a></span> " + sRegionTop; } if(mfcBroadcasterDisplay.nTotalModels ) ModelMenuBar.Message.nLimiter=1; setTimeout(function(){ ModelMenuBar.Message.nLimiter=0; } ,30000); } ModelMenuBar.Message.sCache = sHtml; SetHTML('online_model_control_message',sHtml);};ModelMenuBar.AutoScroll = function(){ if(ModelMenuBar.AutoScroll_timer ) { ModelMenuBar.AutoScroll_Stop(); return; } ModelMenuBar.AutoScroll_lastPos = null; ModelMenuBar.AutoScroll_Scroll(); var oEl = GetEl('online_broadcasters_available_space'); if(oEl ) oEl.addEventListener('contextmenu', ModelMenuBar.AutoScroll_Stop ); var oEl = GetEl('online_broadcasters_container');
 if(oEl ) { oEl.addEventListener('click', ModelMenuBar.AutoScroll_Stop ); oEl.addEventListener('contextmenu', ModelMenuBar.AutoScroll_Stop ); } var oEl = GetEl('auto_scroll_control'); if(oEl ) oEl.innerHTML = ModelMenuBar.AutoScroll_HTML(); clearTimeout(ModelMenuBar.AutoScroll_refreshTimer ); ModelMenuBar.AutoScroll_refreshTimer = setInterval(function(){ OnlineBroadcasterList.Refresh('force'); }, 600000 );};ModelMenuBar.AutoScroll_Scroll = function(){ var oEl = GetEl('online_broadcasters_container'); var nDelay = ModelMenuBar.AutoScroll_Speeds[ t.g_hSelf.auto_scroll_speed || 's' ].delay; if(oEl ) { if(ModelMenuBar.AutoScroll_lastPos && ModelMenuBar.AutoScroll_lastPos != oEl.scrollTop ) { if(ModelMenuBar.AutoScroll_lastPos > 0 && oEl.scrollTop == 0 ) { oEl.scrollTop = ModelMenuBar.AutoScroll_lastPos; } else { ModelMenuBar.AutoScroll_Stop(); return; } } if(oEl.scrollTop >= ( oEl.scrollHeight - oEl.offsetHeight ) ) { oEl.scrollTop = 0; nDelay = 5000; } else { oEl.scrollTop = oEl.scrollTop + ModelMenuBar.AutoScroll_Speeds[ t.g_hSelf.auto_scroll_speed || 's' ].distance; } ModelMenuBar.AutoScroll_lastPos = oEl.scrollTop; } clearTimeout(ModelMenuBar.AutoScroll_timer ); ModelMenuBar.AutoScroll_timer = setTimeout(ModelMenuBar.AutoScroll_Scroll,nDelay);
};ModelMenuBar.AutoScroll_Stop = function(){ clearTimeout(ModelMenuBar.AutoScroll_timer ); ModelMenuBar.AutoScroll_timer = 0; var oEl = GetEl('online_broadcasters_available_space'); if(oEl ) oEl.removeEventListener('contextmenu', ModelMenuBar.AutoScroll_Stop ); var oEl = GetEl('online_broadcasters_container'); if(oEl ) { oEl.removeEventListener('click', ModelMenuBar.AutoScroll_Stop ); oEl.removeEventListener('contextmenu', ModelMenuBar.AutoScroll_Stop ); } var oEl = GetEl('auto_scroll_control'); if(oEl ) oEl.innerHTML = ModelMenuBar.AutoScroll_HTML(); clearTimeout(ModelMenuBar.AutoScroll_refreshTimer );};ModelMenuBar.AutoScroll_HTML = function(){ var sH=''; sH += "<a href=# onClick=\" ModelMenuBar.AutoScroll(); return false; \">"; sH += ModelMenuBar.AutoScroll_timer ? "<span class=\"menubar_autoscroll\" style=\"background-color:yellow;\">Stop</span>" : "Scroll"; sH +="</a>"; var sOpts=''; for(var sK in ModelMenuBar.AutoScroll_Speeds ) { var sSel = sK == t.g_hSelf.auto_scroll_speed ? 'SELECTED' : ''; sOpts += "<option value=\"" + sK + "\" " + sSel + ">" + ModelMenuBar.AutoScroll_Speeds[sK].label + "</option>"; } sH += " <select name=auto_scroll_speed style=\"font-size:10px;width:47px;\" onChange=\"ModelMenuBar.AutoScroll_ChangeSpeed(this.value);\">" + sOpts + "</select>"; return sH;};ModelMenuBar.AutoScroll_ChangeSpeed = function(sK ){ t.UserExtensions.Write('auto_scroll_speed', sK );};ModelMenuBar.AutoScroll_Speeds = { 's': { label: 'Slow', delay: 120, distance: 1 }, 'm': { label: 'Medium', delay: 40, distance: 1 }, 'f': { label: 'Fast', delay: 10, distance: 1 }};
function WhiteboardNotice(hOptions ){ hOptions = hOptions || {}; var hUser = t.g_hUsers[g_nBroadcasterId]; if(! hUser ) { return; } if(hUser.platform_id != t.g_hPlatform.id ) { return; } var oWBNotice = GetEl('whiteboard_notice'); var bWhiteboardActive = hUser && hUser['whiteboard1']; if(hOptions.mode == 'init' ) { WhiteboardNotice.chatAnnouncement_ignore = false; WhiteboardNotice.chatAnnouncement_state = 0; } WhiteboardNotice.chatAnnouncement(hOptions );}WhiteboardNotice.chatAnnouncement_ignore = false;WhiteboardNotice.chatAnnouncement_state = 0;WhiteboardNotice.chatAnnouncement_timer = 0;WhiteboardNotice.chatAnnouncement = function(hOptions ){ var hOptions = hOptions || {}; if(WhiteboardNotice.chatAnnouncement_ignore == true ) { return; } var hUser = t && t.g_hUsers && t.g_hUsers[g_nBroadcasterId]; if(! hUser ) { return; } if(WhiteboardNotice.chatAnnouncement_state == hUser.whiteboard1 && hOptions.mode != 'init') { return; } WhiteboardNotice.chatAnnouncement_state = hUser.whiteboard1; var inChatPromo = new MfcInChatPromo({ platform: t.g_hPlatform }); var sMsg = inChatPromo.get_promo_html({ username: hUser.username, has_whiteboard: hUser.whiteboard1, a_whiteboard: "<a href=# onClick=\"WhiteboardNotice.clickLink({ dhtml_popup: true, user_id: " + hUser.user_id + " }); return false;\">", a_tipmenu: "<a href=# title=\"View the Tip Menu\" onClick=\" { t.MFCShare_DhtmlMenu({ user_id: " + hUser.user_id + ", thing_type: 'tipmenus', window: window }); } return false; \">", share: hUser.share, social: hUser.social });
 sMsg = "<div class=user_style style=\"" + MfcCustomFonts.prototype.get_style(hUser ) + "\">" + sMsg + "</div>"; if(hOptions.mode == 'update' ) ChatQueue.Format_Append(sMsg ); else { if(WhiteboardNotice.chatAnnouncement_timer > 0 ) { clearTimeout(WhiteboardNotice.chatAnnouncement_timer); } WhiteboardNotice.chatAnnouncement_timer = setTimeout(function(){ ChatQueue.Format_Append(sMsg ); }, ( hOptions.mode == 'init' ? 2500 : 0 ) ); } WhiteboardNotice.chatAnnouncement_ignore = true; setTimeout(function(){ WhiteboardNotice.chatAnnouncement_ignore = false; }, 30000 );};WhiteboardNotice.clickLink = function(hOptions ){ var hOptions = hOptions || {}; var nUserId = hOptions.user_id || g_nBroadcasterId; if(g_bPopupPlayer || hOptions.popup ) { var hPopupOpts = { do_click: 1, username: t.g_hUsers[ nUserId ].username, user_id: nUserId , channel: PublicChannel(nUserId ), height: 900, width: 900, popup_title: ( PossessiveApostrophe(t.g_hUsers[ nUserId ].username) + " Whiteboard") }; if(t.g_hSelf.window_mode & WINDOW_MODE_DESKTOP_DHTML ) { if(ModelMenuBar.bHideOnlineModels ) { hPopupOpts.left = ( window.innerWidth / 2 ) - 60; hPopupOpts.top = 20; hPopupOpts.width = window.innerWidth / 2; hPopupOpts.height = window.innerHeight / 2; } else { var oEl; if(oEl = GetEl('online_broadcasters_td') ) { var xy = FindAbsoluteOffset(oEl); hPopupOpts.left = xy.x + 20; hPopupOpts.top = xy.y + 55; hPopupOpts.width = oEl.offsetWidth - 40;
 hPopupOpts.height = oEl.offsetHeight - 90; } } } t.A('whiteboard',hPopupOpts); } else if(hOptions.dhtml_popup ) { t.WhiteBoardPopup(hOptions.user_id, window ); } else { IframeContent('whiteboard',{ user_id: nUserId , scrollTo: true }); }};ModelMenuBar.Message.nPreviousCount = 0;ModelMenuBar.Message.nCurrentCount = 0;ModelMenuBar.Paging = { sContents: '' };ModelMenuBar.Paging.Set = function(){ if(! GetEl('model_list_paging') ) { return; } if(ModelMenuBar.Search.sQuery ) { ModelMenuBar.Paging.sContents = ''; SetHTML('model_list_paging',''); return; } var sHtml = ''; var sPages = ''; var nPages = Math.ceil(( mfcBroadcasterDisplay.nTotalModels || 1 ) / t.g_hSelf['models_per_page'] ) || 1; if(nPages > 5 ) { sHtml = "&nbsp;<b>Page " + mfcBroadcasterDisplay.hOptions.nCurrentPage + "</b> "; if(mfcBroadcasterDisplay.hOptions.nCurrentPage == 1 ) { sHtml += "&lt;Previous"; } else { sHtml += "<a href=# onClick=\"mfcBroadcasterDisplay.hOptions.nCurrentPage=" + ( mfcBroadcasterDisplay.hOptions.nCurrentPage - 1 ) + ";OnlineBroadcasterList.Refresh('force',{scroll_to_top:1}); return false;\">&lt;Previous</a>"; }
 sHtml += " | "; if(mfcBroadcasterDisplay.hOptions.nCurrentPage == nPages ) { sHtml += "Next&gt;" } else { sHtml += "<a href=# onClick=\"mfcBroadcasterDisplay.hOptions.nCurrentPage=" + ( mfcBroadcasterDisplay.hOptions.nCurrentPage + 1 ) + ";OnlineBroadcasterList.Refresh('force',{scroll_to_top:1}); return false;\">Next&gt;</a>" } } else { for(var nPage=1; nPage <= nPages; nPage++ ) { if(mfcBroadcasterDisplay.hOptions.nCurrentPage == nPage ) sPages += "<span class=highlight_bg><b>" + nPage + "</b></span>,&nbsp;"; else sPages += "<a href=# onClick=\"mfcBroadcasterDisplay.hOptions.nCurrentPage=" + nPage + ";OnlineBroadcasterList.Refresh('force',{scroll_to_top:1}); return false;\" title='Go to Page " + nPage + " of " + t.g_hPlatform.Performer + " List'>" + nPage + "</a>,&nbsp;"; } sPages = sPages.substring(0,sPages.length - 7); sHtml = "&nbsp;Page&nbsp;" + sPages + "&nbsp;&nbsp;"; } if(sHtml != ModelMenuBar.Paging.sContents ) { ModelMenuBar.Paging.sContents = sHtml; SetHTML('model_list_paging',ModelMenuBar.Paging.sContents); }};ModelMenuBar.RandomizeModels = function(){ mfcBroadcasters.bGeneratedRandomAssignments = false; OnlineBroadcasterList.Refresh('force');};function ToggleNewModels(){ ToggleNewModels.nShowOnlyNew = ToggleNewModels.nShowOnlyNew ? 0 : 1; var oEl = GetEl('new_models'); if(ToggleNewModels.nShowOnlyNew ) { mfcBroadcasterDisplay.hOptions.nCurrentPage = 1;
 oEl.classList.add('selected_model_menu_bar_icons'); } else { oEl.classList.remove('selected_model_menu_bar_icons'); } mfcBroadcasters.ClearListCache(); OnlineBroadcasterList.Refresh('reset');}var NewsFeedSearch = { sSearchMatches: '-', nTimer: null, oReq: createRequestObject()};NewsFeedSearch.Execute = function(){ NewsFeedSearch.sSearchMatches = '-'; clearTimeout(NewsFeedSearch.nTimer ); NewsFeedSearch.nTimer = setTimeout(NewsFeedSearch.Execute_Delayed, 1000 ); NewsFeedSearch.Display('<i>Loading..</i>');};NewsFeedSearch.Execute_Delayed = function(){ if(ModelMenuBar.Search.sQuery.length < 3 ) { return; } NewsFeedSearch.Display('<i>Loading...</i>'); var apiUrl = ( MfcClientRes && MfcClientRes.apiUrl ) || ( "//api." + t.g_hPlatform.domain ); NewsFeedSearch.oReq.open("get", apiUrl + "/newsfeed?view_selection=search&size=20" + "&search_string=" + encodeURIComponent(JSON.stringify(ModelMenuBar.Search.sQuery)) ); NewsFeedSearch.oReq.onreadystatechange = NewsFeedSearch.Response; NewsFeedSearch.oReq.send(null);};NewsFeedSearch.Display = function(sHtml ){ if(! GetEl('newsfeed_search_matches') ) { return; } SetHTML('newsfeed_search_matches'," <div class=search_section><a name=news_section>&nbsp;</a></div> <div style='font-size:18px;border-bottom:1px solid #dddddd;padding-bottom:0px;'>\
 4. " + A('news_feed') + "News Feed</a> posts matching \"<span style=\"font-weight:bold;\">" + ModelMenuBar.Search.sQuery + "</span>\" (<a href=\"javascript:ModelMenuBar.Search.Execute('clear');\">Clear Search</a>) </div> <div style=\"padding:15px 15px;\"> " + sHtml + " </div> ");};NewsFeedSearch.Response = function(){ if(NewsFeedSearch.oReq.readyState != 4 ) { return; } var sHtml = ''; var sJSON = NewsFeedSearch.oReq.responseText; var ahNews = new Array(); var res = {}; try { if(sJSON ) { res = t.ParseJSON(decodeURIComponent(sJSON ) ); } } catch(e) { t.Log('NewsFeedSearch.Response'); t.Log(NewsFeedSearch.oReq.responseText ); } if(! res.result ) { NewsFeedSearch.Display('<span style="color:silver;">There was an error retrieving news feed search results. Please try again later.</span>'); return; } ahNews = res.result.news || []; hUsers = res.result.users || []; var aNewsFeedMatches = new Array(); var hOnePerModel = {}; for(var a=0; a < ahNews.length; a++ ) { if(hOnePerModel[ ahNews[a].user_id ] ) { continue; } hOnePerModel[ ahNews[a].user_id ] = 1; aNewsFeedMatches.push(NewsFeedSearch.BuildNewsFeedItem(ahNews[a], hUsers[ ahNews[a].user_id ] ) ); } if(aNewsFeedMatches.length ) { sHtml += aNewsFeedMatches.join(''); } else {
 sHtml += " <div style='padding:10px 0px 15px 0px;font-size:15px;color:gray;'> <i>No Matches by News Feed Message</i> </div> "; ModelMenuBar.Search.NoMatches('by_news'); } sHtml += " <div style=\"font-size:10px;padding-bottom:15px;\"> Only matching news feed posts from the last 48 hours, and only from " + t.g_hPlatform.performer + "s currently online. " + A('news_feed') + "Click here</a> to perform a complete news feed search. </div> "; NewsFeedSearch.Display(sHtml ); NewsFeedSearch.sSearchMatches = aNewsFeedMatches.length; ModelMenuBar.Message.Set();};NewsFeedSearch.BuildNewsFeedItem = function(hNews, hUser ){ var sRegEx; if(ModelMenuBar.Search.hBoolSearch ) { var aRegEx=[]; for(a=0; a < ModelMenuBar.Search.hBoolSearch.words.length; a++ ) aRegEx.push(ModelMenuBar.Search.hBoolSearch.words[a].replace(/[^\w\s]/,'') ); sRegEx = aRegEx.join('|'); } else if(ModelMenuBar.Search.sQuery ) { sRegEx = ModelMenuBar.Search.sQuery; } var oRE = new RegExp(" (" + sRegEx + ")", "gi" ); if(! hNews.message ) { return ''; } hNews.message = ParseEmoteOutput.prototype.Parse(hNews.message, { allow_user_images: t.g_hSelf.allow_user_images } ); hUser.access_level = 2; var sStyle = MfcCustomFonts.prototype.get_style(hUser ); var sHighlight = (" " + hNews.message ).replace(oRE,"<span class=highlight_bg >$1</span>"); var sHtml = " <div style=\"position:relative;margin-top:5px;\">\
 <div style=\"position:absolute;left:8px;top:8px;width:175px;\"> <img height=60 width=60 style=\"border-radius:6px;\" src=\"" + AvatarUrl(hUser.user_id ,60) + "\" draggable=\"true\" ondragstart=\" t.nDragUserId=" + hUser.user_id + "; \" > " + ( t.g_hUsers[hUser.user_id] ? A('player',{ 'broadcaster_id': hUser.user_id }) + "<img height=60 width=106 src=" + t.LiveSnapUrl(hUser.user_id,100) + " style=\"border-radius:4px;\" " + t.g_oAnimatedLiveSnaps.mouseEventCode(hUser.user_id) + "></a>" : "" ) + " </div> <div class=emphasized_bg style=\"font-size:14px;font-family:arial;border-radius:5px;-moz-border-radius:5px;-webkit-border-radius:5px;margin-bottom:20px;padding:10px 5px 5px 185px;\"> <div style=\"font-size:12px;padding:10px 0px 3px 9px;\"> " + hNews.message_date_pretty + ". &nbsp;&nbsp; " + hNews.time_since + " &nbsp;&nbsp; (" + A('news_feed',{ user_id: hUser.user_id }) + "View All News for this " + t.g_hPlatform.Performer + "</a>) (" + A('news_feed_popup',{ popup_menu:1, mode: 'subscriptions_to', modify_subscriptions:1, user_id: hUser.user_id, token: t.g_hSelf.token }) + "Follow</a>) (" + A('news_feed_popup',{ popup_menu:1, mode: 'hidden', modify_subscriptions:1, user_id: hUser.user_id, token: t.g_hSelf.token }) + "Ignore</a>) </div> <div class=\"player_news_options\" style=\"font-size:13px;padding:9px;background-color:#fff;border-radius:5px;-moz-border-radius:5px;-webkit-border-radius:5px;\"> " + A('bio',{ 'broadcaster_id': hUser.user_id, username:hUser.username }) + "<span class=user_style style=\"font-size:13px;font-weight:bold;" + sStyle + "\"> " + hUser.username + "</span></a> <a href=# onClick=\"Player_popUserMenu_open(" + hUser.user_id + "); return false;\" title=\"Show Options Menu for " + hUser.username + ".\"><i"+"mg sr"+"c=" + popUserMenu.people_icon(hUser.user_id ) + " style='vertical-align:bottom;margin:0px;' height=16></a> " + ( t.g_hUsers[hUser.user_id] ? ( '(' + A('player',{ 'broadcaster_id': hUser.user_id }) + "<span class=highlight_bg ><b>Online</b></span></a>)" ) : "" ) + " <b>" + sHighlight + "</span></a></b> </div> </div> </div> "; return sHtml;};NewsFeedSearch.Clear = function(){ SetHTML('newsfeed_search_matches','');};var ShareSearch = { sSearchMatches : 0,  container : 'share_search_matches'}; ShareSearch.Clear = function () { SetHTML(ShareSearch.container,''); var shareFrame = document.getElementById('ShareSearchiframe'); if ( !!shareFrame ) { shareFrame.parentNode.removeChild(shareFrame); }};
ShareSearch.Execute = function(){ ShareSearch.sSearchMatches = 0; clearTimeout(ShareSearch.nTimer ); ShareSearch.nTimer = setTimeout(ShareSearch.Execute_Delayed, 1000 ); ShareSearch.Display('<i>Loading..</i>');};ShareSearch.Execute_Delayed = function(){ if(ModelMenuBar.Search.sQuery.length < 3 ) { return; } ShareSearch.Display(''); var sSrc = 'https://share.myfreecams.com/search?mfc_embedded_search=true&online_priority=1&q='+ModelMenuBar.Search.sQuery;  if(t.NightMode_Top.enabled ) { sSrc += ( sSrc.indexOf('?') > -1 ? '&' : '?' ) + 'ui_theme=dark&nightmode=true'; } else { sSrc += ( sSrc.indexOf('?') > -1 ? '&' : '?' ) + 'ui_theme=light&nightmode=false'; } var shareContainer = document.getElementById(ShareSearch.container + "_content"); var shareObservingElement = document.createElement('div');  shareObservingElement.id = 'shareObservingElement'; shareObservingElement.innerHTML = '&nbsp;'; shareObservingElement.style.position='absolute'; shareObservingElement.style.height = ( shareContainer.offsetTop / 2 ) + 'px'; shareObservingElement.style.width = '1px'; shareObservingElement.style.right = '0px'; shareObservingElement.style.top = '-' + ( shareContainer.offsetTop / 2 ) + 'px'; var shareIframe = document.createElement('iframe');  shareIframe.id = 'ShareSearchiframe'; shareIframe.scrolling = "no"; shareIframe.style.width = '99.9%'; shareIframe.style.height = '1000px'; shareIframe.style.borderRadius = '8px'; shareIframe.style.border = 'initial'; if(shareContainer ) { shareContainer.style.position='relative'; shareContainer.appendChild(shareObservingElement); shareContainer.appendChild(shareIframe); } var iframeObserver = new IntersectionObserver(( entries, observer ) => {
 entries.forEach(entry => { if (entry.isIntersecting) { shareIframe.setAttribute('src',sSrc); observer.unobserve(entry.target); } }); }, { root: null, threshold: 0 }); iframeObserver.observe(shareObservingElement );};ShareSearch.setIframeHeight = function(nHeight ){ var iframe = GetEl('ShareSearchiframe'); if(iframe ) { iframe.style.height = parseInt(nHeight ) + 'px'; }};ShareSearch.NoMatches = function(sHtml ){ var el = document.getElementById(ShareSearch.container + "_content"); if(el ) { el.innerHTML = "<div style='padding:10px 0px 35px 0px;font-size:15px;color:gray;'><i> No Matches on MFC Share </i> </div> "; }};ShareSearch.Display = function(sHtml ){ if(! GetEl(ShareSearch.container) ) { return; } SetHTML(ShareSearch.container," <div class=search_section><a name=news_section>&nbsp;</a></div> <div style='font-size:18px;border-bottom:1px solid #dddddd;padding-bottom:0px;'> 5. " + A('mfc_share_base') + "<img class=\"logo-mfc_share\" style=\"height:16px;width:125px;filter:hue-rotate(130deg);\" src=\"" + t.g_hPlatform.image_url_cdn + "files/images/misc/clear.gif\"></a> items matching \"<span style=\"font-weight:bold;\">" + ModelMenuBar.Search.sQuery + "</span>\" (<a href=\"javascript:ModelMenuBar.Search.Execute('clear');\">Clear Search</a>) </div> <div style=\"padding:15px 15px;\" id=" + ShareSearch.container + "_content> " + sHtml + " </div> ");};var ModelSearch = { hMatches: { tags: '-', topics: '-' },
 hTagStrings: { tags: '', topics: '' }};ModelSearch.Execute = function(sMode, sString, hOptions ){ sMode = sMode || 'topics'; hOptions = hOptions || {}; var aMatches = new Array(); var aSortedIDs = t.SortedUserKeys('cam_score',1); if(! ModelMenuBar.Search.hBoolSearch || ! ModelMenuBar.Search.hBoolSearch.words || ModelMenuBar.Search.hBoolSearch.words.length == 0 ) { return; } var nHiddenByRegion = 0; var nBGColor = 0; ModelSearch.hMatches[ sMode ] = 0; for(var a=0; a < aSortedIDs.length; a++ ) { var hUser = t.g_hUsers[ aSortedIDs[a] ]; if(t.g_hPlatform.id != hUser.platform_id ) { continue; } if(hUser.access_level != 4 ) { continue; } var sContentString; if(sMode == 'topics' ) { sContentString = hUser.topic; } else if(sMode == 'tags' ) { if(! hUser.aTags ) { continue; } if(! ModelSearch.hTagStrings[ hUser.user_id ] ) ModelSearch.hTagStrings[ hUser.user_id ] = hUser.aTags.join(', ').toLowerCase(); sContentString = ModelSearch.hTagStrings[ hUser.user_id ]; } if(! sContentString ) { continue; }
 if(ModelMenuBar.Search.hBoolSearch.structure && ! MfcBoolSearch.prototype.isMatch(sContentString.toLowerCase() , ModelMenuBar.Search.hBoolSearch ) ) { continue; } if(t.BlockedModelRegionCheck(hUser.user_id ) ) { nHiddenByRegion++; continue; } ModelSearch.hMatches[ sMode ]++; var oRE = new RegExp('(' + ModelMenuBar.Search.hBoolSearch.words.join('|') + ')' , 'gi' ); var sFont = MfcCustomFonts.prototype.get_style(hUser ); var sBGClass = nBGColor++ % 2 ? 'emphasized_bg' : ''; aMatches.push(" <tr> <td class='cpo_listeners' data-cpouid='"+hUser.user_id+"' data-cpo_left_click='player'> " + A('player',{ 'broadcaster_id': hUser.user_id }) + "<i"+"mg height=60 width=60 sr"+"c=" + AvatarUrl(hUser.user_id ,60) + " style=\"border-radius:6px;\" draggable=\"true\" ondragstart=\" t.nDragUserId=" + hUser.user_id + "; \"></a> </td> <td style=\"position:relative;\"> " + A('player',{ 'broadcaster_id': hUser.user_id }) + "<img height=60 width=106 src=" + t.LiveSnapUrl(hUser.user_id,100) + " style=\"border-radius:4px;\" " + t.g_oAnimatedLiveSnaps.mouseEventCode(hUser.user_id) + " ></a> </td> <td valign=top class=\"" + sBGClass + "\" style=\"padding-left:10px;padding-top:3px;border-radius:5px;\"> " + A('player',{ 'broadcaster_id': hUser.user_id, 'style': 'text-decoration:none;' }) + "<span class=user_style style=\"font-size:15px;font-weight:normal;" + sFont + "\">" + hUser.username + "</span></a> <span style=\"font-size:11px;\"> <a href=\"#\" onClick=\"Player_popUserMenu_open(" + hUser.user_id + ",{ 'model_menu':1 }); return false;\"><img src=" + popUserMenu.people_icon(hUser.user_id ) + " height=16></a> &nbsp;&nbsp; " + A('player',{ 'broadcaster_id': hUser.user_id }) +"Chat Room</a> (" + A('player',{ 'broadcaster_id': hUser.user_id, 'target':'new_window'}) +"Popup</a>) |  " + A("pm_friend",{ user_id: hUser.user_id, 'username': hUser.username, 'load_video':'true' }) + "Private Message</a> |  " + A('bio',{ 'broadcaster_id': hUser.user_id, 'username': hUser.username }) + "View Full Profile</a> </span> <div style=\"padding:9px 0px 0px 18px;font-size:15px;font-weight:normal;\" class=word_wrap> " + sContentString.replace(oRE,"<span class=highlight_bg >$1</span>") + " </div> </td> </tr> "); } var sExtra=''; if(sMode == 'tags' && ! ModelMenuBar.Search.bBoolSearch && aMatches.length > 0 ) { sExtra = "(<a href=\"javascript:ModelMenuBar.Search.LoadAlternateTagsView('original');\">Show Results in Original Format</a>)"; } var sH = " <div class=search_section><a name=topics_section>&nbsp;</a></div> <div style='font-size:18px;border-bottom:1px solid #dddddd;padding-bottom:0px;'>"
 + ( sMode == 'tags' ? ( '3. ' + A('model_tags',{ search: ModelMenuBar.Search.sQuery }) + t.g_hPlatform.Performer + " Tags" ) : ( '2. ' + A('model_topics',{ search: ModelMenuBar.Search.sQuery }) + t.g_hPlatform.Performer + " Topics" ) ) + "</a> matching \"<span style=\"font-weight:bold;\">" + ModelMenuBar.Search.sQuery + "</span>\" " + sExtra + " (<a href=\"javascript:ModelMenuBar.Search.Execute('clear');\">Clear Search</a>) </div> <div style=\"padding:20px;position:relative;\"> "; if(aMatches.length ) { sH += " <div style=\"position:absolute;right:20px;top:15px;\" id=topic_words_follow_control></div> <table> <tr> <td colspan=1 style=color:grey;font-size:10px;>Avatar</td> <td colspan=2 style=color:grey;font-size:10px;>Cam Preview</td> </tr> " + aMatches.join('') + " </table> <br> </div> "; } else { sH += "<div style='padding:10px 0px 35px 0px;font-size:15px;color:gray;'><i> " + ( sMode == 'tags' ? "No Matching Tags" : "No Matches by Topic" ) + " </i> &nbsp; (<a href=\"javascript:ModelMenuBar.Search.Execute('clear');\"><b>Clear Search</b></a>)</div> "; ModelMenuBar.Search.NoMatches(sMode == 'tags' ? 'by_tags' : 'by_topics' ); } if(nHiddenByRegion > 0 && ! ToggleNewModels.nShowOnlyNew ) { sH += "<div style='white-space:nowrap;clear:both;padding:20px;'><i><b>" + nHiddenByRegion + "</b> match" + ( nHiddenByRegion != 1 ? 'es are' : ' is' ) + " from a region you have hidden. <a href=# onClick='FilterSortOptions_Player.Popup();return false;' title=\"" + t.g_hPlatform.Performer + " List Settings\">Modify your region filter settings</a> to show the hidden " + t.g_hPlatform.performer + "s.</i> </div>"; } sH += "</div>"; SetHTML(sMode + '_search_matches',sH ); TopicWords.placeFollowControl(ModelMenuBar.Search.sQuery ); ModelSearch.hMatches[ sMode ] = aMatches.length; ModelMenuBar.Message.Set(); if(hOptions.scroll_to )
 { location.hash = ''; location.hash = hOptions.scroll_to + '_section'; }};ModelSearch.Clear = function(sMode ){ SetHTML(sMode + '_search_matches','');};var TopicWords = {};TopicWords.placeFollowControl = function(word ){ if(word ) { TopicWords.selectedTopicWord = word; } var topic_word_control; if(TopicWords.getFollowedTopicWord(TopicWords.selectedTopicWord ) ) topic_word_control = `<a href=\"javascript:TopicWords.unfollowTopicWord();\">Stop following the topic word "${TopicWords.selectedTopicWord}" on the Homepage</a> <i class="divider">•</i> `+t.A('model_topics')+`Manage Followed Topics</a>`; else topic_word_control = `(<a href=\"javascript:TopicWords.followTopicWord();\">Follow the topic word "${TopicWords.selectedTopicWord}" on the Homepage</a>)`; var el = GetEl('topic_words_follow_control'); if(el ) el.innerHTML = topic_word_control;};TopicWords.followTopicWord = function(word ){ word = word || TopicWords.selectedTopicWord; word = word.toLowerCase(); word = word.replace(/[^\s\w\d]/g,''); var followedTopicWords = { words: {} }; if(t.g_hSelf.followed_topic_words.charAt(0) == '{' ) { followedTopicWords = t.ParseJSON(t.g_hSelf.followed_topic_words ); } followedTopicWords.words[ word ] = 1; t.UserExtensions.Write('followed_topic_words', JSON.stringify(followedTopicWords ) ); TopicWords.placeFollowControl(); mfcBroadcasterDisplay.ClearCache();};TopicWords.unfollowTopicWord = function(word ){ word = word || TopicWords.selectedTopicWord; var followedTopicWords = { words: {} }; if(t.g_hSelf.followed_topic_words.charAt(0) == '{' ) { followedTopicWords = t.ParseJSON(t.g_hSelf.followed_topic_words ); } delete followedTopicWords.words[ word ]; var followedTopicWords_string = ( Object.keys(followedTopicWords.words ).length ) ? JSON.stringify(followedTopicWords ) : '';
 t.UserExtensions.Write('followed_topic_words', followedTopicWords_string ); TopicWords.placeFollowControl(); mfcBroadcasterDisplay.ClearCache();};TopicWords.getFollowedTopicWord = function(word ){ var followedTopicWords; if(t.g_hSelf.followed_topic_words.charAt(0) == '{' ) { followedTopicWords = t.ParseJSON(t.g_hSelf.followed_topic_words ); } return followedTopicWords && followedTopicWords.words && followedTopicWords.words[ word ];};TopicWords.getFollowedTopicWords = function(){ var followedTopicWords; if(t.g_hSelf.followed_topic_words.charAt(0) == '{' ) { followedTopicWords = t.ParseJSON(t.g_hSelf.followed_topic_words ); } return ( followedTopicWords && followedTopicWords.words ) || null; };TopicWords.searchWord = function(word ){ var oSearchInput = GetEl('online_model_search'); if(! oSearchInput ) { return; } oSearchInput.value = word; ModelMenuBar.Search.Interaction(window.event, oSearchInput );};var myWebcam_Publish;t.events.onRx(FCS.FCTYPE_PUBLISH, function(fcMsg ){ if(myWebcam_Publish && myWebcam_Publish.onPublishMsg ) myWebcam_Publish.onPublishMsg(fcMsg.arg1, fcMsg.obj );}, window.name );function GetBroadcasterId(hOptions ){ hOptions = hOptions || {}; var nBroadcasterId; if(Lounge.bIsLoaded && Lounge.nModelId ) nBroadcasterId = Lounge.nModelId; else if(UCRPlayer.bIsLoaded && UCRPlayer.hRoom.video == 1 ) nBroadcasterId = UCRPlayer.hRoom.originator_id; else if(hOptions['broadcaster_id'] ) nBroadcasterId = hOptions['broadcaster_id']; else nBroadcasterId = g_nBroadcasterId;
 return nBroadcasterId;}function LoadVideo(hOptions){ hOptions = hOptions || {}; if(hOptions.reset ) { LoadVideo.removePreviousVideo(); } if(( ! t || ! t.g_hVideoServerConfig ) && t.location.search.indexOf('new_video=1') == -1 ) { t.location = '/?new_video=1' + t.location.hash; return; } var nBroadcasterId = GetBroadcasterId(hOptions ); if(! nBroadcasterId ) { console.log('LoadVideo ERROR: no nBroadcasterId value could be determined.'); return; } var oVideoWrapper = GetEl("video_wrapper"); if(! oVideoWrapper ) { console.log('LoadVideo ERROR: no video wrapper found'); return; } if(( Lounge.bIsLoaded && ToggleVideo.hVideoDisabled['lounge'] ) || ( ! Lounge.bIsLoaded && ToggleVideo.hVideoDisabled['model_rooms'] ) ) { sCode = "<table id=video_off height=100% width=100%><td valign=center align=center style='font-size:27px;color:#88888888;'><b>Video Off</b></td></table>"; if(LoadVideo && LoadVideo.clientVideo && LoadVideo.clientVideo.Disconnect ) { LoadVideo.clientVideo.Disconnect(); LoadVideo.clientVideo = null; } var oEl = GetEl('video_wrapper'); if(oEl ) { oEl.innerHTML = sCode; } LoadVideo.transitionInstances = 0; LoadVideo.currentlyDisplayedBroadcasterId = nBroadcasterId;
 return; } else if(GetEl('video_off') ) { var oEl = GetEl('video_wrapper'); if(oEl ) { oEl.innerHTML = ''; } } var el; if(el = GetEl('video'+nBroadcasterId) ) { el.parentNode.removeChild(el); } var oVideoDiv = document.createElement('div'); oVideoDiv.setAttribute('id','video'+nBroadcasterId); oVideoDiv.classList.add('video_container'); oVideoDiv.style.position='absolute'; oVideoWrapper.insertBefore(oVideoDiv, oVideoWrapper.firstChild ); var isObs = t.g_default_clientVideo.IsObsVideo(t.g_hUsers[ g_nBroadcasterId ].videoserver ); hOptions['ckxauth'] = false; if (t.g_hoPlayerWindows[ g_nBroadcasterId ]) { if ( t.g_hoPlayerWindows[ g_nBroadcasterId ]['pvt_ckxauth'] ) hOptions['ckxauth'] = t.g_hoPlayerWindows[ g_nBroadcasterId ]['pvt_ckxauth']; if ( t.g_hoPlayerWindows[ g_nBroadcasterId ]['grp_ckxauth'] ) hOptions['ckxauth'] = t.g_hoPlayerWindows[ g_nBroadcasterId ]['grp_ckxauth'];
 if ( t.g_hoPlayerWindows[ g_nBroadcasterId ]['private_session_id'] ) hOptions['private_session_id'] = t.g_hoPlayerWindows[ g_nBroadcasterId ]['private_session_id']; if ( t.g_hoPlayerWindows[ g_nBroadcasterId ]['group_session_id'] ) hOptions['group_session_id'] = t.g_hoPlayerWindows[ g_nBroadcasterId ]['group_session_id']; if ( t.g_hoPlayerWindows[ g_nBroadcasterId ]['club_session_id'] ) hOptions['club_session_id'] = t.g_hoPlayerWindows[ g_nBroadcasterId ]['club_session_id']; } hOptions['mute'] = t.g_hSelf['audio_muted']; hOptions['myWebcam_Publish'] = myWebcam_Publish; if(! hOptions['member_broadcast'] && UCRPlayer.bIsLoaded && UCRPlayer.hRoom.video == 1 && UCRPlayer.hRoom.originator_id == t.g_hSelf.user_id ) { myWebcam_Publish = new MyWebcam_Publish({ platform: t.g_hPlatform, self_user: t.g_hSelf, self_session_id: t.g_nSessionId, log_func: t.Log, txcmd_func: t.TxCmd, parse_json_func: t.ParseJSON, get_video_flash_obj: function(){ return getFlashObject(t.g_default_clientVideo.sPreferredReference ); }, }); myWebcam_Publish.startPublishRequest(); setTimeout(function(){ LoadVideo({ member_broadcast: 1 }); }, 3000 ); return; } var els = document.getElementsByClassName('picture_in_picture'); for(var a=0; a < els.length; a++ ) if(els[a].id == 'video'+nBroadcasterId ) { document.exitPictureInPicture(); break; } if(! document.getElementById('video'+nBroadcasterId)) { var els = document.getElementsByClassName('video_container'); for(var a=0; a < els.length; a++ ) if(! els[a].id ) { els[a].id = 'video' + nBroadcasterId; } } var renderPlayerFn = function() {
 LoadVideo.clientVideo_previous[nBroadcasterId] = LoadVideo.clientVideo; LoadVideo.clientVideo = {}; LoadVideo.clientVideo = new MfcClientVideo(t.g_hVideoServerConfig ); var videoEl = document.getElementById('video'+nBroadcasterId); if(videoEl ) { videoEl.oncontextmenu = function(e) { e.stopPropagation(); e.preventDefault(); Player_popUserMenu_open(nBroadcasterId); }; } LoadVideo.clientVideo.Set({ client_user: t.g_hSelf, broadcaster: t.g_hUsers[ nBroadcasterId ], video_container: document.getElementById('video'+nBroadcasterId), width: hOptions.width, height: hOptions.height, presentation_state: t.g_hoPlayerWindows[ g_nBroadcasterId ].presentation_state, member_broadcast: hOptions['member_broadcast'], private_session_id: hOptions.private_session_id, group_session_id: hOptions.group_session_id, club_session_id: hOptions.club_session_id, ckxauth: hOptions.ckxauth, mute: hOptions.mute, myWebcam_Publish: hOptions.myWebcam_Publish, fVideoPlayerJs_aspectRatioCallback: function(options) { var hB = t.g_hUsers[ nBroadcasterId ]; if(hB && hB.video_aspect_ratio != options.ratio ) { hB.video_aspect_ratio = options.ratio; hB.lock_video_aspect_ratio = options.ratio; LayoutSizing.size_video(); LayoutSizing.size_chat_area(); } }, fClick: function(event ) { if(event.shiftKey && ! document.pictureInPictureElement )
 this.RequestPictureInPicture(); }, fContextMenu: function(event ) { if(document.pictureInPictureElement ) document.exitPictureInPicture().catch(function(error){ console.log(error); }); }, fEnterPictureInPicture: function() { t.Log('fEnterPictureInPicture '); var els = document.getElementsByClassName('picture_in_picture'); for(var a=0; a < els.length; a++ ) { els[a].parentNode.removeChild(els[a]); } var video = document.getElementById('video'+nBroadcasterId); if(! video ) { return; } LoadVideo.videoContainer = video.parentNode; LoadVideo.fClickToReturn = function() { document.exitPictureInPicture(); }; video.style.position = 'absolute'; video.style.display = 'none'; video.classList.add('picture_in_picture'); document.body.insertBefore(video, document.body.firstChild); LoadVideo.clickToReturn = document.createElement('div'); LoadVideo.clickToReturn.classList.add('clickToReturn'+nBroadcasterId); LoadVideo.clickToReturn.innerHTML = 'Click here to close Picture in Picture'; LoadVideo.clickToReturn.style.cssText = "font-size:10px; padding-top: 40px; height: 100%; vertical-align: middle; color: #999; cursor: pointer;"; LoadVideo.clickToReturn.addEventListener('click',LoadVideo.fClickToReturn); LoadVideo.videoContainer.appendChild(LoadVideo.clickToReturn ); }, fLeavePictureInPicture: function(e) { t.Log('fLeavePictureInPicture '); LoadVideo.clickToReturn.removeEventListener('click',LoadVideo.fClickToReturn); var els = document.getElementsByClassName('clickToReturn'+nBroadcasterId); for(var a=0; a < els.length; a++ ) { els[a].parentNode.removeChild(els[a]); } var nBroadcasterId = GetBroadcasterId(); var video = GetEl('video'+ nBroadcasterId ); if(LoadVideo.videoContainer && video ) { if(video.id == ('video'+nBroadcasterId) ) {
 t.Log('fLeavePictureInPicture KEEP VIDEO '); video.style.display = 'block'; video.classList.remove('picture_in_picture'); LoadVideo.videoContainer.innerHTML = ''; LoadVideo.videoContainer.appendChild(video ); } else { t.Log('fLeavePictureInPicture DISCARD VIDEO '); video.parentNode.removeChild(video); } } } }); t.events.offByContext([ window.name, 'video' ]); t.events.on([ "user/"+nBroadcasterId+"/camserv", "user/"+nBroadcasterId+"/phase" ], LoadVideo.clientVideo.LoadVideo, [ window.name, 'video' ] ); LoadVideo.clientVideo.LoadVideo(); if(LoadVideo.clientVideo_previous[nBroadcasterId] && LoadVideo.clientVideo_previous[nBroadcasterId].video_container && LoadVideo.clientVideo.videoPlayer && ! g_UA.mobile && ! LoadVideo.transitionInstances ) { if(! hOptions.auto_advance ) { LoadVideo.clientVideo_previous[nBroadcasterId].video_container.classList.add('dim_out_video'); } var videoPlayer_OnPlayingCallback = function() { clearTimeout(LoadVideo.onPlayingCallbackTimer); if(LoadVideo.clientVideo_previous[nBroadcasterId] && LoadVideo.clientVideo_previous[nBroadcasterId].video_container ) { var el = LoadVideo.clientVideo_previous[nBroadcasterId].video_container; var spread = parseInt(20 * Math.random() );
 el.style.webkitMaskImage = "linear-gradient(" + ( 45 + parseInt(Math.random() * 90 ) ) + "deg, rgba(0,0,0,1) 0%, rgba(0,0,0,1) " + ( 50 - spread ) + "%, rgba(0,0,0,0) " + ( 50 + spread ) + "%, rgba(0,0,0,0) 100%)"; if(hOptions.auto_advance ) { var animTime = ( 0.5 + ( Math.random() * 3 ) ); el.style.animation = "fade_video_slow " + animTime + "s ease-in-out"; el.classList.add('fade_video_slow'); } else { var animTime = ( 0.1 + ( Math.random() * 0.1 ) ); el.classList.remove('dim_out_video'); el.classList.add('fade_video_slow'); } el.style.animation = "fade_video_slow " + animTime + "s ease-in-out"; setTimeout(LoadVideo.removePreviousVideo, ( 1000 * animTime ) ); LoadVideo.currentlyDisplayedBroadcasterId = nBroadcasterId; LoadVideo.transitionInstances = 0; RefreshMessageBar(hOptions ); } }; LoadVideo.clientVideo.videoPlayer.setOnPlayingCallback(videoPlayer_OnPlayingCallback ); var nWaitTime = hOptions.auto_advance ? 4000 : 1500; LoadVideo.onPlayingCallbackTimer = setTimeout(function(){ LoadVideo.clientVideo.videoPlayer.setOnPlayingCallback(function(){}); LoadVideo.removePreviousVideo(); LoadVideo.currentlyDisplayedBroadcasterId = nBroadcasterId; LoadVideo.transitionInstances = 0; RefreshMessageBar(hOptions); },nWaitTime); LoadVideo.transitionInstances = LoadVideo.transitionInstances || 0; LoadVideo.transitionInstances = parseInt(LoadVideo.transitionInstances ) + 1; } else { LoadVideo.removePreviousVideo();
 LoadVideo.currentlyDisplayedBroadcasterId = nBroadcasterId; LoadVideo.transitionInstances = 0; RefreshMessageBar(hOptions); } var floatingVideo;if(g_hQS.enable_floating_video ){ floatingVideo = new FloatingVideo({ mfcClientVideo: LoadVideo.clientVideo, video_container: document.getElementById('video'+nBroadcasterId), enable_drag_out: true });} if(t.g_bDebug ) { if(g_nDebugTimer > 0) { clearTimeout(g_nDebugTimer); } g_nDebugTimer = setTimeout(function() { if(! LoadVideo.clientVideo ) return; var sChatMsg = "<div style='margin:15px 5px;font-size:11px;color:#666;background-color:white;padding:10px;border-radius:5px;'>"; sChatMsg += "<b>Video Debug</b> "; if(LoadVideo.clientVideo.hfBroadcaster ) sChatMsg += " - Model: " + LoadVideo.clientVideo.hfBroadcaster.user_id() + " (" + LoadVideo.clientVideo.hfBroadcaster.username() + ")"; sChatMsg += "<br><br>"; sChatMsg += "Player: <b>" + LoadVideo.clientVideo.videoProfile.player_type + "</b><br>"; if(LoadVideo.clientVideo.videoProfile.recommended_player != LoadVideo.clientVideo.videoProfile.player_type ) sChatMsg += " (would_use " + LoadVideo.clientVideo.videoProfile.recommended_player + " )<br>"; if(LoadVideo.clientVideo.videoProfile.recommended_player == 'videojs' ) { var tech_ord = ( LoadVideo.clientVideo.videoProfile.videojs_tech_order && LoadVideo.clientVideo.videoProfile.videojs_tech_order.join(',') ); if(tech_ord ) { sChatMsg += "TechOrd: <b>" + tech_ord + "</b><br><br>"; } } var oCurrentSource; if(LoadVideo.clientVideo.videoPlayer && ( oCurrentSource = LoadVideo.clientVideo.videoPlayer.getCurrentSource() ) ) { 
 if(oCurrentSource.type ) { sChatMsg += "Tech: <b>" + oCurrentSource.type + "</b>"; if(oCurrentSource.overrides ) sChatMsg += " (<b>" + oCurrentSource.overrides + "</b>)"; if(oCurrentSource.type == 'webrtc' && LoadVideo.clientVideo.videoProfile.ObsVideo_wz && LoadVideo.clientVideo.videoProfile.webrtc_video ) sChatMsg += " (using Sidekick)"; sChatMsg += "<br><br>"; } for(var o in LoadVideo.clientVideo.videoProfile ) { sChatMsg += " &nbsp; " + o + ": <b>" + LoadVideo.clientVideo.videoProfile[o] + "</b><br>"; } sChatMsg += "<br>"; if(oCurrentSource.src ) { sChatMsg += "Src:&nbsp;<a href=" + oCurrentSource.src + " target=_blank>" + oCurrentSource.src.replace(/\??nc=[\d\.]+/,'') + "</a><br><br>"; } } if(LoadVideo.clientVideo.LiveSnapUrl ) { var snap = LoadVideo.clientVideo.LiveSnapUrl(); sChatMsg += "Snap:&nbsp;<a href=" + snap + " target=_blank>" + snap + "</a><br><br>"; sChatMsg += "<center><a href=" + snap + " target=_blank><img src=" + snap + " height=100></a></center><br><br>"; } sChatMsg += "</div>"; ChatQueue.Append(sChatMsg ); },3000); } clearTimeout(LoadVideo.clientVideo_monitor ); LoadVideo.clientVideo_monitor = setInterval(function(){ if(LoadVideo.clientVideo && LoadVideo.clientVideo.broadcaster.user_id == nBroadcasterId ) { t.DebugControls.VideoStatus(LoadVideo.clientVideo ); } else { t.DebugControls.VideoStatus(); clearTimeout(LoadVideo.clientVideo_monitor ); }
 },500); }; renderPlayerFn();}LoadVideo.clientVideo = {};LoadVideo.clientVideo_previous = {};LoadVideo.removePreviousVideo = function(){ for(var nUserId in LoadVideo.clientVideo_previous ) { if(nUserId == GetBroadcasterId() ) { continue; } if(LoadVideo.clientVideo_previous[nUserId] && LoadVideo.clientVideo_previous[nUserId].Disconnect ) LoadVideo.clientVideo_previous[nUserId].Disconnect(); var el; if(el = GetEl('video'+nUserId) ) { el.parentNode.removeChild(el ); } delete LoadVideo.clientVideo_previous[nUserId]; }};var TimeRemaining = { bLock: false, sMessage: '', nSeconds: 0, nPreviousSeconds: 0, nPreviousCount: -1};TimeRemaining.InitiateTimeRemaining = function(){ if(TimeRemaining.bLock ) { return; } TimeRemaining.sMessage = ''; TimeRemaining.nPreviousSeconds = 999999; TimeRemaining.nPreviousCount = -1; TimeRemaining.bLock = true; TimeRemaining.CalculateTimeRemaining();};TimeRemaining.CalculateTimeRemaining = function(){ if(TimeRemaining.nPreviousCount != t.g_nNullTimeArg ) { TimeRemaining.nSeconds = Math.round(t.g_nNullTimeArg / ( ( TimeRemaining.nPreviousCount - t.g_nNullTimeArg ) / 5 ) ); 
 if(TimeRemaining.nPreviousSeconds > 0 && TimeRemaining.nSeconds > TimeRemaining.nPreviousSeconds ) TimeRemaining.nSeconds = TimeRemaining.nPreviousSeconds; TimeRemaining.nPreviousSeconds = TimeRemaining.nSeconds; } if(TimeRemaining.nSeconds > 0 && GetEl('time_remaining') ) { if(TimeRemaining.nSeconds > 120 ) TimeRemaining.sMessage = Math.floor(TimeRemaining.nSeconds / 60 ) + ' minutes ' + ( TimeRemaining.nSeconds % 60 ) + ' seconds'; if(TimeRemaining.nSeconds > 60 ) { TimeRemaining.sMessage = Math.floor(TimeRemaining.nSeconds / 60 ) + ( TimeRemaining.nSeconds > 120 ? ' minutes ' : ' minute ' ) + ( TimeRemaining.nSeconds % 60 ) + ' seconds'; } else { TimeRemaining.sMessage = TimeRemaining.nSeconds + ' seconds'; } TimeRemaining.sMessage = 'Approximately <b>' + TimeRemaining.sMessage + '</b> remaining'; SetHTML('time_remaining',TimeRemaining.sMessage); } TimeRemaining.nPreviousCount = t.g_nNullTimeArg; setTimeout(TimeRemaining.CalculateTimeRemaining, 3000 );};var LoadingBar = { nTotalWidth: ( g_UA.mobile ? 600 : 700 ), aTimers: new Array(), nCurrentWidth: 0};LoadingBar.Update = function(){ var nWidth, fRatio; if(t.g_nNullTimeArg_Initial > 0 ) { fRatio = ( ( t.g_nNullTimeArg_Initial - t.g_nNullTimeArg ) / t.g_nNullTimeArg_Initial ); nWidth = fRatio > 1 ? LoadingBar.nTotalWidth : parseInt(LoadingBar.nTotalWidth * fRatio); } else { nWidth = 1; } if(LoadingBar.nCurrentWidth > nWidth ) { return; }
 if(GetEl('loading_bar') ) { nDistance = nWidth - LoadingBar.nCurrentWidth; nIncrements = nDistance / 10; if(nIncrements ) { for(var nIteration=1; nIteration<=10; nIteration++ ) { clearTimeout(LoadingBar.aTimers[nIteration]); var nNewDistance = LoadingBar.nCurrentWidth + ( nIncrements * nIteration ); LoadingBar.aTimers[nIteration] = setTimeout(function(){ LoadingBar.IncrementWidth(nNewDistance); }, nIteration * 100 ); } } } LoadingBar.nCurrentWidth = nWidth;};LoadingBar.IncrementWidth = function(nNewDistance ){ var oEl; if(oEl = GetEl('loading_bar') ) { var aMatches = oEl.style.width.match(/(\d+)/); if(aMatches && parseInt(aMatches[1] ) < nNewDistance ) { oEl.style.width = nNewDistance + 'px'; } }};var OnlineBroadcasterList = { nLoadSequence: 0, nCurrentPage: 1, sElipses: '', bSuspend: false, oPendingRedraw: {}, bRefresh: false, nHiddenModels: 0, nPruneCache: 0, nModelsOnPage: 0, bFilterSortOptionsLoaded: 0};
t.events.onRx(FCS.FCTYPE_NULL,function(fcMsg) { if(! t.g_bLoginDone || t.g_nNullTimeArg ) OnlineBroadcasterList.Refresh('force');}, window.name );t.events.on('player.OnlineBroadcasterList.ClearCacheAndRefresh',function() { mfcBroadcasters.ClearListCache(); OnlineBroadcasterList.Refresh.apply(this,arguments);}, window.name );t.events.on('player.OnlineBroadcasterList.Refresh',function() { OnlineBroadcasterList.Refresh.apply(this,arguments); }, window.name );OnlineBroadcasterList.OnlyForceRefresh = function() { mfcBroadcasterDisplay.Refresh({bForceRefresh: true});};function RefreshOnlineBroadcasterList(sMode, sOptions ) { OnlineBroadcasterList.Refresh(sMode, sOptions ); };OnlineBroadcasterList.Refresh = function(sMode, hOptions ){ var bLogicDebug = t.location.search.indexOf('OnlineBroadcasterList') > -1; hOptions = hOptions || {}; if(g_bPopupPlayer && g_sPlayerMode == 'player' ) { return; } if(sMode == 'reset' || sMode == 'force' ) { mfcBroadcasterDisplay.ClearViewableDimensionsCache(); if(mfcBroadcasterDisplay.Reset ) { mfcBroadcasterDisplay.Reset(); } } if(sMode == 'reset' ) { mfcBroadcasterDisplay.SetColors(); mfcBroadcasterDisplay._ClearBroadcasterHtmlCache(); } if(( mfcBroadcasterDisplay.hOptions.bPauseRefresh && ! sMode ) || ! t.GetEl('online_broadcasters', document ) || ( g_sPlayerMode == 'player' && ModelMenuBar.bHideOnlineModels ) ) { if(bLogicDebug ) { t.Log('OnlineBroadcasterList.Refresh: 1 '); } return; }
 if(ModelMenuBar.Search.sQuery && ModelMenuBar.Search.OfflineUsernameLookup_Found ) { if(bLogicDebug ) { t.Log("OnlineBroadcasterList.Refresh: 3 "); } return; } if(sMode == 'suspend' ) { OnlineBroadcasterList.bSuspend = true; clearTimeout(OnlineBroadcasterList.oSuspend ); OnlineBroadcasterList.oSuspend = setTimeout(function(){ OnlineBroadcasterList.bSuspend = false; },1000); if(bLogicDebug ) { t.Log("OnlineBroadcasterList.Refresh: 4 - sMode == 'suspend' "); } return; } else if(OnlineBroadcasterList.bSuspend ) { if(bLogicDebug ) { t.Log("OnlineBroadcasterList.Refresh: 5 - OnlineBroadcasterList.bSuspend "); } return; } if(( sMode == 'reset' || ( ModelMenuBar.Search.sQuery && mfcBroadcasterDisplay.sScrollingReferenceType ) || ( t.g_hSelf['model_list_mode'] == 'scroll' && ! mfcBroadcasterDisplay.sScrollingReferenceType ) ) ) { var hDynamicScrollOptions = {}; if(ModelMenuBar.Search.sQuery ) { hDynamicScrollOptions.detach_scroll_events = 1;
 } else { mfcBroadcasterDisplay.hOptions.sListType = g_sPlayerMode; hDynamicScrollOptions.scroll_top = 1; if(mfcBroadcasterDisplay.hOptions.sScrollingReferenceType == 'div' ) { hDynamicScrollOptions.scrollable_element = GetEl('online_broadcasters_container'); if(! hDynamicScrollOptions.scrollable_element ) { if(bLogicDebug ) { t.Log("OnlineBroadcasterList.Refresh: 6"); } return; } } } mfcBroadcasterDisplay.DynamicScroll_Configure(hDynamicScrollOptions ); } var aOnlineBroadcasterHTML = new Array(); if(t.g_sGeneralErrorMessage ) { OnlineBroadcasterList.SetHtml({ header: "<br><span style='font-size:22px;font-weight:bold;color:#008000;'>" + t.g_sGeneralErrorMessage + "</span><br><br>", list: 'clear' }); if(bLogicDebug ) { t.Log("OnlineBroadcasterList.Refresh: 7 - t.g_sGeneralErrorMessage"); } return; } else if(t.g_nConnectingMode == FCS.FCTYPE_NULL ) { OnlineBroadcasterList.SetHtml({ header: "<br><span style='font-size:22px;font-weight:bold;color:#008000;'>Loading HTML...</span><br><br>", list: 'clear' }); if(bLogicDebug ) { t.Log("OnlineBroadcasterList.Refresh: 8 - t.g_nConnectingMode == FCS.FCTYPE_NULL"); } return; } else if(t.g_nConnectingMode == FCS.FCTYPE_CONNECTING ) { OnlineBroadcasterList.SetHtml({ header: " <br><span style='font-size:22px;font-weight:bold;color:#008000;'>\n Connecting to " + t.g_hPlatform.name + "...</span> <span style='color:white;'>" + t.SelectChatServer.sHost + "</span><br><br> <div style=\"padding:1px;border:solid 1px #00800088;width:" + LoadingBar.nTotalWidth +"px;height:22px;\"> <div id=loading_bar style=\"height:20px;background-color:#00800088;width:" + ( LoadingBar.nCurrentWidth || 0 ) + "px;font-size:1px;\">&nbsp;</div> </div> <div id=time_remaining style='color:#008000;font-size:11px;'> " + ( TimeRemaining.sMessage ? TimeRemaining.sMessage : '') + " &nbsp; </div> ", list: 'clear' });
 if(t.g_nNullTimeArg_Initial != -1 ) { LoadingBar.Update(); TimeRemaining.InitiateTimeRemaining(); } if(bLogicDebug ) { t.Log("OnlineBroadcasterList.Refresh: 9 - t.g_nConnectingMode == FCS.FCTYPE_CONNECTING"); } return; } else if(t.g_nConnectingMode == FCS.FCTYPE_DISCONNECTED ) { OnlineBroadcasterList.SetHtml({ header: "<br><span style='font-size:22px;font-weight:bold;color:#008000;'> Disconnected from " + t.g_hPlatform.name + ", reconnecting" + OnlineBroadcasterList.sElipses + "</span><br><br> ", list: 'clear' }); if(g_sPlayerMode == 'player' ) { t.Load('homepage'); } SetHTML('filter_sort_options',''); OnlineBroadcasterList.bFilterSortOptionsLoaded = 0; if(bLogicDebug ) { t.Log("OnlineBroadcasterList.Refresh: 10 - t.g_nConnectingMode == FCS.FCTYPE_DISCONNECTED"); } return; } else if(t.g_nConnectingMode == FCS.FCTYPE_CONNECTED ) { var now = new Date().getTime(); if(t && t.InitialLoadingScreen && t.InitialLoadingScreen.hide ) t.InitialLoadingScreen.hide(); if ( ! t.g_bLoginDone ) { OnlineBroadcasterList.SetHtml({ header: "<div style=\"padding-top:15px;\"><span style='font-size:22px;font-weight:bold;color:#008000;'>\n Logged in! Seeing who's online<span id=ellipsis></span></span></div><br> ", list: 'clear' }); OnlineBroadcasterList.AnimatedEllipsis(); if(mfcBroadcasterDisplay.Reset ) { mfcBroadcasterDisplay.Reset(); } if(bLogicDebug ) { t.Log("OnlineBroadcasterList.Refresh: 11 - ! t.g_bLoginDone "); } return; } else if(t.g_nBroadcasterCount == 0 || ( t.g_nBroadcasterCount < 100 && ( now - g_nInstanceTime < 3000 ) ) ) {
 var sMsg; if(processListData.hListCounts[ FCS.FCL_CAMS ] === 0 ) sMsg = "There are currently no " + t.g_hPlatform.performer + "s online.<br><br>Please check back in a couple minutes."; else sMsg = "Loading " + t.g_hPlatform.performer + " list..."; OnlineBroadcasterList.SetHtml({ header: "<div style=\"padding:25px;\"><span style='font-size:22px;font-weight:bold;color:#008000;'>" + sMsg + "</span></div>", list: 'clear' }); if(mfcBroadcasterDisplay.Reset ) { mfcBroadcasterDisplay.Reset(); } if(bLogicDebug ) { t.Log("OnlineBroadcasterList.Refresh: 12 - t.g_nBroadcasterCount == 0 "); } return; } else { OnlineBroadcasterList.AnimatedEllipsis('stop'); if(sMode != 'force' && sMode != 'reset' && sMode != 'change_selected' && mfcBroadcasterDisplay.bRefreshed && mfcBroadcasterDisplay.nTotalModels > 0 ) { if(bLogicDebug ) { t.Log("OnlineBroadcasterList.Refresh: 14 - recently refreshed "); } return; } mfcBroadcasters.hOptions.nBroadcasterId = g_nBroadcasterId; mfcBroadcasters.hOptions.bShowOnlyNew = ToggleNewModels.nShowOnlyNew; mfcBroadcasters.hOptions.sModelSearch = ModelMenuBar.Search.sQuery; mfcBroadcasterDisplay.hOptions.sListType = g_sPlayerMode; mfcBroadcasterDisplay.hOptions.nBroadcasterId = g_nBroadcasterId; mfcBroadcasterDisplay.hOptions.sModelSearch = ModelMenuBar.Search.sQuery; var nRefreshSeconds=1; if(! t.FcAddFriend.bFriendsLoaded || ! t.FcSessionState.bModelsLoaded ) { if(! OnlineBroadcasterList.nLoadSequence && t.FcSessionState.nLoadingCount > 50 ) { nRefreshSeconds = 1; OnlineBroadcasterList.nLoadSequence = 1; }
 else if(OnlineBroadcasterList.nLoadSequence == 1 ) { nRefreshSeconds = 5; OnlineBroadcasterList.nLoadSequence = 2; } else if(OnlineBroadcasterList.nLoadSequence == 2 ) { nRefreshSeconds = 20; OnlineBroadcasterList.nLoadSequence = 3; } else if(sMode != 'force' && sMode != 'reset' ) { if(bLogicDebug ) { t.Log("OnlineBroadcasterList.Refresh: 15 "); } return; } } else if(t.g_nBroadcasterCount < 5 ) { nRefreshSeconds = 5; } else if(t.g_hSelf.model_list_refresh_seconds ) { if(t.g_hPlatform.id == PLAT_MFC && t.FcSessionState.nLoadingCount < 50 && ! t.FcSessionState.bModelsLoaded ) { sMode = 'force'; clearTimeout(OnlineBroadcasterList.dbgTimeout ); OnlineBroadcasterList.dbgTimeout = setTimeout(function() { OnlineBroadcasterList.Refresh('force') }, t.FcSessionState.nLoadingCount < 10 ? 1000 : 5000 ); } if(ModelMenuBar.Search.sQuery && t.g_hSelf.model_list_refresh_seconds < 60 ) nRefreshSeconds = 60; else nRefreshSeconds = t.g_hSelf.model_list_refresh_seconds; } else if(g_UA.mobile || mfcBroadcasterDisplay.nModelsOnPage > 300 ) { nRefreshSeconds = 60; } else { nRefreshSeconds = 30; } if(bLogicDebug ) { t.Log("OnlineBroadcasterList.Refresh: REFRESH mode:" + sMode + " secs:" + nRefreshSeconds ); } mfcBroadcasterDisplay.Refresh({ bForceRefresh: ( sMode == 'force' || sMode == 'reset' ) ? 1 : 0, bChangeSelected: sMode == 'change_selected' ? 1 : 0, nRefreshSeconds: nRefreshSeconds });
 if(LoadingBar.nCurrentWidth > 0 ) { LoadingBar.nCurrentWidth = 0; } if(TimeRemaining.bLock ) { TimeRemaining.bLock = false; } if(! OnlineBroadcasterList.bFilterSortOptionsLoaded ) { if(t.FilterSortOptions ) { SetHTML('filter_sort_options',t.FilterSortOptions.FormHTML({ player_mode: g_sPlayerMode })); t.FilterSortOptions.UpdateRegionCheckboxes(document); } OnlineBroadcasterList.bFilterSortOptionsLoaded = 1; } } } var sHeader=''; var sFooter=''; var sPageLinks = ""; if(ModelMenuBar.Search.sQuery ) { if(mfcBroadcasters.nHiddenModels > 0 && ! ToggleNewModels.nShowOnlyNew ) { sFooter = "<div style='white-space:nowrap;clear:both;padding:20px 20px;'><i><b>" + mfcBroadcasters.nHiddenModels + "</b> match" + ( mfcBroadcasters.nHiddenModels != 1 ? 'es' : '' ) + " from a region you have hidden. <a href=# onClick='FilterSortOptions_Player.Popup();return false;' title=\"" + t.g_hPlatform.Performer + " List Settings\">Modify your region filter settings</a> to show the hidden " + t.g_hPlatform.performer + "s.</i></div>"; } sHeader += " <div class=search_section><a name=online_models_section>&nbsp;</a></div> <div style='font-size:18px;border-bottom:1px solid #dddddd;'> 1. Online " + t.g_hPlatform.Performer + " Names and Headlines matching \"<span style=\"font-weight:bold;\">" + ModelMenuBar.Search.sQuery +"</span>\" (<a href=\"javascript:ModelMenuBar.Search.Execute('clear');\">Clear Search</a>) </div> <br> "; if(! mfcBroadcasterDisplay.aOnlineBroadcasterHTML.length ) { sHeader += "<div style='padding:0px 20px;font-size:15px;color:gray;'><i>No Matches by Name</i></span> &nbsp; (<a href=\"javascript:ModelMenuBar.Search.Execute('clear');\"><b>Clear Search</b></a>)</div>"; ModelMenuBar.Search.NoMatches('by_name'); } } else if(mfcBroadcasterDisplay.nTotalModels > 0 && ! ModelMenuBar.Search.sQuery && t.g_hSelf['model_list_mode'] == 'page'
 ) { OnlineBroadcasterList.ProcessPageLinks(); sFooter = OnlineBroadcasterList.sPageLinks; if(mfcBroadcasterDisplay.hOptions.nCurrentPage > 1 ) { var sModelRange = ( ! g_UA.mobile ) ? sModelRange = "Showing " + t.g_hPlatform.performer + "s <b>" + OnlineBroadcasterList.nRangeStart + "</b> - <b>" + OnlineBroadcasterList.nRangeStop + "</b>. " : ''; sHeader += "<span class=highlight_bg >You are on <b>Page " + mfcBroadcasterDisplay.hOptions.nCurrentPage + "</b>.</span> &nbsp;" + sModelRange + " &nbsp; " + OnlineBroadcasterList.sPagePrevNext; } } var sOnlinePatternKey = g_sPlayerMode == 'player' ? 'online_model_pattern_player' : 'online_model_pattern'; if(ToggleNewModels.nShowOnlyNew ) { sHeader += " <div style='font-size:12px;font-weight:normal;padding:8px 0px 7px 0px;'> Showing only <span style=\"color:red;font-weight:bold;\">New " + t.g_hPlatform.Performer + "s</span></a> instead of" + " <a href=\"javascript:ToggleNewModels();\"><b>All " + t.g_hPlatform.Performer + "s</b></a>.&nbsp; " + " You may change <a href=# onClick=\"FilterSortOptions_Player.Popup(); return false;\" title=\"" + t.g_hPlatform.Performer + " List Settings\"><b>Settings</b></a> to always show <b>New " + t.g_hPlatform.Performer + "s</b> at the top. </div>"; } if(mfcBroadcasterDisplay.hTempPatternToggleMode[g_sPlayerMode] ) { sHeader += " <div style='font-size:12px;font-weight:normal;padding:8px 0px 7px 0px;'> Showing <span style='color:red;'><b> " + ( mfcBroadcasterDisplay.hTempPatternToggleType[g_sPlayerMode] == 'avatar' && mfcBroadcasterDisplay.hTempPatternToggleMode[g_sPlayerMode] == 1 ? "Cam Previews</b></span> instead of <b><a href=# onClick=\"ModelMenuBar.ToggleCamPreview(); return false;\">Avatars</a></b>" : "Avatars</b></span> instead of <b><a href=# onClick=\"ModelMenuBar.ToggleCamPreview(); return false;\">Cam Previews</a></b>" ) + ". &nbsp; To make it permanent or change the refresh rate, click <a href=# onClick=\"FilterSortOptions_Player.Popup(); return false;\" title=\"" + t.g_hPlatform.Performer + " List Settings\"><b>Settings</b></a> and change the <b>Display Type</b>. </div> "; } else if(t.g_hSelf[sOnlinePatternKey] == 3 )//&& g_sPlayerMode == 'homepage' )
 { sHeader += " <div style='font-size:12px;font-weight:normal;padding:10px 0px 10px 0px;'> Showing the " + t.g_hPlatform.performer + " list in <span style='color:red;'><b>Text List</b></span> mode instead of\
 <b>avatars</b> or <b>previews</b>; you may change this setting in your <a href=# onClick=\"FilterSortOptions_Player.Popup(); return false;\" title=\"" + t.g_hPlatform.Performer + " List Settings\"><b>Settings</b></a>. </div> <div style='font-size:11px;padding:0px 0px 10px 0px;'> <b> <span class=\"ml_header_ctype\" style=\"background-color:" + PopModelIndex.colors['new_model'] + ";padding:5px 10px;border-radius:3px;\">New " + t.g_hPlatform.Performer + "</span> <span class=\"ml_header_ctype\" style=\"background-color:" + PopModelIndex.colors[FCS.FCVIDEO_TX_GRP] + ";padding:5px 10px;border-radius:3px\">Group Show</span> <span class=\"ml_header_ctype\" style=\"background-color:" + PopModelIndex.colors[FCS.FCVIDEO_TX_CLUB] + ";padding:5px 10px;border-radius:3px;\">Club Show</span> <span class=\"ml_header_ctype\" style=\"background-color:" + PopModelIndex.colors[FCS.FCVIDEO_TX_PVT] + ";padding:5px 10px;border-radius:3px;\">In Private</span> </b> </div> "; } if(sHeader ) { sHeader = "<div style=\"clear:both;font-size:15px;padding:5px 0px 10px 0px;\">" + sHeader + "</div>"; } OnlineBroadcasterList.SetHtml({ header: sHeader, list: 'preserve', footer: sFooter }); ModelMenuBar.Message.Set(); ModelMenuBar.Paging.Set(); if(hOptions['scroll_to_top'] ) { var oEl; if(t.g_hSelf['single_page_website'] ) { if(g_UA.mobile ) { top.scroll(0,0); } else { parent.scroll(0,0); } } else if(mfcBroadcasterDisplay.hOptions.sScrollingReferenceType == 'body' ) { scroll(0,0); } else if ( ( oEl = GetEl('online_broadcasters_container') ) && GetEl('online_broadcasters_container').scrollTop ) { oEl.scrollTop = 0; } }
 if(hOptions['scroll_to_bottom'] ) { var oEl = GetEl('online_broadcasters_container'); var scrollDown = oEl.scrollHeight - 750; window.scroll(0, scrollDown ); oEl.scrollTop = scrollDown; } if(t.g_hSelf.single_page_website ) { LayoutSizing.size_online_model_area(); } if(t.g_hSelf['access_level'] == 4 && g_sPlayerMode == 'homepage' ) { SetHTML('homepage_update', OnlineBroadcasterList.ModelNoticeHTML()); GetEl('homepage_update').style.display = 'block'; } if(bLogicDebug ) { t.Log("OnlineBroadcasterList.Refresh: COMPLETED "); } return;};OnlineBroadcasterList.ModelNoticeHTML = function(){ var sUrl = "https://www." + t.g_hPlatform.domain + "/model_admin/"; return " <div style='padding:0px 30px 25px 30px;margin-bottom:25px;border-bottom:2px solid #66666644;'> <b>A Note to " + t.g_hPlatform.Performer + "s</b> <br><br> You are logged in as a " + t.g_hPlatform.performer + " on our member homepage. If you are trying to broadcast on " + t.g_hPlatform.name + " or make changes to your account, please go to your " + t.g_hPlatform.Performer + " Admin page at: <a href=" + sUrl + " target=_top>" + sUrl + "</a> <br><br> This website is optimized for member accounts. Many features will not function properly when you're logged in as a  " + t.g_hPlatform.performer + ". For complete functionality, please <a href=# onClick=t.Load('logout');>log out</a> and create a normal member account. </div>";};OnlineBroadcasterList.ProcessPageLinks = function(){ OnlineBroadcasterList.sPagePrevNext = ""; OnlineBroadcasterList.sPageControls = ""; OnlineBroadcasterList.sPages = ""; OnlineBroadcasterList.sPageLinks = ""; OnlineBroadcasterList.nRangeStart = ""; OnlineBroadcasterList.nRangeStop = "";
 var nPages = Math.ceil(( mfcBroadcasterDisplay.nTotalModels || 1 ) / t.g_hSelf['models_per_page'] ) || 1; if(nPages > 1 ) { if(nPages > 5 ) { if(mfcBroadcasterDisplay.hOptions.nCurrentPage - 3 > 1 ) { OnlineBroadcasterList.sPages += "<a href=# onClick=\"mfcBroadcasterDisplay.hOptions.nCurrentPage=1;OnlineBroadcasterList.Refresh('force',{scroll_to_top:1});return false;\">1</a>..."; } var nLookAround = g_UA.mobile ? 1 : 3; for(var nPage=(mfcBroadcasterDisplay.hOptions.nCurrentPage - nLookAround ); nPage <= (mfcBroadcasterDisplay.hOptions.nCurrentPage + nLookAround ); nPage++ ) { if(nPage < 1 || nPage > nPages ) { continue; } if(mfcBroadcasterDisplay.hOptions.nCurrentPage == nPage ) OnlineBroadcasterList.sPages += "<span class=highlight_bg style=\"border:1px solid red;\"><b>" + nPage + "</b></span>, "; else OnlineBroadcasterList.sPages += "<a href=# onClick=\"mfcBroadcasterDisplay.hOptions.nCurrentPage=" + nPage + ";OnlineBroadcasterList.Refresh('force',{scroll_to_top:1});return false;\">" + nPage + "</a>, "; } OnlineBroadcasterList.sPages = OnlineBroadcasterList.sPages.substring(0,OnlineBroadcasterList.sPages.length - 2); if(mfcBroadcasterDisplay.hOptions.nCurrentPage + 3 < nPages ) { OnlineBroadcasterList.sPages += '...' + "<a href=# onClick=\"mfcBroadcasterDisplay.hOptions.nCurrentPage=" + nPages + ";OnlineBroadcasterList.Refresh('force',{scroll_to_top:1}); return false;\">" + nPages + "</a>"; } } else { for(var nPage=1; nPage <= nPages; nPage++ ) { if(mfcBroadcasterDisplay.hOptions.nCurrentPage == nPage ) OnlineBroadcasterList.sPages += "<span class=highlight_bg style=\"border:1px solid red;\"><b>" + nPage + "</b></span>, "; else OnlineBroadcasterList.sPages += "<a href=# onClick=\"mfcBroadcasterDisplay.hOptions.nCurrentPage=" + nPage + ";OnlineBroadcasterList.Refresh('force',{scroll_to_top:1}); return false;\">" + nPage + "</a>, "; } OnlineBroadcasterList.sPages = OnlineBroadcasterList.sPages.substring(0,OnlineBroadcasterList.sPages.length - 2); } OnlineBroadcasterList.nRangeStart = ( ( mfcBroadcasterDisplay.hOptions.nCurrentPage - 1 ) * t.g_hSelf['models_per_page'] ) + 1; OnlineBroadcasterList.nRangeStop = ( mfcBroadcasterDisplay.hOptions.nCurrentPage * t.g_hSelf['models_per_page'] ); if(OnlineBroadcasterList.nRangeStop > mfcBroadcasterDisplay.nTotalModels ) { OnlineBroadcasterList.nRangeStop = mfcBroadcasterDisplay.nTotalModels; } if(g_UA.mobile || mfcBroadcasterDisplay.hOptions.nCurrentPage == 1 ) { OnlineBroadcasterList.sPagePrevNext += "Page " + OnlineBroadcasterList.sPages + " | <a href=# onClick=\"mfcBroadcasterDisplay.hOptions.nCurrentPage++; OnlineBroadcasterList.Refresh('force',{scroll_to_top:1}); return false;\">Next Page&#8594;</a>";
 } else if(mfcBroadcasterDisplay.hOptions.nCurrentPage == 1 ) { OnlineBroadcasterList.sPagePrevNext += "Page " + OnlineBroadcasterList.sPages + " | <a href=# onClick=\"mfcBroadcasterDisplay.hOptions.nCurrentPage=2; OnlineBroadcasterList.Refresh('force',{scroll_to_top:1}); return false;\">More " + t.g_hPlatform.Performer + "s On The Next Page &#8594;</a>"; } else if(mfcBroadcasterDisplay.hOptions.nCurrentPage == nPages ) { OnlineBroadcasterList.sPagePrevNext += "&#8592; <a href=# onClick=\"mfcBroadcasterDisplay.hOptions.nCurrentPage--; OnlineBroadcasterList.Refresh('force',{scroll_to_top:1}); return false;\">Previous Page</a> | Page " + OnlineBroadcasterList.sPages + " | Next Page &#8594;"; } else if(mfcBroadcasterDisplay.hOptions.nCurrentPage > 1 && mfcBroadcasterDisplay.hOptions.nCurrentPage < nPages ) { OnlineBroadcasterList.sPagePrevNext += " &#8592; <a href=# onClick=\"mfcBroadcasterDisplay.hOptions.nCurrentPage--; OnlineBroadcasterList.Refresh('force',{scroll_to_top:1}); return false;\">Previous Page</a> | Page " + OnlineBroadcasterList.sPages + " | <a href=# onClick=\"mfcBroadcasterDisplay.hOptions.nCurrentPage++; OnlineBroadcasterList.Refresh('force',{scroll_to_top:1}); return false;\">Next Page</a> &#8594; "; } if(mfcBroadcasters.nHiddenModels > 0 ) { OnlineBroadcasterList.sPageControls += "<b>" + mfcBroadcasterDisplay.nTotalModels + "</b> " + t.g_hPlatform.performer + "s are currently online," + ( ( g_UA.mobile ) ? '<br>' : '' ) + "<span style=\"background-color:#bbbbff;\"> <b>" + mfcBroadcasters.nHiddenModels + "</b> " + t.g_hPlatform.performer + "s are hidden by region. </span>"; } else { OnlineBroadcasterList.sPageControls += "<b>" + mfcBroadcasterDisplay.nTotalModels + "</b> " + t.g_hPlatform.performer + "s are currently online."; } if(OnlineBroadcasterList.sPagePrevNext ) { OnlineBroadcasterList.sPageControls += "<br><br>Go to: " + OnlineBroadcasterList.sPagePrevNext; } OnlineBroadcasterList.sPageControls += "</b>"; } if(g_sPlayerMode == 'player' ) { OnlineBroadcasterList.sPageLinks += "<div style=\"white-space:nowrap;clear:both;font-size:17px;padding:40px 10px 30px 5px;\">" + OnlineBroadcasterList.sPageControls + "</div>"; } else if(OnlineBroadcasterList.sPageControls ) { OnlineBroadcasterList.sPageLinks += "<div style=\"white-space:nowrap;clear:both;font-size:17px;padding:40px 10px 10px 5px;\">" + OnlineBroadcasterList.sPageControls + "</div>"; } return true;};OnlineBroadcasterList.PauseRefresh = function(){ mfcBroadcasterDisplay.hOptions.bPauseRefresh = ! mfcBroadcasterDisplay.hOptions.bPauseRefresh;
 if(! mfcBroadcasterDisplay.hOptions.bPauseRefresh ) OnlineBroadcasterList.Refresh('force'); ModelMenuBar.Refresh();};OnlineBroadcasterList.AnimatedEllipsis = function(sAction ){ clearTimeout(OnlineBroadcasterList.AnimatedEllipsis.oTimer ); if(sAction == 'stop' ) { return; } OnlineBroadcasterList.sElipses += "."; if(OnlineBroadcasterList.sElipses.length > 3) { OnlineBroadcasterList.sElipses = ""; } if(GetEl('ellipsis') ) { SetHTML('ellipsis',OnlineBroadcasterList.sElipses); } OnlineBroadcasterList.AnimatedEllipsis.oTimer = setTimeout(OnlineBroadcasterList.AnimatedEllipsis, 300 );};OnlineBroadcasterList.ChangePage = function(sDirection ){ mfcBroadcasterDisplay.hOptions.nCurrentPage += sDirection == 'next' ? 1 : -1; OnlineBroadcasterList.Refresh('force',{scroll_to_top:1});};OnlineBroadcasterList.SetHtml = function(hHtml ){ for(var sK in { header:1, footer:1 } ) { if(hHtml[ sK ] ) { SetHTML('online_broadcasters_' + sK, hHtml[ sK ] + ''); GetEl('online_broadcasters_' + sK ).style.display='block'; } else { GetEl('online_broadcasters_' + sK ).style.display='none'; SetHTML('online_broadcasters_' + sK, '' ); } } if(hHtml.list == 'clear' ) { mfcBroadcasterDisplay.OutputPresentation('clear'); } else if(hHtml.list != 'preserve' ) { mfcBroadcasterDisplay.Toggle('disable');
 mfcBroadcasterDisplay.SetHtml('OutputPresentation'); } else { mfcBroadcasterDisplay.Toggle('enable'); } document.body.style.overflow = 'auto';};OnlineBroadcasterList.HideReveal = function(){ if(g_sPlayerMode != 'player' ) { return; } var sOnlineBroadcasterDivId = ( g_UA.mobile ) ? 'online_broadcasters' : 'online_broadcasters_available_space'; var hPlayerSize = GetPlayerDimensions(); var oEl; ModelMenuBar.RefreshChatUnderVideoFlag(); if(ModelMenuBar.bHideOnlineModels ) { if(oEl = GetEl(sOnlineBroadcasterDivId ) ) { oEl.style.display = 'none'; } if(ModelMenuBar.bChatUnderVideo ) { if(oEl = GetEl('resize_video_td') ) { oEl.style.display = 'none'; } var oChatContainer; if(oChatContainer = GetEl('chat_container') ) { oChatContainer.style.height = ''; } var oChatTd, oTR; if(( oChatTd = GetEl('chat_td') ) && ( oTR = GetEl('below_video_tr') ) && oChatTd.parentNode != oTR ) { oChatTd.parentNode.removeChild(oChatTd ); oTR.appendChild(oChatTd ); oChatTd.colSpan = 3; oChatTd.style.paddingLeft = '12px'; oChatTd.style.borderTop = '1px solid #EEEEEE';
 SlimMode.temporary(); } } } else { GetEl(sOnlineBroadcasterDivId ).style.display = 'block'; } if(oEl = GetEl('click_drag_chat_under_video_td') ) { oEl.style.display = ModelMenuBar.bChatUnderVideo ? '' : 'none' ; } if(! ModelMenuBar.bChatUnderVideo ) { var oEl; if(oEl = GetEl('resize_video_td') ) { oEl.style.display = 'table-cell'; } var oChatTd, oTR; if(( oChatTd = GetEl('chat_td') ) && ( oTR = GetEl('videochat_table_top_row') ) && oChatTd.parentNode != oTR ) { oChatTd.parentNode.removeChild(oChatTd ); oTR.appendChild(oChatTd ); oChatTd.colSpan = 1; oChatTd.style.paddingLeft = '0px'; oChatTd.style.borderTop = '0px'; } SlimMode.restore(); } RefreshMessageBar(); LayoutSizing.size_chat_area(); LayoutSizing.nSizeOnlineModelArea_PreviousHeight = -1; LayoutSizing.size_online_model_area(); setTimeout(LayoutSizing.size_video, 1000 );};function SlimMode(bEnabled )
{ var sKey = g_bPopupPlayer ? 'video_controls_display_mode_popup' : 'video_controls_display_mode'; if(typeof(bEnabled ) != 'undefined' ) { if ( ChatOverlay && ChatOverlay.bEnabled ) { if(typeof(ChatOverlay.hCache.bSlimModeSetting) === 'undefined' ) ChatOverlay.hCache.bSlimModeSetting = SlimMode.enabled; } else { t.UserExtensions.Write(sKey, bEnabled ? 'slim' : 'full' ); } SlimMode.enabled = bEnabled; } else if(typeof(SlimMode.enabled ) == 'undefined' ) { SlimMode.enabled = t.g_hSelf[sKey] == 'slim'; } SlimMode.process(bEnabled );}SlimMode.temporary = function(){ SlimMode.enabled = true; SlimMode.process();};SlimMode.restore = function(){ var sKey = g_bPopupPlayer ? 'video_controls_display_mode_popup' : 'video_controls_display_mode'; SlimMode.enabled = t.g_hSelf[sKey] == 'slim'; SlimMode.process();};SlimMode.blocks = { enabled: { slim_mode_room_options: { display: 'block' }, slim_mode_enable: { display: 'none' }, slim_mode_disable: { display: 'block' }, topic_container: { display: 'none' }, room_options: { display: 'none' }, video_controls: { display: 'none' }, title_line_container: { textAlign: 'center' }, title_line_table: { width: '100%' }, inline_topic_container: { display: 'table-cell' } }, disabled: { slim_mode_room_options: { display: 'none' },
 slim_mode_enable: { display: 'block' }, slim_mode_disable: { display: 'none' }, topic_container: { display: 'table-cell' }, room_options: { display: 'block' }, video_controls: { display: 'block' }, title_line_container: { textAlign: 'center' }, title_line_table: { width: '' }, inline_topic_container: { display: 'none' } }};SlimMode.process = function(bEnabled ){ bEnabled = typeof(bEnabled) != 'undefined' ? bEnabled : SlimMode.enabled; { var sEnabled = bEnabled ? 'enabled' : 'disabled'; for(var sId in SlimMode.blocks[ sEnabled ] ) { if ( ChatOverlay && ChatOverlay.bEnabled && ! SlimMode.enabled && sEnabled == 'disabled' && sId.match(/^topic_/) ) { continue; } oEl = GetEl(sId ); if(sId == 'topic_container' && ! t.g_hSelf.show_chat_header_topic ) { if(oEl ) { oEl.style.display = 'none'; } } else { if(oEl ) {
 for(var prop in SlimMode.blocks[ sEnabled ][ sId ] ) { oEl.style[ prop ] = SlimMode.blocks[ sEnabled ][sId][ prop ]; } } } } } var oEl; if(! t.g_hUsers[ GetBroadcasterId() ].topic ) { ( oEl = GetEl('title_line_table') ) && ( oEl.style.width = '' ); ( oEl = GetEl('inline_topic_container') ) && ( oEl.style.display = 'none' ); } var oEl = GetEl('profile_preview_resize_icon'); if(oEl ) { oEl.src = t.g_hPlatform.image_url_cdn + "files/images/icons/svg/" + ( SlimMode.enabled ? 'vertical_shrink.svg' : 'vertical_size.svg' ); oEl.title = SlimMode.enabled ? "Expand Room Controls to Shrink Lower Window" : "Hide Room Controls to Expand Lower Window"; } var oVideoChatTable; if(! bEnabled && ( oVideoChatTable = GetEl('videochat_container_td') ) && oVideoChatTable.offsetHeight < 400 && t.g_hSelf.chat_area_height ) { ClickDragVideo.ModelListSizeReset(); } else { LayoutSizing.size_video(); LayoutSizing.size_chat_area(); LayoutSizing.size_online_model_area(); } if(! bEnabled ) { RoomTopic.render_topic(); }
 };function onUnloadHandler(){ if(LoadVideo.clientVideo && LoadVideo.clientVideo.Disconnect ) { LoadVideo.clientVideo.Disconnect(); LoadVideo.clientVideo = null; } t.events.offByContext(window.name ); if(t.g_hoPlayerWindows[ g_nBroadcasterId ] ) { t.g_hoPlayerWindows[ g_nBroadcasterId ]['closed'] = true; } t.WindowCloseDetection(); window.onunload = null; window.onbeforeunload = null;}var FilterSortOptions_Player = {};FilterSortOptions_Player.Popup = function(hOptions ){ hOptions = hOptions || {};
 if(! t.FilterSortOptions ) { return; } hOptions.player_mode = g_sPlayerMode; hOptions.no_close_on_mouseout = 1; if(g_UA.iOS ) { hOptions.left = 0; hOptions.top = 0; } else if(t.g_hSelf.single_page_website ) { hOptions.top = 50; } if(t.g_hPlatform.id == PLAT_CAM ) { hOptions.width = 337; } g_oDhtmlPopup.open("<div class=filter_sort_options>" + t.FilterSortOptions.FormHTML(hOptions ) + "</div>", hOptions ); t.FilterSortOptions.UpdateRegionCheckboxes(document);};FilterSortOptions_Player.UpdateForm = function(hOptions ){ if(! t.FilterSortOptions ) { return; } var els = document.getElementsByClassName('filter_sort_options'); for(var a=0; a < els.length; a++ ) els[a].innerHTML = t.FilterSortOptions.FormHTML({ player_mode: g_sPlayerMode }); t.FilterSortOptions.UpdateRegionCheckboxes(document);};var CustomAlerts_Player={};CustomAlerts_Player.openPopup = function(){ var sHtml = ''; var alerts=''; if(t.CustomAlerts && t.CustomAlerts.customAlertSummary ) { var checked = {}; var show_custom_alert_matches = t.g_hSelf.show_custom_alert_matches.toString().split(','); for(var a=0; a < show_custom_alert_matches.length; a++ ) { checked[ show_custom_alert_matches[a] ] = 1; } for(var id in t.CustomAlerts.customAlertSummary ) { var name = t.CustomAlerts.customAlertSummary[id].alert_name; if(name ) { name = name.replace(/</g,''); } if(! name ) { name = "<span style='color:gray'>(unnamed)</span>"; } alerts += " <input type=checkbox id=CustomAlerts_checkbox_" + id + " value=" + id + " onclick=\"CustomAlerts_Player.processCheckboxes(this);\" " + ( checked[id] ? 'CHECKED' : '' ) + "> " + name + "<br> ";
 } } if(! alerts ) { if(t.g_hSelf.access_level == 0 ) { window.open('../html/custom_alerts.html','_blank','height=900,width=930,status=0,'); return; } else { alerts = "<div style='color:gray;font-style:italic;padding:10px 0px;'>No configured selections.</div>"; } } sHtml += " <div class=mini_popup_header>Custom Selection</div> <div class=mini_popup_content> " + alerts + " </div> <br> " + t.A('custom_alerts') + "Manage Custom Selections</a> "; g_oDhtmlPopup_child.open(sHtml, { width:200 } );};CustomAlerts_Player.processCheckboxes = function(){ if(! t.CustomAlerts || ! t.CustomAlerts.customAlertSummary ) { return; } var newList=[]; for(var id in t.CustomAlerts.customAlertSummary ) { var cb = GetEl('CustomAlerts_checkbox_' + id ); if(cb.checked ) { newList.push(id); } } t.UserExtensions.Write('show_custom_alert_matches', newList.join() ); t.CustomAlerts.poll(); setTimeout(function() { OnlineBroadcasterList.Refresh('reset'); }, 1000 );};var PeopleBox = new MfcChannelMembers({ debug: t.location.search.indexOf('people_debug=1') > -1 ? true : false, self_id: t.g_hSelf.user_id, channel_owner_id: g_nBroadcasterId, user_lookup: function(nUserId ) { return nUserId == t.g_hSelf.user_id ? t.g_hSelf : t.g_hUsers[ nUserId ]; }, people_contents_element_id: 'people_contents', people_count_element_id: 'people_count', get_el_by_id: function(sId ) { return GetEl(sId); }, debug_output_handler: function(sMsg ) { t.Log(sMsg); }, set_html: function(sId, sContents ) { if(! GetEl(sId) ) return; if(sId == 'people_count' ) { SetHTML('people_count', sContents ); SetHTML('people_count2', sContents ); var els = document.getElementsByClassName('people_count_container'); if(els.length ) { Array.prototype.forEach.call(els,(el)=>{ el.style.opacity = sContents ? 1 : 0; }); } } else { SetHTML(sId, sContents ); } }, member_html: function(hUser ) { return "<span onClick=\"Player_popUserMenu_open('"+ hUser.user_id +"'); return false;\" class=user_style style='" + ( hUser['access_level'] == 1 && t.g_hSelf['mute_regs'] ? 'background-color:#ffcccc;' : '' ) + "cursor:pointer;text-decoration:none !important;padding-right:2px;"
 + ( hUser.ignored ? 'background-color:#ffbbbb;' : '' ) + ( ! t.g_hSelf['chat_text_ignore'] ? MfcCustomFonts.prototype.get_style(hUser ) : '' ) + "'>" + hUser['username'] + "</span>"; }, share_badges_html: function(hUser ) { var hModel = t.g_hUsers[g_nBroadcasterId]; if(! hModel ) { return; } if(! hUser || ! hUser.share_badges || ! hUser.share_badges[g_nBroadcasterId] ) { return; } var aOrder=[]; for(var nBadgeId in hUser.share_badges[ g_nBroadcasterId ] ) { var hClub; if(hClub = hModel.emoji_clubs[ nBadgeId ] ) aOrder.push(MfcStringUtilities.char_padding(hClub.amt, 10, 0, 'left' ) + ":" + nBadgeId); } aOrder.sort(); var html=''; for(var a=0; a < aOrder.length; a++ ) { nBadgeId = aOrder[a].split(':')[1]; if(hModel.emoji_clubs[ nBadgeId ] ) { var shareUrl = "//share." + t.g_hPlatform.domain + "/m/" + hModel.emoji_clubs[ nBadgeId ]['slug']; var shareTitle = hUser.username + " is a member of " + PossessiveApostrophe(hModel.username) + " MFC Share Club: " + hModel.emoji_clubs[ nBadgeId ]['name'].replace(/"/,''); html += "<span class=MfcChannelMembers_ShareBadges_emoji><a title=\"" + shareTitle + "\" target=_blank href=" + shareUrl + ">" + decodeURIComponent(hModel.emoji_clubs[ nBadgeId ]['emoji'] ) + "</a></span>"; } } return "<span class=MfcChannelMembers_ShareBadges_container><span class=MfcChannelMembers_ShareBadges>" + html + "</span></span>"; }, avatar_html: function(hUser ) { return "<a href=# onClick=\"Player_popUserMenu_open('"+ hUser.user_id +"'); return false;\"><span " + " draggable=\"true\" ondragstart=\" t.nDragUserId=" + hUser.user_id + "; \" >" + PeopleBoxHelper.UserAvatar(hUser.user_id, 16, 16 ) + "</span></a>"; },
 webcam_icon_html: function(hUser ) { return A("pm_friend",{ user_id: hUser.user_id , username: hUser['username'], suppress_decoration: 1, load_video: true }) + "<i"+"mg sr"+"c=" + t.g_hPlatform.image_url_cdn + ( t.g_hPlatform.id == PLAT_CAM ? "images/cam/png/webcam.png" : "files/images/icons/webcam_medium.gif" ) +"></a>"; }, notes_icon_html: function(hUser ) { return A('user_notepad',{ load_user_id: hUser.user_id, target:'new_window' }) + "<img height=16 sr"+"c=" + t.g_hPlatform.image_url_cdn + ( t.g_hPlatform.id == PLAT_CAM ? "images/cam/png/note-2-xxl.png" : "files/images/icons/notes.png" ) +"></a>"; }, guest_html: function(hUser ) { return "<span style=\"" + ( t.g_hSelf['mute_guests'] == 1 ? 'background-color:#ffcccc;' : '' ) + "\">" + hUser['username'] + "</a>"; }, cumulative_highest_tipper_emoji_html: function(hUser ) { if(! t.g_hUsers[g_nBroadcasterId] || ! t.g_hUsers[g_nBroadcasterId].c_emoji || ! t.g_hUsers[g_nBroadcasterId].c_hightipper ) { return ''; } var nAmount = t.g_hUsers[g_nBroadcasterId].c_hightipper.amt; return "<span title=\"Highest Total Tips!\">" + decodeURIComponent(t.g_hUsers[g_nBroadcasterId].c_emoji ) + "</span>"; }, single_highest_tipper_emoji_html: function(hUser ) { if(! t.g_hUsers[g_nBroadcasterId] || ! t.g_hUsers[g_nBroadcasterId].s_emoji || ! t.g_hUsers[g_nBroadcasterId].s_hightipper ) { return ''; } var nAmount = t.g_hUsers[g_nBroadcasterId].s_hightipper.amt; return "<span title=\"Highest Single Tip!\">" + decodeURIComponent(t.g_hUsers[g_nBroadcasterId].s_emoji ) + "</span>"; }});t.events.on('FcShareBadges',function(args) {
 [ nModelId, hData ] = args; if ( ! t.g_hUsers[ nModelId ] || ( nModelId + FCS.CHANNEL_ID_START ) != window.name ) { return; } for(var n in hData.user_badges ) { PeopleBox.InsertUser(t.g_hUsers[ hData.user_badges[ n ].uid ] ); }},window.name);var PeopleBoxHelper = {};PeopleBoxHelper.UserAvatar = function(nUserId,nHeight,nWidth){ var hUser; if(! ( hUser = t.g_hUsers[nUserId] ) ) { return ''; } if(! hUser['active'] ) { return ''; } var aH = new Array(); var sExtraStyle = ''; if(nHeight ) sExtraStyle += 'height:' + nHeight + 'px;'; if(nWidth ) sExtraStyle += 'width:' + nWidth + 'px;'; aH.push("<i"+"mg style='margin-right:3px;border:0px;padding:0px;" + sExtraStyle + "' "); if(t.g_hPlatform.id == PLAT_MFC ) { sExtraStyle += "vertical-align:middle;"; } if(hUser['avatars'] > 0 ) { var sSrc; if(hUser['broken_avatar'] ) sSrc = t.g_hPlatform.image_url_cdn + 'files/images/misc/generic_avatar.20x20.gif'; else sSrc = AvatarUrl(nUserId,20); aH.push(" sr"+"c='" + sSrc + "' class='tiny_avatar_border' onError=\" this.src = ('" + t.g_hPlatform.image_url_cdn + "files/images/icons/people/small_man_1.png'); t.g_hUsers[" + nUserId + "]['broken_avatar'] = 1; \" " +  " "); } else { if(t.g_hPlatform.id == PLAT_CAM ) aH.push(" sr"+"c='" + t.g_hPlatform.image_url_cdn + "images/flat/stroke/svg/user-1.svg' height=16"); else aH.push(" sr"+"c='" + t.g_hPlatform.image_url_cdn + "files/images/icons/people/small_" + popUserMenu.people_icon_gender(hUser) + "_" + popUserMenu.people_icon_number(hUser) + ".png' height=16"); }
 aH.push(" ></a>"); return aH.join('');};PeopleBoxHelper.Toggle = function(sMode ){ if ( ChatOverlay && ChatOverlay.bEnabled ) { if(typeof(ChatOverlay.hCache.bPeopleBoxHelperSetting) === 'undefined' ) ChatOverlay.hCache.bPeopleBoxHelperSetting = t.g_hSelf['hide_people']; } if(sMode != undefined ) { t.g_hSelf['hide_people'] = sMode; } else { t.g_hSelf['hide_people'] = t.g_hSelf['hide_people'] ? 0 : 1; } if ( ! (ChatOverlay && ChatOverlay.bEnabled) ) { t.UserExtensions.Write('hide_people', t.g_hSelf['hide_people'] ); } PeopleBoxHelper.HideReveal();};PeopleBoxHelper.HideReveal = function(nHide ){ var people_content_td = GetEl('people_content_td'); var people_reveal = GetEl('people_reveal'); var whiteboard_notice = GetEl('whiteboard_notice'); if(! people_content_td || ! people_reveal ) { return; } nHide = typeof(nHide ) == 'undefined' || nHide === null ? t.g_hSelf['hide_people'] : nHide; if(nHide ) { people_content_td.style.display = 'none'; people_reveal.style.display = ''; if(whiteboard_notice ) whiteboard_notice.style.right = '150px' } else { people_content_td.style.display = ''; people_reveal.style.display = 'none'; if(whiteboard_notice ) whiteboard_notice.style.right = '3px' }};PeopleBoxHelper.MenuHighlight = function(){ if(! GetEl('chat_options_link') ) { return; } var oEl;
 if(t.g_hSelf.hide_chat || t.g_hSelf['mute_guests'] || t.g_hSelf['mute_regs'] || ( g_bPopupPlayer && ToggleVideo.hAllHidden[ ( UCRPlayer.bIsLoaded || Lounge.bIsLoaded ) ? 'lounge' : 'model_rooms' ] ) ) { if(oEl = GetEl('chat_options_link') ) oEl.classList.add('highlight_fgbg'); if(oEl = GetEl('chat_options_link2') ) oEl.classList.add('highlight_fgbg'); } else { if(oEl = GetEl('chat_options_link') ) oEl.classList.remove('highlight_fgbg'); if(oEl = GetEl('chat_options_link2') ) oEl.classList.remove('highlight_fgbg'); } };var ChatOptions_Player = { fVideoIsOff: function() { return ToggleVideo.hAllHidden[ ( UCRPlayer.bIsLoaded || Lounge.bIsLoaded ) ? 'lounge' : 'model_rooms' ]; }};ChatOptions_Player.Popup = function(){ if(! t.ChatOptions ) { return; } t.ChatOptions.register({ context: window, updateFunc: function() { ChatOptions_Player.Update(); } }); var sHtml = ''; sHtml += " <div class=mini_popup_header>Chat Options</div> <div class=mini_popup_content style=" + ( g_UA.mobile ? "width:400px;height:1200px;" : "width:650px;height:390px;" ) + "> &nbsp; </div> "; var hOptions = { no_close_on_mouseout: true }; if(g_bPopupPlayer ) { hOptions.top = 10; hOptions.right = 50; } else if(! t.g_hSelf.single_page_website ) { hOptions.center = true; } 
 ChatOptions_Player.oDhtmlPopup = new MfcDhtmlPopup(); ChatOptions_Player.oDhtmlPopup.open(sHtml, hOptions ); t.ChatOptions.Update(window);};ChatOptions_Player.Update = function(){ if(! t.ChatOptions ) { return; } var bVideoOff = ChatOptions_Player.fVideoIsOff(); var sHtml = t.ChatOptions.FormHTML({ video_is_off: bVideoOff, columns: 2, popup_player: g_bPopupPlayer, window: window }); if(ChatOptions_Player.oDhtmlPopup.bIsOpen ) { ChatOptions_Player.oDhtmlPopup.update(sHtml, { resize: false } ); } var hHighlight = { 'option_popup_hide_video': bVideoOff == true }; var el; for(var key in hHighlight ) { if(el = GetEl(key) ) { if(hHighlight[key] ) el.classList.add('highlight_bg'); else el.classList.remove('highlight_bg'); } } PeopleBoxHelper.MenuHighlight();};var ChangePlayerPopupType = {};ChangePlayerPopupType.toggle = function(popupType ){ if(ChatOptions_Player.oDhtmlPopup ) { ChatOptions_Player.oDhtmlPopup.close(); } if(t.g_hoPlayerWindows[ g_nBroadcasterId ].presentation_state > 0 ) { ChatQueue.Append("Notice! In order to maintain the video connection, the window mode can't be changed while in a token session."); return; } var opts = g_hQS; opts.delay_window_closure = true; opts.change_player_popup_type = true; opts.broadcaster_id = g_nBroadcasterId; 
 if(! popupType ) { popupType = ChangePlayerPopupType.determineType(); popupType = popupType == 'native_window' ? 'dhtml_window' : 'native_window'; } if(popupType == 'native_window' ) { ChangePlayerPopupType.switchToNative(opts); } else if(popupType == 'dhtml_window' ) { ChangePlayerPopupType.switchToDhtml(opts); } else if(popupType == 'main_window' ) { ChangePlayerPopupType.switchToMain(opts); } else { console.log('popupType not handled'); return; }};ChangePlayerPopupType.determineType = function(){ return ( t.g_hWindows[ window.name ] && t.g_hWindows[ window.name ].type ) || 'native_window';};ChangePlayerPopupType.switchToMain = function(opts ){ delete opts.force_dhtml_window; delete opts.force_native_window; t.A_Click(event,{ 'resource': 'player', 'target': 'main', window_params: opts });};ChangePlayerPopupType.switchToNative = function(opts ){ delete opts.force_dhtml_window; opts.force_native_window = true; t.A_Click(event,{ 'resource': 'player', 'target': 'new_window', window_params: opts });};ChangePlayerPopupType.switchToDhtml = function(opts ){ opts.force_dhtml_window = true; delete opts.force_native_window; t.A_Click(event,{ 'resource': 'player', 'target': 'new_window', window_params: opts }); window.close();};function HighlightChat(sMode ){ if(! t.g_hSelf.highlight_friends_chat && sMode != 'reset' ) { return; } var oChatContainer = GetEl('chat_container'); if(! oChatContainer ) { return; } var aElements = oChatContainer.getElementsByTagName('div'); for(var nE = 0, nElementsLength = aElements.length; nE < nElementsLength; nE++ ) { var oEl = aElements[nE]; if(! oEl ) { continue; }
 if(oEl.className.match(/user(\d+)/) ) { var hUser = t.g_hUsers[ parseInt(RegExp.$1) ]; if(hUser ) { var sBGColor; if(t.TopHighlightChat.hUsers[ hUser.user_id ] ) sBGColor = t.TopHighlightChat.hUsers[ hUser.user_id ]; else if(t.g_hSelf.highlight_friends_chat && hUser && hUser.friend ) sBGColor = '#FFFF99'; else if(! t.g_hSelf.highlight_friends_chat || ( hUser && ! hUser.friend ) ) sBGColor = ''; if(sBGColor != undefined ) { if(sBGColor && t.NightMode_Top.enabled ) sBGColor = NightMode.HexInvert(sBGColor ); oEl.style.backgroundColor = sBGColor; } } } }}var HighlightChatUsers = {};HighlightChatUsers.mouseover = function(bActivate, nUserId ){ if(! t.g_hSelf.highlight_chat_users ) { return; } var els = document.getElementsByClassName('user'+nUserId); for(var a=0; a < els.length; a++ ) { if(bActivate ) els[a].classList.add('highlight_chat_mouseover'); else els[a].classList.remove('highlight_chat_mouseover'); }};HighlightChatUsers.lastChat = function(nUserId ){ if(! nUserId || ! t.g_hUsers[nUserId] ) { return; } if(! t.g_hSelf.highlight_chat_users ) { return; } var els = document.getElementsByClassName('chat_container'); for(var a=0; a < els.length; a++ ) { els[a].classList.remove('highlight_chat_lastChat');
 } var els = document.getElementsByClassName('user'+nUserId); for(var a=0; a < els.length; a++ ) { els[a].classList.add('highlight_chat_lastChat'); }};function Mute(){ var bMute = t.g_hSelf['audio_muted'] == 1 ? 0 : 1; t.UserExtensions.Write('audio_muted', bMute ); if(LoadVideo.clientVideo && LoadVideo.clientVideo.Mute ) LoadVideo.clientVideo.Mute(bMute ); DrawMute(); return;} function Challenge(sChallenge){}function SolveChallenge(sChallenge){ var sKey = eval(sChallenge); return sKey;}var ChatQueue = { aBuffer: new Array(), oPendingRedraw: {}, bPendingRedraw: false};ChatQueue.Format_Append = function(sMsg, nUserId, hOptions ){ sMsg = sMsg || ''; nUserId = nUserId || 0; hOptions = hOptions || {}; hOptions.user_menu_a_tag = " <a href=# onClick=\"Player_popUserMenu_open(" + nUserId + "); return false;\" style=\"text-decoration:none;\">"; var sRawMessage = sMsg; sMsg = t.FormatChat(sMsg, nUserId, hOptions );
 if(Lounge.bIsLoaded ) { sMsg = t.LoungeQuickLinks({ message: sMsg, raw_message: sRawMessage, user_id: nUserId, lounge: Lounge }); } ChatQueue.Append(sMsg ); clearTimeout(ChatQueue.HighlightChatUsers_Timer ); ChatQueue.HighlightChatUsers_Timer = setTimeout(function() { HighlightChatUsers.lastChat(nUserId); }, 250 );};ChatQueue.ChatAppendByMessage = function(sMessage, sHtml ){ var model_els = Array.prototype.slice.call(document.getElementsByClassName('user' + GetBroadcasterId() ) ); var charlesbot_els = Array.prototype.slice.call(document.getElementsByClassName('user19863002') ); var els = model_els.concat(charlesbot_els); for(var a=0; a < els.length; a++ ) { if(els[a].innerHTML.indexOf(sMessage) > -1 ) { var el = document.createElement('div'); el.innerHTML = sHtml; els[a].parentNode.insertBefore(el,els[a].nextSibling); return 1; } }};ChatQueue.Append = function(sMsg ){ if(! sMsg ) { sMsg = ""; } var oElChatContents = GetEl('chat_contents'); var oElChatBox = GetEl("chat_box"); if(oElChatContents && sMsg == 'reset' ) { oElChatContents.innerHTML = ''; ChatOverlay.newMessages(-1); return; } if(sMsg != 'exec' ) { ChatQueue.aBuffer.push(sMsg );
 if(! ChatQueue.bPendingRedraw ) { ChatQueue.bPendingRedraw = true; clearTimeout(ChatQueue.oPendingRedraw ); ChatQueue.oPendingRedraw = setTimeout(function(){ ChatQueue.bPendingRedraw = false; ChatQueue.Append('exec'); }, 250 ); return; } return; } if(! oElChatContents ) { return; } if(sMsg == 'reset' ) { SetHTML('chat_contents'); ChatOverlay.newMessages(-1); } else { var nScrollBackChars; if(g_UA.Android ) nScrollBackChars = 50000; else if(g_UA.mobile ) nScrollBackChars = 100000; else nScrollBackChars = 200000; var sScrollMode=''; if(oElChatContents.scrollHeight && oElChatContents.scrollTop && oElChatBox && oElChatBox.style.height && oElChatBox.style.height.match(/(\d+)/) ) { if(( oElChatContents.scrollHeight - 50 ) <= oElChatContents.scrollTop + parseInt(RegExp.$1 ) ) { sScrollMode='force'; } } if(oElChatContents.innerHTML.length > nScrollBackChars && Math.random() > .3 ) { var aChatEntries = oElChatContents.children; var nChatEntriesLen = aChatEntries.length; var nCharsRemoved = 0; for (var i = 0; i < nChatEntriesLen; i++) { var oEl = aChatEntries[0]; if (oEl && oEl.className === 'chat_queue_buffer') {
 nCharsRemoved += oEl.innerHTML.length; oElChatContents.removeChild(oEl); if ( nCharsRemoved >= 10000 ) { break; } } } } var chatEl = document.createElement('div'); chatEl.className = 'chat_queue_buffer'; chatEl.innerHTML = ChatQueue.aBuffer.join(''); oElChatContents.appendChild(chatEl); ChatOverlay.newMessages(ChatQueue.aBuffer.length); ChatBox.SmoothScroll('append',sScrollMode); } ChatQueue.aBuffer = new Array(); };var ChatBox = { bIgnoreTop: false, nFollowUpScrollTimer: 0, aTimeouts: Array(), nImgOnloadTimeout: 0, bInitialChatLoading: 0};ChatBox.SmoothScroll = function(sCallerNote, sMode ){ var oElChatContents, nDifference; if(! ( oElChatContents = GetEl('chat_contents') ) ) { return; } var oElChatBox = GetEl("chat_box"); if(g_UA.Android ) { setTimeout(function() { oElChatContents.style.bottom = "0px"; }, 1000 ); return; } if(sCallerNote == 'img_onload' ) { if(ChatBox.bInitialChatLoading ) { clearTimeout(ChatBox.nImgOnloadTimeout); ChatBox.nImgOnloadTimeout = setTimeout(function(){ ChatBox.ScrollToBottom('force initial chat load'); }, 500 ); }
 else { clearTimeout(ChatBox.nImgOnloadTimeout); ChatBox.nImgOnloadTimeout = setTimeout(function(){ ChatBox.SmoothScroll('img_onload_secondary','immediate'); }, 500 ); } return; } var nElChatContentsScrollTop = oElChatContents.scrollTop; if(nElChatContentsScrollTop == 0 && ChatBox.bIgnoreTop == false ) { ChatBox.bIgnoreTop = true; ChatBox.ScrollToBottom('smooth 1'); } if(oElChatBox && oElChatBox.style.height ) { oElChatBox.style.height.match(/(\d+)/); nDifference = oElChatContents.scrollHeight - ( nElChatContentsScrollTop + parseInt(RegExp.$1 ) ); } if(nDifference > 50 && sMode != 'force' ) { clearTimeout(ChatBox.nFollowUpScrollTimer); return; } if(! oElChatContents.scrollHeight ) { return; } if(g_UA.mobile || sMode == 'immediate' ) { oElChatContents.scrollTop = oElChatContents.scrollHeight + 1000; } else { nIncrement = Math.round(nDifference / 5 ) + 1; for(var a = 1; a <= 5; a++ ) { clearTimeout(ChatBox.aTimeouts[a] ); ChatBox.aTimeouts[a] = setTimeout(function(){ ChatBox.SmoothScrollAdvance(nIncrement) }, ( 20 * a ) ); } clearTimeout(ChatBox.aTimeouts[6] ); ChatBox.aTimeouts[6] = setTimeout(function(){ ChatBox.ScrollToBottom(sMode ); }, 250 ); }};ChatBox.SmoothScrollAdvance = function(nDistance){ var oEl;
 if(oEl = GetEl('chat_contents') ) oEl = GetEl('chat_contents').scrollTop += parseInt(nDistance);};ChatBox.ScrollToBottom = function(sMode ){ sMode = sMode || ''; ChatBox.ScrollToBottom_Execute(); ChatBox.nFollowUpScrollTimer = setTimeout(ChatBox.ScrollToBottom_Execute, 200 ); if(sMode.indexOf('force') > -1 ) { ChatBox.nFollowUpScrollTimer = setTimeout(ChatBox.ScrollToBottom_Execute, 400 ); ChatBox.nFollowUpScrollTimer = setTimeout(ChatBox.ScrollToBottom_Execute, 600 ); }};ChatBox.ScrollToBottom_Execute = function(){ var oEl; if(oEl = GetEl('chat_contents') ) { if(g_UA.Safari ) oEl.scrollTop = oEl.scrollHeight + 1000; else oEl.scrollTop = oEl.scrollHeight; }};function HotKey(sMode ){ if(! t.g_bDebug ) { return; } var inputs = document.getElementsByTagName("input"); for(var i = 0; i < inputs.length; i++) { if(document.activeElement == inputs[i] ) { return; } } if(Lounge.bIsLoaded ) { if(sMode == 'previous_room' ) Lounge.VideoCycler.Cycle(0,{ advance: 'back' }); else if(sMode == 'next_room' ) Lounge.VideoCycler.Cycle(0,{ advance: 'next' });
 } else if(g_sPlayerMode == 'player' ) { if(sMode == 'previous_room' ) AdvanceRoom('previous'); else if(sMode == 'next_room' ) AdvanceRoom('next'); }}document.addEventListener('keydown', GlobalKeyPress_Player );function GlobalKeyPress_Player(e){ if(! e ) { e = event; } if(e.keyCode == 27 ) { if(g_oDhtmlPopup.bIsOpen ) { g_oDhtmlPopup.close(); } if(t.g_oDhtmlPopup && t.g_oDhtmlPopup.bIsOpen ) { t.g_oDhtmlPopup.close(); } } if(e.keyCode == 188 ) { HotKey('previous_room'); } else if(e.keyCode == 190 ) { HotKey('next_room'); } else if(e.keyCode == 27 ) { if(g_oDhtmlPopup.bIsOpen ) { g_oDhtmlPopup.close(); } } else if(t.GlobalKeyPress ) { t.GlobalKeyPress(e); }}function KeyPress(e){}function KeyDown(e){ if(! e ) { e = event; } if(window.halt_global_keyDown ) { return; }
 var oMessageInput = e.target; if(t && e.ctrlKey && ( e.keyCode == 90 || e.keyCode == 88 ) ) { t.DebugKeyCombo(e); } else if(e.target == oMessageInput || ( ! e.target && oMessageInput && oMessageInput.value && oMessageInput.value.length ) ) { if(e.keyCode == 13 || e.keyCode == 10 ) { if(g_oDhtmlPopup.bIsOpen ) { g_oDhtmlPopup.close(); } if(t.g_oDhtmlPopup && t.g_oDhtmlPopup.bIsOpen ) { t.g_oDhtmlPopup.close(); } Send(); } else if(e.keyCode == 38 ) { mfcChatCommands.RecallPreviousCommands('older'); } else if(e.keyCode == 39 ) { mfcChatCommands.RecallPreviousCommands('last_command'); } else if(e.keyCode == 40 ) { mfcChatCommands.RecallPreviousCommands('newer'); } setTimeout(function(){ mfcChatCommands.RecallPreviousCommands_Listen(); }, 100 ); }}function KeyUp(e){ var oMessageInput = e.target; if(oMessageInput && typeof(oMessageInput.value) != 'undefined' && ! t.g_hSelf.no_emote_preview ) { g_oParseEmoteInput.inlineEmotePreview({ input: oMessageInput, callback: g_oParseEmoteInput.inlineEmotePreview_renderPreviewImage, access_level: t.g_hSelf['access_level'] }); }}
function SendButton(sMode ){ GetEl('send_button').disabled = ! ( sMode == 'enable' );}function RateLimit_Alarm(){ var sMsg=''; if(t.g_hSelf['access_level'] == 1 ) { sMsg = "To prevent spam, we limit how often Basic Members can send messages. Please wait a few seconds for the SEND button in the chat room to turn from grey to black which will indicate that you can chat again.\n\nIf you buy tokens even 1 time, you will become a Premium Member for life and you will not have any restrictions on how often you can chat.\n\nThank you and sorry for the inconvenience!"; } else { sMsg = "To prevent spam, we limit how often guests can send messages. Please wait a few seconds for the SEND button in the chat room to turn from grey to black which will indicate that you can chat again.\n\nTo raise or remove this limit, simply register a free account on this site.\n\nThank you and sorry for the inconvenience!"; } alert(sMsg);}function RateLimit_Reset(cLimit ){ g_nRateLimiter[ cLimit ] = 0; g_nRateLimiter_Hit[ cLimit ] = 0; g_bRateLimit_Alarm[ cLimit ] = 0; if(! g_nRateLimiter_Hit['A'] && ! g_nRateLimiter_Hit['B'] ) { SendButton('enable'); }}var g_nRateLimiter = { A:0, B:0 };var g_nRateLimiter_Hit = { A:0, B:0 };var g_bRateLimit_Alarm = { A:0, B:0 };function Send(sMsg){ var message_input = GetEl('message_input'); var sMsg = sMsg || message_input.value; sMsg = sMsg.replace(/^\s+/g,''); g_oParseEmoteInput.inlineEmotePreview_close(); var hRes = mfcChatCommands.Parse(sMsg );
 if(hRes ) { console.log(sMsg, sMsg.indexOf('/') ); if(sMsg.indexOf('/') === 0 ) { message_input.title = "Double-click mouse to enter the last chat command '" + sMsg + "'"; MessageInput_MouseDown.command = sMsg; } else { message_input.title = ""; MessageInput_MouseDown.command = ""; } if(hRes.message ) { ChatQueue.Format_Append(hRes.message, 0, { 'chat_style':'chat_command' } ); setTimeout(function() { ChatBox.SmoothScroll('command_response','force'); }, 100 ); } try { message_input.value = ""; } catch(e) {} g_oReportBack = new MfcReportBack('ChatCommands'); g_oReportBack.Send('player', t.g_hSelf.username + "\t" + sMsg ); return; } else { SendChat(sMsg ); }}function MessageInput_MouseDown(event ){ var message_input = GetEl('message_input'); if(message_input.value && MessageInput_MouseDown.command == message_input.value ) { 1; } else if(event.button !== 0 || message_input.value.length > 0 )
 { return; } MessageInput_MouseDown.clickCount++; if(MessageInput_MouseDown.timer ) { return; } MessageInput_MouseDown.timer = setTimeout(() => { if(MessageInput_MouseDown.command ) { if(MessageInput_MouseDown.clickCount == 2 ) { message_input.value = MessageInput_MouseDown.command; g_oReportBack = new MfcReportBack('ChatCommands_click'); g_oReportBack.Send('player', t.g_hSelf.username + "\t2\t" + MessageInput_MouseDown.command ); } } MessageInput_MouseDown.clickCount = 0; MessageInput_MouseDown.timer = null; },500);};MessageInput_MouseDown.clickCount = 0;function SendChat(sMsg){ sMsg = sMsg || ''; if(sMsg.match(/^\s*$/) ) { return; } if(t.g_hSelf['access_level'] < 2 )
 { if(g_bRateLimit_Alarm['A'] || g_bRateLimit_Alarm['B'] ) { RateLimit_Alarm(); return; } if(t.g_hSelf['access_level'] < 2 ) { g_nRateLimiter['A']++; g_nRateLimiter['B']++; } if(t.g_hSelf['access_level'] == 0 ) { if(g_nRateLimiter['A'] >= 1 ) { g_nRateLimiter_Hit['A'] = 1; } if(g_nRateLimiter['B'] >= 4 ) { g_nRateLimiter_Hit['B'] = 1; } } else if(t.g_hSelf['access_level'] == 1 ) { if(g_nRateLimiter['A'] >= 2 ) { g_nRateLimiter_Hit['A'] = 1; } if(g_nRateLimiter['B'] >= 6 ) { g_nRateLimiter_Hit['B'] = 1; } } if(g_nRateLimiter_Hit['A'] ) { SendButton('disable'); g_bRateLimit_Alarm['A']++; } if(g_nRateLimiter_Hit['B'] ) { SendButton('disable'); g_bRateLimit_Alarm['B']++; }
 if(g_nRateLimiter['A'] == 1 ) { setTimeout(function(){ RateLimit_Reset('A'); }, 5000 ); } if(g_nRateLimiter['B'] == 1 ) { setTimeout(function(){ RateLimit_Reset('B'); }, 60000 ); } } var bEcho = 0; if(t.g_hSelf['access_level'] == 0 || t.g_hSelf['access_level'] == 1 ) { var sCurrentMessage = sMsg.replace(/\W/g,''); sCurrentMessage = sCurrentMessage.toLowerCase(); if(sCurrentMessage.length > 10 ) { nIndex = t.g_aPreviousMessages.length; t.g_aPreviousMessages[nIndex] = t.g_aPreviousMessages[nIndex] || {}; for(var a = 0; a < sCurrentMessage.length; a++ ) { t.g_aPreviousMessages[nIndex][sCurrentMessage.charAt(a)] = t.g_aPreviousMessages[nIndex][sCurrentMessage.charAt(a)] || 0; t.g_aPreviousMessages[nIndex][sCurrentMessage.charAt(a)]++; } nVariation = 0; if(nIndex > 0 ) { for(var nLookBack=1; nLookBack<4;nLookBack++ ) { for(var sK in t.g_aPreviousMessages[nIndex - nLookBack ] ) { if(! t.g_aPreviousMessages[nIndex][ sK ] ) { nVariation++; } } if(! nVariation ) { bEcho = 1; } }
 } } } if(t.g_hSelf['access_level'] == 0 || ! t.g_hSelf['access_level'] ) { if(sMsg.replace(/\W/,'').match(/[A-Z]{3,}/)) { sMsg = sMsg.toLowerCase(); } var sConditioned = ' ' + sMsg.replace(/[^\w\s]/g,'') + ' '; if((' '+sMsg+' ').match(/heaventruth|\Wfat\W|\Wasa\W|\Wmeu|\Wcontu|\Wnu\W|\Wmey|\Wiau|\Wgata|\Wsau\W|\Wvaz\W|\Wfaci\W|\Wlucra\W|\Wlucre\W|\Wmunca\W|\Wmunce\W|\Wfi\W|\Wsunt\W|\Westi\W|\Weste\W|\Wcow\W|\Wpig\W|\Wdog\W|\Wd.ke\W|\Who\W|\Whoe\W|\Whussy\W|com\W/i) || sConditioned.match(/\Wwh[oO]re\W|\Wb.tch\W|\Wc[^a]nt\W|\Wugly\W|\Wtarfa\W|\Wcurva\W|\Wurata\W|\Wgrasa\W|\Wprost|\Wmurder\W|\Wdirty\W|\Wstupid\W|\Wmarried\W|\Wchildren\W|\Wkids\W|\Wslut\W/i) || sMsg.match(/\*\*/) || ! sMsg.match(/\w/) ) { bEcho = 2; } } if(t.g_hSelf['access_level'] == 1 || t.g_hSelf['access_level'] == 0 || ! t.g_hSelf['access_level'] ) { if(sMsg.match(/\w{3,}\.\w{2,}/) ) { bEcho = 10; } if(sMsg.match(/[has\$]+\W+t\w+d\W+\w+\Wt/i) || sMsg.match(/\W[0-9oi\|]+\W+t\w*[o0]\w*[ns]\W*$/i) ) { bEcho = 11; } } if(sMsg.match(/^\{\*emote\*\}.*[has\$]+\W+t\w+d\W+[A-Z][a-z0-9]+\W/i) || sMsg.match(/^\{\*emote\*\}.*\W[0-9oi\|]+\W+t\w*[o0]\w*[ns]\W*$/i) ) { bEcho = 12; } if(DisallowedChatContent(sMsg ) ) { ChatQueue.Format_Append("Due to their policies, manyvids.com may not be linked on this site. If you are trying to send a video, we recommend using <a href=https://share.myfreecams.com target=_blank>MFC Share</a> at <a href=https://share.myfreecams.com target=_blank>https://share.myfreecams.com</a>", 0, { 'chat_style':'chat_command' } ); return; } if(t.g_bLoadChat && t.Rate() > .2 ) { bEcho = 30; } if(bEcho ) { if(t.g_hSelf['access_level'] > 0 ) { g_oReportBack = new MfcReportBack('ChatBounce'); g_oReportBack.Send('','err:' + bEcho + ' msg:' + sMsg); } ChatQueue.Format_Append(sMsg, t.g_hSelf['user_id'] ); try { GetEl('message_input').value = ""; } catch(e) {} return; } try { GetEl('message_input').value = ""; } catch(e) {} sMsg = sMsg.replace(/`/g,"'"); sMsg = sMsg.replace(/<~/g,"'"); sMsg = sMsg.replace(/~>/g,"'"); g_oParseEmoteInput.Process(sMsg, Send_callback );}
function Send_callback(sParsedString, aMsg ){ var mfcChatCard = new MfcChatCard({ callback_func: function(oCard ) { var sJSON = JSON.stringify({ to: t.g_hoPlayerWindows[ g_nBroadcasterId ].room_channel, type: 'card', data_enc: oCard.data_enc, data_tkx: oCard.data_tkx }); t.TxCmd(FCS.FCTYPE_XMESG, t.g_nSessionId, t.g_hoPlayerWindows[ g_nBroadcasterId ].room_channel, 0, 0, sJSON ); } }); mfcChatCard.ProcessChatInput(sParsedString ); sParsedString = URLEncoding.encode(sParsedString, 'cmesg' ); t.TxCmd(FCS.FCTYPE_CMESG, t.g_nSessionId, t.g_hoPlayerWindows[ g_nBroadcasterId ].room_channel, 0, 0, sParsedString);}t.events.onRx(FCS.FCTYPE_XMESG, function(fcMsg) { FcXMessage(fcMsg ); }, window.name );function FcXMessage(fcMsg ){ if(t.GetRoomOwnerId(fcMsg.arg1 ) != g_nBroadcasterId ) { return; } var mfcChatCard = new MfcChatCard({ share_tpl_func: t.MFCShare_DhtmlMenu.chatCardTplMods, get_user_style_func: function(nUserId ) { return MfcCustomFonts.prototype.get_style(t.g_hUsers[ nUserId ] ); } }); if(! fcMsg || ! fcMsg.obj || ! fcMsg.obj.data ) { console.log('FcXMessage not processed'); return; } ChatQueue.Append(mfcChatCard.ProcessCard(fcMsg.obj.data ) );}function LoadPlayerMenu(){ if(! t.g_hUsers[ g_nBroadcasterId ] || g_sPlayerMode == 'homepage' ) { return; } var sMenu = '';
 var sVideoControls = ''; sVideoControls += "<span title=\"Enable Slim Viewing Mode\" onClick=\"SlimMode(true);\" style=\"display:inline-block;\"><img src=\"/files/images/svg/minimize2.svg\" class=\"slim_mode_toggle\" style=\"height: 11px; margin-bottom: -2px;\"></span>"; sVideoControls += " &nbsp Video:"; if(LoadVideo.clientVideo && LoadVideo.clientVideo.videoProfile && LoadVideo.clientVideo.videoProfile.player_type=='livesnaps' ) { sVideoControls += " <span id=snap_video_mode></span>"; } else { sVideoControls += " <span class=mute></span> | "; } if(ChatOverlay.bEnabled ) { sVideoControls += " <a href=# onClick=\"ChatOverlay.toggle(false); return false;\">Exit Chat Overlay Mode"; sVideoControls += "</a>"; } else if ( typeof(Theater) == 'object' && Theater.bEnabled ) { sVideoControls += " <a href=# onClick=\"Theater.toggle(false); return false;\">Exit Theater Mode"; sVideoControls += "</a>"; } else { var sTheaterMode = ""; var sFullControl = ""; if(typeof(Theater) == 'object' && Theater.is_supported() ) sTheaterMode = "<a href=# onClick=\"Theater.toggle(true); return false;\">Theater(beta)</a>"; if(ChatOverlay.is_supported() ) sFullControl = "<a href=# onClick=\"ChatOverlay.toggle(true); return false;\">Overlay</a>"; if(! g_bPopupPlayer && ! ModelMenuBar.bChatUnderVideo ) { sVideoControls += "<a href=# onClick=\"VideoResizeNotice(); return false;\" title=\"Resize video by clicking and dragging the arrow to the right\">Resize</a>"; if ( sTheaterMode ) { sVideoControls += "/";
 sVideoControls += sTheaterMode; } if(sFullControl ) { sVideoControls += "/"; sVideoControls += sFullControl; } sVideoControls += "/"; sVideoControls += "<a href=# onClick=\"ToggleSize(); return false;\" id=toggle_size_control></a>"; sVideoControls += "/"; } else { if(sFullControl ) { sVideoControls += sFullControl; sVideoControls += "/"; } } if(Lounge.bIsLoaded ) { sVideoControls += "<a href=# onClick=\"ToggleVideo.Toggle(); return false;\"><span id=toggle_video_lounge>" + ( ToggleVideo.hVideoDisabled['lounge'] ? '<span class=highlight_bg ><b>On</b></span>' : 'Off' ) + "</span></a>"; } else { sVideoControls += "<a href=# onClick=\"ToggleVideo.Toggle(); return false;\"><span id=toggle_video_model_rooms>" + ( ToggleVideo.hVideoDisabled['model_rooms'] ? '<span class=highlight_bg><b>On</b></span>' : 'Off' ) + "</span></a>"; } if(! ModelMenuBar.bChatUnderVideo ) { sVideoControls += "/"; sVideoControls += "<a href=# onClick=\"ToggleVideo.HideAll('toggle'); return false;\">Hide"; sVideoControls += "</a>"; } } if(t.g_hQS.ngvideo == 1 || t.g_hQS.ngtranscode == 1 ) { sVideoControls += "<br>"; var sDefLabel = 'Default'; var sPlaybackDef = 'flash'; if(! t.g_hSelf.playback_type ) { if(t.clientVideo.sForceVideoJSTech ) {
 t.g_hSelf.playback_type = t.clientVideo.sForceVideoJSTech; sPlaybackDef = t.clientVideo.sForceVideoJSTech; sDefLabel = 'AltDefault'; } else if(t.g_hQS['h5video'] == 'off' ) { t.g_hSelf.playback_type = 'flash'; sPlaybackDef = 'flash'; sDefLabel = 'AltDefault'; } } var hPlaybackTypes = { 'flash': 'Flash' }; var sOpts=''; for(var sK in hPlaybackTypes ) { var sSel = sK == t.g_hSelf.playback_type ? 'SELECTED' : ''; sOpts += "<option value=\"" + sK + "\" " + sSel + ">"; if(sK == sPlaybackDef ) { sOpts += sDefLabel + ' - ' ; } sOpts += hPlaybackTypes[sK] + "</option>"; } sVideoControls += " <select onChange=\"LoadPlayerMenu.SetVideoDebugParams({ playback_type: this.value });\"> " + sOpts + " </select> "; var hStreams = { '': 'Native Stream', 'Nx1080p30': '1080p30 @8mb', 'Nx720p30': '720p30 @5mb', 'Nx540p30': '540p30 @3.5mb', 'Nx480p30': '480p30 @2.5mb' }; var sOpts=''; for(var sK in hStreams ) { var sSel = sK == t.g_hSelf.stream_type ? 'SELECTED' : ''; sOpts += "<option value=" + sK + " " + sSel + ">" + hStreams[sK] + "</option>"; }
 sVideoControls += " <select onChange=\"LoadPlayerMenu.SetVideoDebugParams({ stream_type: this.value });\"> " + sOpts + " </select> "; } SetHTML('video_controls',sVideoControls); if(LoadVideo.clientVideo && LoadVideo.clientVideo.videoProfile && LoadVideo.clientVideo.videoProfile.player_type=='livesnaps' ) { DrawSnapsVideoMenu(); } else { DrawMute(); } DrawMuteGuests(); DrawSize();}LoadPlayerMenu.SetVideoDebugParams = function(hOpts ){ hOpts = hOpts || {}; if(hOpts.playback_type ) { t.g_hSelf.playback_type = hOpts.playback_type || ''; if(t.g_hSelf.playback_type == 'flash' ) { t.g_hQS['h5video'] = 'off'; t.clientVideo.sForceVideoJSTech = ''; } else { t.g_hQS['h5video'] = 'on'; t.clientVideo.sForceVideoJSTech = t.g_hSelf.playback_type; } } t.g_hSelf.stream_type = hOpts.stream_type || '';
 LoadVideo();};function SetTruePvt(fTruePvt){ if(LoadVideo.clientVideo && LoadVideo.clientVideo.SetTruePvt ) LoadVideo.clientVideo.SetTruePvt(fTruePvt); }function VolumeNotice(){ if(LoadVideo.clientVideo && LoadVideo.clientVideo.VolumeNotice ) LoadVideo.clientVideo.VolumeNotice();}function VideoResizeNotice(sMode ){ var sMessage = "To resize the video, drag the <img src=" + t.g_hPlatform.image_url_cdn + "files/images/icons/png/split_horizontal.16x16.png style='opacity:0.5;background-color:white;'> icon on the right side of the video to the right or left."; if(g_UA.iOS ) { sMessage += "\n\nNote to iPad/iPhone users, this action must be performed slowly."; } else if(g_UA.FlashAvailable ) { sMessage += "<br><br>Double-click the video for full screen mode."; } if(g_bPopupPlayer ) { DhtmlPrompt({ prompt_type: 'alert', message: sMessage } ); } else { t.DhtmlPrompt({ prompt_type: 'alert', message: sMessage } ); }}
var GroupShow = { bControlPopupOpen: 0, nErrorCode: 0};GroupShow.hErrorCode = {};GroupShow.hErrorCode[ FCS.FCGROUP_EXPIRED ] = "The Group Show initiation has expired. Please click on the Group Show link again to request a group show again.";GroupShow.hErrorCode[ FCS.FCGROUP_BUSY ] = "Three users have already initiated a Group Show session";GroupShow.hErrorCode[ FCS.FCGROUP_EMPTY ] = "All users have opted out of the Group Show initiation.";GroupShow.hErrorCode[ FCS.FCGROUP_DECLINED ] = "The " + t.g_hPlatform.performer + " has declined the Group Show";GroupShow.hErrorCode[ FCS.FCGROUP_UNAVAILABLE ] = "Sorry! This " + t.g_hPlatform.performer + " is not accepting Group Shows";t.events.onRx(FCS.FCTYPE_STATUSGRP, function(fcMsg) { var nUserId = t.GetRoomOwnerId(fcMsg.arg1 ); if(g_nBroadcasterId != nUserId && Lounge.nModelId != nUserId ) { return; } GroupShow.Status(decodeURIComponent(fcMsg.data) );}, window.name );t.events.onRx(FCS.FCTYPE_GROUPCHAT, function(fcMsg){ var nUserId = t.GetRoomOwnerId(fcMsg.arg1 ); if(g_nBroadcasterId != nUserId && Lounge.nModelId != nUserId ) { return; } var nGroupSessId = fcMsg.arg2; var nPubChan = t.PublicChannel(nUserId); var nGroupChan = t.SessionChannel(nUserId); FcAcceptGroupShow(nUserId, nPubChan, nGroupChan, nGroupSessId, fcMsg );}, window.name );t.events.onRx(FCS.FCTYPE_CLOSEGRP, function(fcMsg){ var nUserId = t.GetRoomOwnerId(fcMsg.arg1 ); if(g_nBroadcasterId != nUserId && Lounge.nModelId != nUserId ) { return; } GroupShow.Shutdown(fcMsg.arg2);} , window.name );t.events.onRx(FCS.FCTYPE_SESSIONSTATE, function(fcMsg){
 var nUserId = fcMsg.arg2; if(nUserId != GetBroadcasterId() ) { return; } RoomTopic.render_topic(); if(typeof(t.g_hGroupShowInitiators[nUserId]) == 'object' && t.g_hGroupShowInitiators[nUserId].length ) GroupShow.UpdateCounter();}, window.name );GroupShow.Error = function(fcMsg){ GroupShow.nErrorCode = fcMsg.arg2; setTimeout(function(){ GroupShow.nErrorCode=0; },30000); if(GroupShow.bControlPopupOpen ) { GroupShow.oDhtmlPopup.update(GroupShow.DrawMenu()); } GroupShow.UpdateCounter();};GroupShow.UpdateCounter = function(hOptions){ if(! document.getElementById('group_show_counter') ) { return; } SetHTML('group_show_counter', GroupShow.GetCounter(hOptions) ); };GroupShow.GetCounter = function(hOptions){ var aGCI = t.g_hGroupShowInitiators[ g_nBroadcasterId ]; var sH=''; if(aGCI.length > 0 ) { sH = '&nbsp;<span class=highlight_bg >(' + aGCI.length + ')</span>'; } return sH;};GroupShow.ControlPopup = function(hOptions){ hOptions = hOptions || {}; if(t.TokenSessionsUnavailable(g_nBroadcasterId, LoadVideo.clientVideo ) ) { return; } GroupShow.oDhtmlPopup = new MfcDhtmlPopup({ mfcMouseTracker: g_oMouseTracker, mfcGraphics: g, window: window, instance_name: 'GroupShow' }); GroupShow.oDhtmlPopup.open(GroupShow.DrawMenu() ); var oEl = GetEl('GroupShow_master'); if(oEl ) { oEl.style.left = ( g_oMouseTracker.xPos - ( 500 * g_oMouseTracker.dQuadX ) - 20) + 'px'; oEl.style.top = ( g_oMouseTracker.yPos - ( 150 * g_oMouseTracker.dQuadY ) ) + 'px'; } GroupShow.bControlPopupOpen = 1;};GroupShow.Status = function(sPayload ){
 if(typeof(sPayload) == 'string' ) { t.g_hGroupShowInitiators[ g_nBroadcasterId ] = sPayload.split(","); } if(GroupShow.bControlPopupOpen ) { GroupShow.oDhtmlPopup.update(GroupShow.DrawMenu()); } if(t.g_hSelf['access_level'] >= 2 ) { var sMsg = ''; var aGCI = t.g_hGroupShowInitiators[ g_nBroadcasterId ]; GroupShow.UpdateCounter(); if(aGCI.length ) { var sInitiators = ''; for(var nK=0; nK < aGCI.length; nK++ ) { sInitiators += "<b>" + aGCI[nK] + "</b>, "; } if(sInitiators ) { sInitiators = sInitiators.substr(0,sInitiators.length - 2) } } }};GroupShow.Shutdown = function(nReason) { t.Log("GroupShow.Shutdown called with " + nReason ); t.g_hGroupShowInitiators[ g_nBroadcasterId ] = { }; GroupShow.nErrorCode = nReason; setTimeout(function(){ GroupShow.nErrorCode=0; }, 30000); if(GroupShow.bControlPopupOpen ) { GroupShow.oDhtmlPopup.update(GroupShow.DrawMenu()); } if(t.g_hSelf['access_level'] >= 2 ) { var sMsg = GroupShow.hErrorCode[nReason]; ChatQueue.Format_Append(sMsg, 0 ); }
 GroupShow.UpdateCounter();};GroupShow.DrawMenu = function(nReason ){ var sOptions = ''; var aGCI = t.g_hGroupShowInitiators[ g_nBroadcasterId ]; if(t.g_hUsers[ g_nBroadcasterId ]['disable_group_chat'] == 1 ) { sOptions += " <i> Group Show not available</i> <div style=\"padding:10px;\"> This " + t.g_hPlatform.performer + " is currently not accepting Group Shows. </div> "; } else if(t.g_hUsers[ g_nBroadcasterId ]['state'] == FCS.FCVIDEO_TX_CLUB ) { sOptions += " <i>The " + t.g_hPlatform.performer + " is in a Club Show</i> <div style=\"padding:10px;\"> A Club Show session is in progress.  </div> "; } else if(t.g_hUsers[ g_nBroadcasterId ]['state'] == FCS.FCVIDEO_TX_GRP ) { sOptions += " <i>The " + t.g_hPlatform.performer + " is in a Group Show</i> <div style=\"padding:10px;\"> A Group Show session is in progress. You can join the Group Show with the link below the video. </div> "; } else if(t.g_hUsers[ g_nBroadcasterId ]['state'] != FCS.FCVIDEO_TX_IDLE ) { sOptions += " <i>The " + t.g_hPlatform.performer + " is not available</i> <div style=\"padding:10px;\"> You can initiate a Group Show with the " + t.g_hPlatform.performer + " when she returns to her public chat room. </div> "; } else if(aGCI.length == 3 ) { sOptions += " <i>Waiting for " + t.g_hPlatform.Performer + " Approval</i> <div style=\"padding:10px;\"> Three users have opted for a Group Show.\
 The " + t.g_hPlatform.performer + " must now accept the Group Show invitation. </div> "; } else if(aGCI.length ) { var sInitiators = ''; var bSelfIsAnInitiator = 0; for(var nK=0; nK < aGCI.length; nK++ ) { sInitiators += "<b>" + aGCI[nK] + "</b>, "; if(t.g_hSelf['username'] == aGCI[nK] ) { bSelfIsAnInitiator = 1; } } if(sInitiators ) { sInitiators = sInitiators.substr(0,sInitiators.length - 2); sInitiators = decodeURIComponent(sInitiators ); sInitiators = sInitiators.replace(/,/,', '); } sOptions += " <i>Group Show Has Been Initiated</i> <div style=\"padding:10px;\"> <li>Users waiting: " + sInitiators + " (" + ( 3 - aGCI.length ) + " more needed)</li> "; if(aGCI.length && t.g_hSelf['tokens'] < 1 ) { sOptions += " <li> " + A('purchase') + "Purchase Tokens</a> to join the Group Show.</li> "; } else if(! bSelfIsAnInitiator ) { sOptions += " <li><a href=\"javascript:GroupShow.Initiate();\">Add Me to the Group Show</a></li> "; } sOptions += " </div> "; } else { if(GroupShow.nErrorCode )
 { sOptions += GroupShow.hErrorCode[ GroupShow.nErrorCode ]; } sOptions += " <li><a href=\"javascript:GroupShow.Initiate();\">Initiate Group Show</a></li> "; } var sH = " <div style=\"width:400px;\"> <div class=mini_popup_header>Group Show</div> <div class=mini_popup_content> " + sOptions + " <br> <li>" + A('faq', { anchor: 'Group_Shows' }) + "Click here to learn about Group Show</a></li> <br> <li>" + A("group_shows_board") + "More Group Shows</a></li> <br> </div> </div> "; return sH;};GroupShow.Initiate = function(){ t.TxCmd(FCS.FCTYPE_REQUESTGRP, t.g_nSessionId, 0, t.g_hUsers[ g_nBroadcasterId ]['sessionid'], 0, null); };function RequestSession(sMode, hOptions ){ hOptions = hOptions || {}; if(t.g_hPlatform.id == PLAT_CAM ) { return; } var nModelId = hOptions['model_id'] ? hOptions['model_id'] : g_nBroadcasterId; if(AutoNext.isActive() ) { AutoNext.Toggle(false ); } var clientVideo = LoadVideo.clientVideo; if(sMode == 'club_show' && clientVideo && clientVideo.videoProfile && clientVideo.videoProfile.player_type != 'flash' && clientVideo.videoProfile.player_type != 'videojs' && ! t.WebRTCSupported(nModelId)
 ) { DhtmlPrompt({ prompt_type: 'alert', message: "Club Shows are not available for this model's feed."}); return true; } else if(sMode != 'club_show' && t.TokenSessionsUnavailable(nModelId, clientVideo ) ) { return; } if(t.g_hoPMWindows[ nModelId ] && t.g_hoPMWindows[ nModelId ].pm_video ) { t.g_hoPMWindows[nModelId].pm_video = 0; t.g_hoPMWindows[nModelId]['window'].LoadVideo('pre_unload'); } if(typeof(RequestSession.bClickLock) == 'undefined' ) { RequestSession.bClickLock = 0; } if(t.g_hSelf['access_level'] < 2 ) { window.open(g_Paths.phpPathAccount + "?request=premium_feature",'premium_popup',"height=480,width=480,status=0"); return; } else if(sMode == 'club_show' ) { var hClubshow = t.g_hClubshows && t.g_hClubshows[ nModelId ]; var hUser = t.g_hUsers[ nModelId ]; if(hClubshow && hClubshow.tksid ) { t.g_hoPlayerWindows[ nModelId ].presentation_state = FCS.EVSESSION_CLUB; t.g_hoPlayerWindows[ nModelId ].club_session_id = hClubshow['tksid']; t.TxCmd(FCS.FCTYPE_JOINCHAN, t.g_nSessionId, 0, t.g_hoPlayerWindows[ nModelId ].room_channel, FCS.FCCHAN_PART); t.g_hoPlayerWindows[ nModelId ].room_channel = SessionChannel(nModelId ); t.TxCmd(FCS.FCTYPE_JOINCHAN, t.g_nSessionId, 0, t.g_hoPlayerWindows[ nModelId ].room_channel, FCS.FCCHAN_JOIN); PeopleBox.Reset(); ChatQueue.Append('reset'); LoadVideo(); t.TxCmd(FCS.FCTYPE_CLUBCMD, 0, 1, 0, 0, { "op": FCS.FCCHAN_JOIN, "model": nModelId, "tksid": hClubshow.tksid, "ctxenc": hClubshow.ckx_auth.ctxenc, "_reqid": window.window_id }); 
 return; } else if(hClubshow && hClubshow.clubs ) { t.DhtmlPrompt({ prompt_type: 'alert', width: 550, ok_label: 'Cancel', message: t.FcClubShows.ClubShowHelpHTML(hClubshow ) }); return; } else { t.DhtmlPrompt({ prompt_type: 'alert', message: "Unable to join this Club Show." } ); return; } } else if(! t.g_hSelf['tokens'] || t.g_hSelf['tokens'] < 1 ) { var sMessage=''; if(sMode == 'voyeur' ) { sMessage += "You must " + A('purchase') + "purchase tokens</a> in order to spy on the show."; } else if(sMode == 'group_show' ) { sMessage += "You must " + A('purchase') + "purchase tokens</a> in order to enter group chat."; } else { sMessage += "You must " + A('purchase') + "purchase tokens</a> in order to go private."; } if(g_bPopupPlayer ) { DhtmlPrompt({ prompt_type: 'alert', message: sMessage } ); } else { t.DhtmlPrompt({ prompt_type: 'alert', message: sMessage } ); } return; } if(sMode == 'private' && ! hOptions.confirmed ) { hOptions.confirmed = true;
 var sMsg = "<center>You are about to enter a <b id=private_session_type_display>" + ( t.g_hSelf.true_private ? "TruePrivate" : "private show" ) + "</b>. <br><br>Press <b>OK</b> to continue.</center>"; var sFooter = "<br><br> <center> <select style=\"font-size:13px;\" onChange=\" t.UserExtensions.Write('true_private', this.value ); document.getElementById('private_session_type_display').innerHTML=(this.value==1?'TruePrivate':'private show'); document.getElementById('what_is_true_private').style.display=(this.value==1?'inline':'none'); \"> <option value=0>Private Show (60 Tokens per Minute)</option> <option value=1 " + ( t.g_hSelf.true_private == 1 && 'SELECTED' ) + ">TruePrivate Show (80 Tokens per Minute)</option> </select> <span id=what_is_true_private style=\"display:" + ( t.g_hSelf.true_private==1?'inline':'none') + ";\">(" + t.A('account',{ 'anchor': 'private_show_settings' }) + "?</a>)</span> </center> "; var hPromptOptions = { prompt_type: 'confirm', message: sMsg, footer: sFooter, callback: RequestSession, callback_args: [ sMode, hOptions ] }; if(g_bPopupPlayer ) { DhtmlPrompt(hPromptOptions ); } else { t.DhtmlPrompt(hPromptOptions ); } return; } if(RequestSession.bClickLock == 1 ) return; RequestSession.bClickLock = 1; setTimeout(function(){ RequestSession.bClickLock = 0; }, 5000 ); if(sMode == 'private' ) { sMessage = "Requesting a private session..."; t.TxCmd(FCS.FCTYPE_REQUESTPVT, t.g_nSessionId, t.g_hUsers[ nModelId ]['sessionid'], FCS.EVSESSION_PRIVATE, 0, { type: FCS.EVSESSION_PRIVATE, model: t.g_hUsers[ nModelId ]['sessionid'], _reqid: window.window_id } ); } else if(sMode == 'group_show' && Lounge.bIsLoaded ) { sMessage = "Accessing group show video...";
 clearTimeout(Lounge.oTimer); clearTimeout(Lounge.oLoadVideo); t.TxCmd(FCS.FCTYPE_REQUESTGRP, t.g_nSessionId, 0, t.g_hUsers[ nModelId ]['sessionid'], 0, null); } else if(sMode == 'group_show' ) { sMessage = "Entering group chat..."; t.TxCmd(FCS.FCTYPE_REQUESTGRP, t.g_nSessionId, 0, t.g_hUsers[ nModelId ]['sessionid'], 0, null); } else if(sMode == 'voyeur' ) { sMessage = "Accessing private video..."; clearTimeout(Lounge.oTimer); clearTimeout(Lounge.oLoadVideo); t.TxCmd(FCS.FCTYPE_REQUESTPVT, t.g_nSessionId, t.g_hUsers[ nModelId ]['sessionid'], FCS.EVSESSION_VOYEUR, 0, { type: FCS.EVSESSION_VOYEUR, model: t.g_hUsers[ nModelId ]['sessionid'], _reqid: window.window_id } ); } ChatQueue.Append(sMessage + "<br>");}t.events.onRx(FCS.FCTYPE_REQUESTPVT,function(fcMsg) { FcRequestPvt(fcMsg ); }, window.name );function FcRequestPvt(fcMsg ){ if(! fcMsg.obj || fcMsg.obj._reqid != window.window_id ) { return; } if(fcMsg.obj && fcMsg.obj.errtype ) { var sMsg=''; if(fcMsg.obj.errtype == FCS.FCNOSESS_TOKEN_MIN ) sMsg = "Your private show invitation could not be sent because you have fewer tokens than the minimum set by the model to initiate a private show."; else if(fcMsg.obj.errtype == FCS.FCNOSESS_PVT ) sMsg = "The model is not accepting Private shows at this time. Please ask the model for more details."; else if(fcMsg.obj.errtype == FCS.FCNOSESS_TRUEPVT ) sMsg = "The model is not accepting TruePrivate shows at this time. Please ask the model for more details."; else sMsg = "Sorry, the " + t.g_hPlatform.performer + " was unavailable or unable to accept your request for a private session."; DhtmlPrompt({ prompt_type: 'alert', message: sMsg }); }}function RefreshSessionState(){
 if(! t.g_hoPlayerWindows[ g_nBroadcasterId ] || ! t.g_hUsers[ g_nBroadcasterId ] ) { return; } var nModelId = GetBroadcasterId(); if(t.IsTokenSession(t.g_hoPlayerWindows[ g_nBroadcasterId ].presentation_state ) && ! t.IsSessionState(t.g_hUsers[ nModelId ]['state'] ) ) { FcEndSession(); } RefreshMessageBar(); if(LoadVideo.clientVideo && LoadVideo.clientVideo.OnVideoPlayerUpdate ) LoadVideo.clientVideo.OnVideoPlayerUpdate();}t.events.onRx(FCS.FCTYPE_STARTVOYEUR,function(fcMsg) { if(g_nBroadcasterId == fcMsg.arg1 || Lounge.nModelId == fcMsg.arg1 ) FcStartVoyeur(fcMsg.arg2, t.ParseJSON(decodeURIComponent(fcMsg.data ) ));}, window.name );function FcStartVoyeur(nPrvSessId, hData ){ t.g_hoPlayerWindows[ g_nBroadcasterId ]['private_session_id'] = nPrvSessId; t.g_hoPlayerWindows[ g_nBroadcasterId ].presentation_state = FCS.EVSESSION_VOYEUR; t.g_hoPlayerWindows[ g_nBroadcasterId ]['pvt_ckxauth'] = hData['ckx_auth'].ctxenc; LoadVideo(); RefreshMessageBar();}
t.events.onRx(FCS.FCTYPE_ACCEPTPVT,function(fcMsg) { FcAcceptPrivate(fcMsg ); }, window.name );function FcAcceptPrivate(fcMsg ){ var nUserId = t.GetRoomOwnerId(fcMsg.arg1 ); if(GetBroadcasterId() != nUserId ) { return; } var nPrvSessId = fcMsg.arg2; var hData = t.ParseJSON(decodeURIComponent(fcMsg.data ) ); var nPubChan = t.PublicChannel(nUserId); var nPrvChan = t.SessionChannel(nUserId); if(nPrvSessId == FCS.FCRESPONSE_ERROR ) { ChatQueue.Append("The " + t.g_hPlatform.performer + " is unable to go private at the moment. Please try again in a few minutes."); } else { t.g_hoPlayerWindows[ g_nBroadcasterId ]['private_session_id'] = nPrvSessId; t.g_hoPlayerWindows[ g_nBroadcasterId ].presentation_state = FCS.EVSESSION_PRIVATE; t.TxCmd(FCS.FCTYPE_JOINCHAN, t.g_nSessionId, 0, t.g_hoPlayerWindows[ g_nBroadcasterId ].room_channel, FCS.FCCHAN_PART); t.g_hoPlayerWindows[ g_nBroadcasterId ].room_channel = SessionChannel(g_nBroadcasterId ); t.g_hoPlayerWindows[ g_nBroadcasterId ]['pvt_ckxauth'] = hData['ckx_auth'].ctxenc; t.TxCmd(FCS.FCTYPE_JOINCHAN, t.g_nSessionId, 0, t.g_hoPlayerWindows[ g_nBroadcasterId ].room_channel, FCS.FCCHAN_JOIN); PeopleBox.Reset(); var oTime = new Date(); FcAcceptPrivate.nPrivateTimer = oTime.getTime(); LoadVideo(); ChatQueue.Append('reset'); } RefreshMessageBar();}function FcAcceptGroupShow(nUserId, nPubChan, nGroupChan, nGroupSessId, fcMsg ){ var hData = t.ParseJSON(decodeURIComponent(fcMsg.data ) ); if(nGroupSessId == FCS.FCRESPONSE_ERROR ) { ChatQueue.Append("Group Shows are unavailable at the moment."); } else if(Lounge.bIsLoaded )
 { if(nGroupSessId != FCS.FCRESPONSE_ERROR ) { t.g_hoPlayerWindows[ g_nBroadcasterId ]['group_session_id'] = nGroupSessId; t.g_hoPlayerWindows[ g_nBroadcasterId ].presentation_state = FCS.EVSESSION_GROUP; t.g_hoPlayerWindows[ g_nBroadcasterId ]['grp_ckxauth'] = hData['ckx_auth'].ctxenc; LoadVideo(); } } else { t.g_hGroupShowInitiators[ g_nBroadcasterId ] = { }; t.g_hoPlayerWindows[ g_nBroadcasterId ]['group_session_id'] = nGroupSessId; t.g_hoPlayerWindows[ g_nBroadcasterId ].presentation_state = FCS.EVSESSION_GROUP; t.g_hoPlayerWindows[ g_nBroadcasterId ]['grp_ckxauth'] = hData['ckx_auth'].ctxenc; t.TxCmd(FCS.FCTYPE_JOINCHAN, t.g_nSessionId, 0, t.g_hoPlayerWindows[ g_nBroadcasterId ].room_channel, FCS.FCCHAN_PART); t.g_hoPlayerWindows[ g_nBroadcasterId ].room_channel = SessionChannel(g_nBroadcasterId ); var nJoinMode = FCS.FCCHAN_JOIN | FCS.FCCHAN_HISTORY; t.TxCmd(FCS.FCTYPE_JOINCHAN, t.g_nSessionId, 0, t.g_hoPlayerWindows[ g_nBroadcasterId ].room_channel, nJoinMode); PeopleBox.Reset(); var oTime = new Date(); FcAcceptPrivate.nPrivateTimer = oTime.getTime(); LoadVideo(); ChatQueue.Append('reset'); } RefreshMessageBar();}t.events.onRx(FCS.FCTYPE_CLUBSHOW,function(fcMsg) { FcClubShow(fcMsg ); }, window.name );function FcClubShow(fcMsg ){ if(t.g_hPlatform.id == PLAT_CAM ) { return; } var sMessage = decodeURIComponent(fcMsg.data ); var hMessage = t.ParseJSON(sMessage ); var hUser = t && t.g_hUsers && t.g_hUsers[g_nBroadcasterId]; if(! hUser ) { return; } if (hMessage.model == g_nBroadcasterId) { if (hMessage.op === FCS.FCCHAN_WELCOME ) {
 if(t.g_hoPlayerWindows[ g_nBroadcasterId ].presentation_state == FCS.EVSESSION_NONE ) { setTimeout(function() { ChatQueue.Append(t.FcClubShows.ClubShowHelpHTML(hMessage ) ); },1000); } } else if (hMessage.op === FCS.FCCHAN_EXPIRE ) { FcEndSession(hMessage.model, FCS.EVSESSION_CLUB ); } else t.Log('CLUBBUG: invalid op[' + hMessage.op + '] code in Clubshow msg, expected FCS.FCCHAN_WELCOME[' + FCS.FCCHAN_WELCOME + '] or FCS.FCCHAN_EXPIRE[' + FCS.FCCHAN_EXPIRE + ']'); } else t.Log('CLUBBUG: Received clubshow data for ' + hMessage.model + ', but expected it to be g_nBroadcasterId: ' + g_nBroadcasterId); RefreshMessageBar();}t.events.onRx(FCS.FCTYPE_TOKENINC,function(fcMsg){ FcTokenInc_Player(fcMsg ); }, window.name );function FcTokenInc_Player(fcMsg ){ if(g_inChatPurchase && g_inChatPurchase.purchasePrompt && fcMsg.arg1 === 0 ) { g_inChatPurchase.purchasePrompt(); } if(fcMsg.obj && fcMsg.obj.u && fcMsg.obj.tokens && fcMsg.obj.u[1] == t.g_hSelf.user_id ) { playerQuickTip.previousTipValue = fcMsg.obj.tokens; }}t.events.onRx(FCS.FCTYPE_DETAILS,function(fcMsg) { FcDetails_Player(fcMsg); }, window.name );function FcDetails_Player(){ RefreshMessageBar(); if(g_inChatPurchase
 && ( t.g_hSelf.tokens == 30 || ( ( t.g_hSelf.tokens % 5 ) === 0 && t.g_hQS.test_inchat_purchase ) ) && ( t.g_hoPlayerWindows[ g_nBroadcasterId ].presentation_state == FCS.EVSESSION_PRIVATE || t.g_hoPlayerWindows[ g_nBroadcasterId ].presentation_state == FCS.EVSESSION_GROUP ) ) { g_inChatPurchase.purchasePrompt(); }}function RequestEndSession(sMode ){ if(sMode == 'premature' ) { ChatQueue.Append("Please wait a moment before ending the private session.<br>"); } else if(sMode == 'group_show' && Lounge.bIsLoaded ) { ChatQueue.Append("Closing Group Show video<br>"); t.TxCmd(FCS.FCTYPE_ENDSESSION, t.g_nSessionId, 0, t.g_hUsers[ Lounge.nModelId ]['sessionid'], 0, null); } else if(sMode == 'group_show' ) { ChatQueue.Append("Exiting the Group Show<br>"); t.TxCmd(FCS.FCTYPE_ENDSESSION, t.g_nSessionId, 0, t.g_hUsers[ g_nBroadcasterId ]['sessionid'], 0, null); } else if(sMode == 'club_show' ) { FcEndSession(g_nBroadcasterId, FCS.EVSESSION_CLUB ); } else { ChatQueue.Append("Ending the " + g_hSessionTypeWords[ t.g_hoPlayerWindows[ g_nBroadcasterId ].presentation_state ] + " session<br>"); var nModelId = GetBroadcasterId(); t.TxCmd(FCS.FCTYPE_ENDSESSION, t.g_nSessionId, 0, t.g_hUsers[ nModelId ]['sessionid'], 0, null); }}function FcEndSession(nModelId, nSessionType ){ if(nSessionType != FCS.EVSESSION_VOYEUR ) { if (t.g_hoPlayerWindows[ g_nBroadcasterId ].room_channel != PublicChannel(g_nBroadcasterId )) { t.TxCmd(FCS.FCTYPE_JOINCHAN, t.g_nSessionId, 0, t.g_hoPlayerWindows[ g_nBroadcasterId ].room_channel, FCS.FCCHAN_PART); t.g_hoPlayerWindows[ g_nBroadcasterId ].room_channel = PublicChannel(g_nBroadcasterId );
 t.TxCmd(FCS.FCTYPE_JOINCHAN, t.g_nSessionId, 0, t.g_hoPlayerWindows[ g_nBroadcasterId ].room_channel, FCS.FCCHAN_JOIN | FCS.FCCHAN_HISTORY ); PeopleBox.Reset(); } } if(nSessionType == FCS.EVSESSION_CLUB ) { if (t.g_hoPlayerWindows[ g_nBroadcasterId ].hasOwnProperty('club_session_id')) { t.TxCmd(FCS.FCTYPE_CLUBCMD, 0, 1, 0, 0, { "op":FCS.FCCHAN_PART, "model":g_nBroadcasterId, "_reqid":window.window_id}); delete t.g_hoPlayerWindows[ g_nBroadcasterId ]['club_session_id']; } if(t.g_hoPlayerWindows[ g_nBroadcasterId ].presentation_state != FCS.EVSESSION_NONE ) { ChatQueue.Append('reset'); ChatQueue.Append("You have left the Club Show.<br>"); } else { ChatQueue.Append("The Club Show has ended.<br>"); } } else if(nSessionType == FCS.EVSESSION_VOYEUR ) { if (t.g_hoPlayerWindows[ g_nBroadcasterId ].hasOwnProperty('pvt_ckxauth')) delete t.g_hoPlayerWindows[ g_nBroadcasterId ].pvt_ckxauth; if (t.g_hoPlayerWindows[ g_nBroadcasterId ].hasOwnProperty('private_session_id')) delete t.g_hoPlayerWindows[ g_nBroadcasterId ]['private_session_id']; ChatQueue.Append("The voyeur session has ended.<br>"); } else if(nSessionType == FCS.EVSESSION_PRIVATE ) { if (t.g_hoPlayerWindows[ g_nBroadcasterId ].hasOwnProperty('pvt_ckxauth')) delete t.g_hoPlayerWindows[ g_nBroadcasterId ].pvt_ckxauth; if (t.g_hoPlayerWindows[ g_nBroadcasterId ].hasOwnProperty('private_session_id')) delete t.g_hoPlayerWindows[ g_nBroadcasterId ]['private_session_id']; ChatQueue.Append('reset'); ChatQueue.Append("The private session has ended.<br>"); } else if ( t.g_hUsers[ g_nBroadcasterId ]['state'] == FCS.FCVIDEO_TX_GRP && ! Lounge.bIsLoaded ) { if (t.g_hoPlayerWindows[ g_nBroadcasterId ].hasOwnProperty('grp_ckxauth')) delete t.g_hoPlayerWindows[ g_nBroadcasterId ].grp_ckxauth;
 if (t.g_hoPlayerWindows[ g_nBroadcasterId ].hasOwnProperty('group_session_id')) delete t.g_hoPlayerWindows[ g_nBroadcasterId ]['group_session_id']; ChatQueue.Append('reset'); ChatQueue.Append("You have exited the group show.<br>"); } else { ChatQueue.Append("The session has ended.<br>"); } t.g_hoPlayerWindows[ g_nBroadcasterId ].presentation_state = FCS.EVSESSION_NONE; if(! Lounge.bIsLoaded || ( Lounge.bIsLoaded && nModelId == Lounge.nModelId ) ) LoadVideo(); RefreshMessageBar();}function FancyUsername(nUserId, sExtraStyle ){ return "<span class=user_style style=\"cursor:pointer;" + MfcCustomFonts.prototype.get_style(t.g_hUsers[ nUserId ] ) + sExtraStyle + "\" " + " onClick=\"Player_popUserMenu_open(" + nUserId + ",{ model_menu:1 });\">" + ( t.g_hUsers[ nUserId ] && t.g_hUsers[ nUserId ].username ) + "</span>";}var get_socialmedia = function(){ var mfcSocialMedia = new MfcSocialMedia({ callback: (response) => { if(! response ) { return; } t.g_hUsers[ g_nBroadcasterId ].social_media = response; RefreshMessageBar(); } }); mfcSocialMedia.getSocialMedia({ user_id: g_nBroadcasterId } );};function RefreshMessageBar(hOptions ){ hOptions = hOptions || {}; var nBroadcasterId = g_nBroadcasterId; if(! nBroadcasterId ) { return; } if(LoadVideo.currentlyDisplayedBroadcasterId && LoadVideo.currentlyDisplayedBroadcasterId != GetBroadcasterId() && ! hOptions.force ) { return; } if(! hOptions.force && FnRateLimit('RefreshMessageBar',100,function(){ RefreshMessageBar(hOptions); }) ) { return; } var hUser; if(! ( hUser = t.g_hUsers[ nBroadcasterId ] ) ) { return; } var hLoungeUser = {}; if(t.g_hUsers[ Lounge.nModelId ] ) { hLoungeUser = t.g_hUsers[ Lounge.nModelId ]; } var nUserId = GetBroadcasterId(); var room_options = GetEl('room_options'); if(room_options && room_options.innerHTML && ! hOptions.force ) { var stateVars = [ nAvailableWidth, nBroadcasterId, nUserId, CurrentVideoAspectRatio(), room_options.offsetWidth, AutoNext.isActive(), ( UCRPlayer.hRoom && UCRPlayer.hRoom.id ), ( ( t.g_hoPlayerWindows[ GetBroadcasterId() ] && t.g_hoPlayerWindows[ GetBroadcasterId() ].presentation_state ) || -1 ), t.g_hUsers[ GetBroadcasterId() ].state, t.g_hSelf.show_chat_header_topic, t.g_hSelf.tokens, Lounge.VideoCycler.isActive() ]; var stateKey = JSON.stringify(stateVars ); if(RefreshMessageBar.stateKey == stateKey ) { return; } RefreshMessageBar.stateKey = stateKey; }
 if(t.g_hUsers[ g_nBroadcasterId ] && ! t.g_hUsers[ g_nBroadcasterId ].social_media ) { get_socialmedia(); } t.events.off('StatusMessaging.getConfig_callback', RefreshMessageBar ); t.events.once('StatusMessaging.getConfig_callback', RefreshMessageBar, window.name ); var hVideoDimensions = GetVideoDimensions(); var oEl; var nAvailableWidth = ModelMenuBar.bChatUnderVideo && ( oEl = GetEl('video_area') ) ? oEl.offsetWidth : hVideoDimensions.width; var sRoomOptions = ''; var sTitleLine = ''; var sMessage = ''; var sTitleLineId = 'title_line_container'; if(Lounge.bIsLoaded && hLoungeUser ) { var sSlimSessions = ''; var sNew = ''; if(hLoungeUser['new_model'] && hLoungeUser['new_model'] <= t.g_hSelf.new_model_days ) { sNew = " *NEW* "; } var sStateMessage = ''; if(hLoungeUser['state'] == 0 ) { 1; } else if(hLoungeUser['state'] == 12 ) { if(hLoungeUser['truepvt'] ) { sStateMessage = "TruePrivate"; } else { sStateMessage = "Private"; } } else if(hLoungeUser['state'] == 13 ) { sStateMessage = "Group"; } else if(hLoungeUser['state'] ) { sStateMessage = "Away"; } if(sStateMessage ) { sStateMessage = "(" + sStateMessage + ")"; }
  if(t.g_hoPlayerWindows[ nBroadcasterId ].presentation_state == FCS.EVSESSION_VOYEUR ) { sRoomOptions += " <div style=\"font-size:13px;padding-top:8px;\"> You are spying on " + FancyUsername(Lounge.nModelId) + ". "; if(nAvailableWidth < 560 ) { sRoomOptions += "<br>"; } 
 if(t.g_hSelf['tokens'] != -5 ) { sRoomOptions += "You have " + t.g_hSelf['tokens'] + " tokens remaining.<br>"; } sRoomOptions += " <a href=# onClick=\"RequestEndSession('voyeur'); return false;\"><b>Click Here</b></a> to end the voyeur session. </div> "; sSlimSessions += "<a href=# onClick=\"RequestEndSession('voyeur'); return false;\"><b>End Spying</b></a>"; SetHTML('room_options', sRoomOptions); if(Lounge.oTimer ) clearTimeout(Lounge.oTimer); } else if(t.g_hoPlayerWindows[ nBroadcasterId ].presentation_state == FCS.EVSESSION_GROUP ) { sRoomOptions += " <div style=\"font-size:12px;padding-top:8px;\"> Watching a Group Show with " + FancyUsername(Lounge.nModelId) + ". "; if(nAvailableWidth < 560 ) { sRoomOptions += "<br>"; } if(t.g_hSelf['tokens'] != -5 ) { sRoomOptions += "You have " + t.g_hSelf['tokens'] + " tokens remaining.<br>"; } sRoomOptions += " <a href=# onClick=\"RequestEndSession('group_show'); return false;\"><b>Click Here</b></a> to exit the Group Show. </div> "; sSlimSessions += "<a href=# onClick=\"RequestEndSession('group_show'); return false;\"><b>Exit Grp</b></a>"; SetHTML('room_options', sRoomOptions ); if(Lounge.oTimer ) clearTimeout(Lounge.oTimer ); } else if ( t.g_hoPlayerWindows[ nBroadcasterId ].presentation_state == FCS.EVSESSION_CLUB ) { sRoomOptions += " <div style=\"font-size:12px;padding-top:8px;\"> " + FancyUsername(Lounge.nModelId) + " Club Show </div> "; } else { if(! t.VideoCycler.hModes[ Lounge.VideoCycler.sMode ] ) { Lounge.VideoCycler.sMode = 'all_available'; } var sCycleMode = t.VideoCycler.hModes[ Lounge.VideoCycler.sMode ].short; sRoomOptions += " <div style=\"font-size:12px;white-space:nowrap;" + ( ( g_UA.mobile ) && ModelMenuBar.bHideOnlineModels ? 'line-height:32px;' : 'line-height:20px;' ) + "\"> "; 
 sRoomOptions += A('tip',{ username: ( t.g_hUsers[Lounge.nModelId] && t.g_hUsers[Lounge.nModelId].username ), broadcaster_id:Lounge.nModelId }) + "Tip</a> "; sRoomOptions += " <a href=# style='text-decoration:none;' onClick=\"return loungeQuickTip.open();\" title=\"Quickly tip the performer\">&#9889;</a> "; sRoomOptions += " | "; if(hLoungeUser['access_level'] == 4 ) { sRoomOptions += " " + A('player',{ broadcaster_id:Lounge.nModelId }) +"Chat Room</a> |  " + A('player',{ broadcaster_id:Lounge.nModelId, target:'new_window'}) +"Popup</a> |  "; } sRoomOptions += " " + A('pm_friend',{ user_id:Lounge.nModelId, username:hLoungeUser['username'], load_video:'false'}) +"PM</a> | " + A('bio',{ broadcaster_id: Lounge.nModelId, username:hLoungeUser['username'] }) + "Profile</a>  "; sRoomOptions += " |  <a href=# onClick=\"Player_popUserMenu_open(" + Lounge.nModelId + ",{ model_menu:1 }); return false;\">Menu</a> "; sRoomOptions += " &nbsp;<img class=\"player_icon icon_friend " + ( hLoungeUser.friend ? 'active' : '' ) + "\" src=\"" + t.g_hPlatform.image_url_cdn + "images/svg/heart.svg\" onMousedown=\"ControlIcon(this,{ param: 'friend', user_id: Lounge.nModelId });\" title=\"" + ( hLoungeUser.friend ? 'Remove' : 'Add' ) + " " + hLoungeUser['username'] + " " + ( hLoungeUser.friend ? 'from' : 'to' ) + " your friends list.\" >"; sRoomOptions += " <img class=\"player_icon icon_bookmark " + ( hLoungeUser.bookmarked ? 'active' : '' ) + "\" src=\"" + "images/svg/bookmark.svg\" onMousedown=\"ControlIcon(this,{ param: 'bookmarked', user_id: Lounge.nModelId });\" title=\"" + ( hLoungeUser.bookmarked ? 'Remove' : 'Add' ) + " " + hLoungeUser['username'] + " " + ( hLoungeUser.bookmarked ? 'from' : 'to' ) + " your bookmarks list.\" >"; var bBell = t.StatusMessaging.servicesByUserId(Lounge.nModelId ).length; sRoomOptions += " <img class=\"player_icon icon_bell " + ( bBell ? 'active' : '' ) + "\" src=\"" + t.g_hPlatform.image_url_cdn + "files/images/svg/bell.svg\" onMousedown=\" Popup_StatusMessaging(" + Lounge.nModelId + "); \" title=\"Receive notifications about " + hLoungeUser['username'] + " \" >"; sRoomOptions += ( nAvailableWidth > 560 ) ? " - " : "<br>"; sRoomOptions += " <a href=# onClick=\"Lounge.VideoCycler.Cycle(0,{ advance: 'back' }); return false;\" title='Previous " + t.g_hPlatform.performer + " according to your " + t.g_hPlatform.performer + " list, or type /prev or /p in the chat room input.'>&laquo; Previous</a> /  <a href=# onClick=\"Lounge.VideoCycler.Cycle(0,{ advance: 'last' }); return false;\" title='Go back to the last " + t.g_hPlatform.performer + " you viewed, or type /last or /l in the chat input.'>Last</a> | " + ( ( g_UA.mobile ) ? '':"<a href=\"#\" onClick=\"PopModelIndex({ mode:'compact', 'lounge_mode':1 }); return false;\">Text</a> |" ) + " <a href=# onClick=\"Lounge.nOffset++;Lounge.VideoCycler.Cycle(0,{ advance: 'next' }); return false;\" title='Next " + t.g_hPlatform.performer + " according to your " + t.g_hPlatform.performer + " list, or type /next or /n in the chat input.'>Next " + t.g_hPlatform.Performer + " &raquo;</a>  <br> Show: <a href=# onClick=\"Lounge.VideoCycler.Mode(); return false;\" title=\"Automatically cycle through chat rooms.\"><span id=lounge_cycler_mode>" + sCycleMode + "</span></a> |  <span title=\"" + ( Lounge.VideoCycler.sToolTip || 'Automatically cycle through video feeds' ) + "\">Auto: <span id=lounge_video_cycler_interval></span></span>\
 "; if(t.g_hSelf['access_level'] == 2 || t.g_hSelf['access_level'] == 5 ) { var sLoungeOptions = ''; if(hLoungeUser && t.g_hSelf['tokens'] > 0 && ! hLoungeUser['truepvt'] ) { var sAdj, sType; if(hLoungeUser['state'] == FCS.FCVIDEO_TX_PVT ) { sType = 'voyeur'; sAdj = 'Private'; } else if(hLoungeUser['state'] == FCS.FCVIDEO_TX_GRP ) { sType = 'group_show'; sAdj = 'Group'; } if(sType ) { var sStyle = t.g_fNoPrivateGroupSupport(Lounge.nModelId, LoadVideo.clientVideo ) ? 'color:#888;' : ''; var sTmp = "<a href=# style=\"" + sStyle + " \" onClick=\"RequestSession('" + sType + "',{ model_id: Lounge.nModelId }); return false;\">"; sLoungeOptions += sTmp + "<b>Spy on " + sAdj + "</b></a>"; sSlimSessions += sTmp + "<b>Spy</b></a>"; } } else if(hLoungeUser && hLoungeUser['state'] == FCS.FCVIDEO_TX_PVT && t.g_hSelf['tokens'] == 0 && ! hLoungeUser['truepvt'] ) { sLoungeOptions += A('purchase') + "Buy tokens to spy!</a>"; }
 if(! sLoungeOptions ) { sLoungeOptions += " <a href=# title=\"More Options\" onClick=\"LoungeOptions.Popup(); return false;\">Lounge Options</a> |  <a href=https://wiki." + t.g_hPlatform.domain + "/wiki/Lounge target=_blank>Help</a>  "; } var sLoungeOptions = "<b>" + t.g_hSelf.tokens + "</b> Tokens (" + A('purchase') + "Buy</a>) | " + sLoungeOptions; sRoomOptions += ( nAvailableWidth > 560 ) ? ( " &nbsp;-&nbsp; " + sLoungeOptions ) : ( "<div>" + sLoungeOptions + "</div>" ); } sRoomOptions += " </div> "; } var sUsername = t.g_hUsers[Lounge.nModelId] ? t.g_hUsers[Lounge.nModelId].username : ''; if(t.g_hPlatform.id == PLAT_CAM ) { } else { var sSlimOptions = "<a href=# onClick=\"Lounge.nOffset++;Lounge.VideoCycler.Cycle(0,{ advance: 'next' }); return false;\" style='white-space:nowrap;text-decoration:none;font-size:18px;' title='Previous " + t.g_hPlatform.performer + " according to your " + t.g_hPlatform.performer + " list, or type /prev or /p in the chat room input.'>&laquo;</a>" + "<div class=slim_spacer></div>" + "<a href=# title=\"Show Expanded Options\" onClick=\"SlimMode(false); return false;\"><img src=\"/files/images/svg/maximize2.svg\" class=\"expand_slim_options slim_mode_toggle\" style=\"height: 13px;\"></a>" + "<div class=slim_spacer></div>"; if(ChatOverlay.is_supported() ) { var bOn = ChatOverlay.bEnabled ? 'off' : 'on'; sSlimOptions += "<img src=\"" + t.g_hPlatform.image_url_cdn + "files/images/svg/overlay" + ( ChatOverlay.bEnabled ? '_off' : '' ) + ".svg\"  class=\"chat_overlay_toggle_slim " + bOn + "\" title=\"Turn chat overlay mode " + bOn + "\" onClick=\"ChatOverlay.toggle(!ChatOverlay.bEnabled);\">" + "<div class=slim_spacer></div>"; } sSlimOptions += "<span class=mute></span>" + "<div class=slim_spacer></div>"; if(sSlimSessions ) { sSlimOptions += sSlimSessions + "<div class=slim_spacer></div>"; } 
 if(t.g_hSelf['access_level'] >= FCS.FCLEVEL_BASIC ) { sSlimOptions += ( t.g_hSelf['access_level'] > FCS.FCLEVEL_BASIC ? A('tip',{ username: ( t.g_hUsers[Lounge.nModelId] && t.g_hUsers[Lounge.nModelId].username ), broadcaster_id:Lounge.nModelId }) : A('premium_feature') ) + "Tip</a>"; sSlimOptions += " <a href=# style='text-decoration:none;' onClick=\"return playerQuickTip.open();\" title=\"Quickly tip the performer\">&#9889;</a> "; } else { sSlimOptions += A('register') + "<b>Register</b></a>"; } sSlimOptions += "<div class=slim_spacer></div>" + "<a href=# onClick=\"Player_popUserMenu_open(" + Lounge.nModelId + ",{ model_menu:1 }); return false;\">Menu</a>" + "<div class=slim_spacer></div>"; var bBell = t.StatusMessaging.servicesByUserId(Lounge.nModelId ).length; sSlimOptions += "<img class=\"nightmode_invert notification_bell_slim\" src=\"" + t.g_hPlatform.image_url_cdn + "files/images/svg/bell.svg\" onMousedown=\" Popup_StatusMessaging(" + Lounge.nModelId + "); \" title=\"Receive notifications about this model.\" style=\"height:16px;width:16px;margin-bottom:-3px;cursor:pointer;opacity:" + ( bBell ? '0.9' : '0.4' ) + ";\"> <div class=slim_spacer></div>"; sSlimOptions +="<span id=lounge_video_cycler_interval_slim></span>"; sSlimOptions += "<a href=# onClick=\"Lounge.nOffset++;Lounge.VideoCycler.Cycle(0,{ advance: 'back' }); return false;\" style='white-space:nowrap;text-decoration:none;font-size:18px;' title='Next " + t.g_hPlatform.performer + " according to your " + t.g_hPlatform.performer + " list, or type /next or /n in the chat input.'>&raquo;</a>" ; } if(t.g_hPlatform.id == PLAT_CAM ) { SetHTML('slim_mode_room_options',sRoomOptions,{ force: true }); } else { SetHTML('slim_mode_room_options',sSlimOptions,{ force: true }); SetHTML('room_options',sRoomOptions,{ force: true }); } SetHTML('title_left',"<a href=# onClick=\" Lounge.VideoCycler.Cycle(0,{ advance: 'back' }); return false;\" style='display:inline-block;width:100%;text-align:left;white-space:nowrap;text-decoration:none;' title='Previous " + t.g_hPlatform.performer + " according to your " + t.g_hPlatform.performer + " list, or type /prev or /p in the chat room input.'>&laquo;</a>",{ force: true }); SetHTML('title_right',"<a href=# onClick=\" Lounge.nOffset++; Lounge.VideoCycler.Cycle(0,{ advance: 'next' }); return false;\" style='display:inline-block;width:100%;text-align:right;white-space:nowrap;text-decoration:none;' title='Next " + t.g_hPlatform.performer + " according to your " + t.g_hPlatform.performer + " list, or type /next or /n in the chat input.'>&nbsp;&raquo;&nbsp;</a>", { force: true }); Lounge.VideoCycler.IntervalControl(); }
 var bInlineTopic = ( SlimMode.enabled && t.g_hUsers[ nUserId ].topic && t.g_hUsers[ nUserId ].state == FCS.FCVIDEO_TX_IDLE ) || nAvailableWidth > 1000 ; if(UCRPlayer.bIsLoaded && UCRPlayer.hRoom.video == 1 ) { sTitleLine = "<span style=\"font-size:16px;" + UCRPlayer.hRoom.name_font_style + "\">" + UCRPlayer.hRoom.name + "</span>"; oEl = GetEl(sTitleLineId); if(oEl ) { oEl.innerHTML = sTitleLine; } } else if(g_sPlayerMode == 'player' ) { { sTitleLine += " <div id=title_line class=title_line style=\"height:29px;line-height:31px;overflow:hidden;position:absolute;top: 0px; width: 100%; \"> "; var sStateMsg = " <span style=\"position:relative;\"><span><img class=title_line_avatar draggable=\"true\" ondragstart=\" t.nDragUserId=" + nUserId + "; \" onContextMenu=\"Player_popUserMenu_open(" + nUserId + ",{ model_menu:1 }); return false;\" onClick=\"Player_popUserMenu_open(" + nUserId + ",{ model_menu:1 }); return false;\" style=\"cursor:pointer;position:absolute;top:-4px;left:0px;border-radius:3px;height:22px;\" src=\"" + AvatarUrl(nUserId,300) + "\" onMouseEnter=\" PopImageHover(event); \" onMouseLeave=\" PopImageHover(event); \" ></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>"; var sSpecialContent=''; if(t.g_hoPlayerWindows[ nBroadcasterId ] && t.g_hUsers[ nUserId ].state > FCS.FCVIDEO_TX_IDLE ) { sStateMsg += t.GetStateMessage(nUserId, t.g_hoPlayerWindows[ nBroadcasterId ].presentation_state, sUsername ); } else { sStateMsg += "<span class=user_style style=\"font-size:15px; cursor:pointer; " + MfcCustomFonts.prototype.get_style(t.g_hUsers[nUserId]) + " \" onClick=\"Player_popUserMenu_open(" + nUserId + ",{ model_menu:1 }); return false;\" >" + t.g_hUsers[ nUserId ].username + "</span>"; var hMarqueeWidths={}; var hSpecialContent={}; hMarqueeWidths['share'] = ( g_hPlatform.id == PLAT_MFC && hUser['share'] && hUser['share']['things'] > 0 ) ? 80 : 0; if(RoomTopic && RoomTopic.hUser && RoomTopic.hUser.share && RoomTopic.hUser.share.tipmenus && t.g_hSelf.access_level > FCS.FCLEVEL_BASIC ) { hMarqueeWidths['tip_menus'] = 60; } if(t.g_hUsers[nUserId]['whiteboard1'] ) { hMarqueeWidths['whiteboard'] = 30; } var nRemainingWidth = ( nAvailableWidth - 200 ); if(hMarqueeWidths['tip_menus'] && ( nRemainingWidth - hMarqueeWidths['tip_menus'] > 0 ) ) { hSpecialContent['tip_menus'] = " <a href=# title=\"View the Tip Menu\" onClick=\" { t.MFCShare_DhtmlMenu({ user_id: " + nUserId + ", thing_type: 'tipmenus', window: window }); } return false; \">Tip Menu</a> &nbsp;"; nRemainingWidth -= hMarqueeWidths['tip_menus']; } if(hMarqueeWidths['whiteboard'] && ( nRemainingWidth - hMarqueeWidths['whiteboard'] > 0 ) ) { hSpecialContent['whiteboard'] = "<a href=# title=\"\" onClick=\" WhiteboardNotice.clickLink({ dhtml_popup: true, user_id: " + nUserId + " }); return false;\" oncontextmenu=\"return false;\">"; if(hMarqueeWidths['share'] + 70 < nRemainingWidth ) { hSpecialContent['whiteboard'] += "Whiteboard"; nRemainingWidth -= 70; } else { hSpecialContent['whiteboard'] += "W.Board"; nRemainingWidth -= 50; } hSpecialContent['whiteboard'] += "</a>"; hSpecialContent['whiteboard'] += " &nbsp;" } if(hMarqueeWidths['share'] && ( nRemainingWidth - hMarqueeWidths['share'] > 0 ) ) { var sToolTip = hUser.username + " has.. \n"; var sNew=''; for(var sK in hUser['share'] ) { if(hUser['share'][ sK ] > 0 && (
 sK == 'albums' || sK == 'clubs' || sK == 'collections' || sK == 'goals' || sK == 'polls' || sK == 'stores' ) ) { var tm; var thing = sK.replace(/s$/,''); var diffInDays = -1; if(tm = hUser['share']['recent_'+thing+'_tm'] ) { var d1 = new Date(tm * 1000); var d2 = new Date(); var utc1 = Date.UTC(d1.getFullYear(), d1.getMonth(), d1.getDate()); var utc2 = Date.UTC(d2.getFullYear(), d2.getMonth(), d2.getDate()); diffInDays = Math.floor((utc2 - utc1) / ( 1000 * 60 * 60 * 24 )); if(! sNew && diffInDays <= 3 ) { sNew = 'NEW ' + thing.toUpperCase(); } } sToolTip += " - " + hUser['share'][ sK ] + " " + sK; if(diffInDays == 0 ) { sToolTip += " (updated today)"; } else if(diffInDays == 1 ) { sToolTip += " (updated " + diffInDays +" day ago)"; } else if(diffInDays > 1 && diffInDays < 7 ) { sToolTip += " (updated " + diffInDays +" day ago)"; } sToolTip += "\n"; } } sToolTip += "on MFCShare"; hSpecialContent['share'] = "<span style='margin:0px;' onClick=\" if(event.button==2) { t.MFCShare_DhtmlMenu({ user_id: " + parseInt(nUserId) + ", window: window }); return false; } \">"; hSpecialContent['share'] += "<a href=\"//share." + t.g_hPlatform.domain + "/" + t.g_hUsers[ nUserId ].username + "\" rel='noopener noreferrer' target='_blank' title=\"" + sToolTip + "\">"; hSpecialContent['share'] += "MFCShare"; if(sNew ) { hSpecialContent['share'] += "<span class=room_header_share_new>" + sNew + "</span>"; } hSpecialContent['share'] += "</a>"; hSpecialContent['share'] += "</span> "; nRemainingWidth -= hMarqueeWidths['tip_menus']; } sSpecialContent += hSpecialContent['tip_menus'] || ''; sSpecialContent += hSpecialContent['whiteboard'] || ''; sSpecialContent += hSpecialContent['share'] || ''; } if(1 || sStateMsg && sSpecialContent ) { sTitleLine += " <table class=title_line_table id=title_line_table border=0 style=\"display:inline-block;" + ( SlimMode.enabled && t.g_hUsers[nUserId].topic ? "width:100%;" : "" ) + "\"> <tr> "; if(Lounge.bIsLoaded ) { sTitleLine += "<td style=\"line-height:20px;white-space:nowrap;padding-right:5px;\">"; if(UCRPlayer.bIsLoaded && UCRPlayer.hRoom ) sTitleLine += "<span style=\"" + UCRPlayer.hRoom.name_font_style + "\"><b>" + UCRPlayer.hRoom.name + "</b></span>"; else sTitleLine += "<b>" + t.g_hUsers[ nBroadcasterId ]['username'] + "</b>"; sTitleLine += "&nbsp;&nbsp;</td>"; }
 if(sStateMsg ) { sTitleLine += " <td style=\"line-height:20px;white-space:nowrap;padding-right:10px;\"> " + sStateMsg + " </td> "; } { sTitleLine += " <td class=inline_topic_container id=inline_topic_container style=\"display:" + ( SlimMode.enabled && t.g_hUsers[nUserId].topic ? '':'none' ) + "; width:100%; position:relative; -webkit-mask-image: linear-gradient(to right, #000 90%, transparent 100%);\"> <div id=inline_topic_text class=user_style style=\"display:inline-block;overflow:hidden;white-space:nowrap;height:14px;line-height:14px;position:absolute;top:5px;font-size:12px;" + MfcCustomFonts.prototype.get_style(hUser) + "\" > " + ( t.g_hUsers[nUserId] ? RoomTopic.topic_html().replace(/<wbr>/ig,'') : '' ) + " </div> </td> "; } if(sSpecialContent ) { sTitleLine += " <td align=right oncontextmenu=\"return false;\" style=\"line-height: 20px;white-space:nowrap;font-size:11px;font-weight:bold;\"> " + sSpecialContent + " </td> "; } sTitleLine += " </tr> </table> "; } else { sTitleLine += sStateMsg; } } sTitleLine += " </div> "; oEl = GetEl(sTitleLineId); if(oEl ) { if(! DivSwapEffect({ copy_class: 'title_line',
 container: title_line_container, html: sTitleLine, speed: hOptions.auto_advance ? 1 : 0.2 }) ) { oEl.innerHTML = sTitleLine; } } } if(UCRPlayer.bIsLoaded && UCRPlayer.hRoom.video == 1 ) { sRoomOptions += t.g_hUsers[ UCRPlayer.hRoom.originator_id ]['username'] + "'s Webcam"; SetHTML('room_options',sRoomOptions); } else if(g_sPlayerMode == 'player' && ! Lounge.bIsLoaded ) { if(t.location.search.indexOf('show_video_server') > -1 ) { sRoomOptions += "<span style=\"font-size:10px;font-weight:bold;color:red;\">Video Server: " + hUser['camserv'] + "</span> "; } var sAutoNextTitle = ''; if(AutoNext.isActive() ) { sAutoNextTitle = AutoNext.sToolTip || ''; } else { sAutoNextTitle = 'Automatically click through to the next chat room.'; } sRoomOptions += "<div style='line-height:18px;display:inline-block;'>"; sSlimSessions = ''; if(t.g_hSelf['access_level'] > 0 ) { if(t.g_hPlatform.id == PLAT_CAM ) { sRoomOptions += "Leave <span class=user_style style=\"" + MfcCustomFonts.prototype.get_style(hUser) + "\">" + hUser.username + "</span> a "; } if(t.g_hSelf['access_level'] > 1 ) { sRoomOptions += A('tip',{ username: hUser.username, broadcaster_id:nBroadcasterId }); } else { sRoomOptions += A('premium_feature'); } sRoomOptions += "Tip</a>";
 sRoomOptions += " <a href=# style='text-decoration:none;' onClick=\"return playerQuickTip.open();\" title=\"Quickly tip the performer, or type /tip into the chat input\">&#9889;</a> "; sRoomOptions += " | "; var oTime = new Date(); if(! t.g_hoPlayerWindows[ nBroadcasterId ] || t.g_hPlatform.id == PLAT_CAM ) { 1; } else if(t.g_hoPlayerWindows[ nBroadcasterId ].presentation_state == FCS.EVSESSION_PRIVATE && t.IsSessionState(hUser['state'] ) && 10000 > oTime.getTime() - FcAcceptPrivate.nPrivateTimer ) { sRoomOptions += "<span style=\"color:gray;\"><b>End Private Show</b></span>"; } else if(t.g_hoPlayerWindows[ nBroadcasterId ].presentation_state == FCS.EVSESSION_PRIVATE && t.IsSessionState(hUser['state'] ) ) { sRoomOptions += "<a href=# onClick=\"RequestEndSession('private'); return false;\"><b>End Private Show</b></a>"; sSlimSessions += "<a href=# onClick=\"RequestEndSession('private'); return false;\"><b>Exit Show</b></a>"; } else if(hUser['token_session_disable'] & FCS.FCNOSESS_PVT && hUser['token_session_disable'] & FCS.FCNOSESS_TRUEPVT ) { sRoomOptions += "<span style=\"color:#888;\" title='The " + t.g_hPlatform.performer + " has disabled Private Shows.' >Go Private</span>"; sSlimSessions += "<span style=\"color:#888;\" title='The " + t.g_hPlatform.performer + " has disabled Private Shows..'>Pvt</span>"; } else if(hUser['state'] == FCS.FCVIDEO_TX_IDLE && ( t.g_hSelf['tokens'] > 0 || t.g_hSelf['access_level'] == 1 ) ) { sRoomOptions += "<a href=# onClick=\"RequestSession('private'); return false;\" style=\"white-space:nowrap;" + ( t.g_fNoPrivateGroupSupport(nBroadcasterId, LoadVideo.clientVideo ) ? 'color:#888;':'')+"\" title='Request a Private Show'>" + ( t.g_hSelf.true_private==1 ? 'True Pvt.' : 'Go Private' ) + "</a>"; sSlimSessions += "<a href=# onClick=\"RequestSession('private'); return false;\" style=\"white-space:nowrap;" + ( t.g_fNoPrivateGroupSupport(nBroadcasterId, LoadVideo.clientVideo ) ? 'color:#888;':'')+"\" title='Request a Private Show'>" + ( t.g_hSelf.true_private==1 ? 'TruPvt' : 'Pvt' ) + "</a>"; } else if(t.g_hoPlayerWindows[ nBroadcasterId ].presentation_state == FCS.EVSESSION_VOYEUR && t.IsSessionState(hUser['state'] ) ) { sRoomOptions += "<a href=# onClick=\"RequestEndSession('voyeur'); return false;\"><b>End Spying</b></a>"; sSlimSessions += "<a href=# onClick=\"RequestEndSession('voyeur'); return false;\"><b>End Spying</b></a>"; } else if ( hUser['state'] == FCS.FCVIDEO_TX_PVT && hUser['truepvt'] != 1 && ( t.g_hSelf['tokens'] < 1 || t.g_hSelf['access_level'] == 1 ) ) {
 sRoomOptions += "<span style=\"color:#888;\">Spy on Private</span>"; sSlimSessions += "<span style=\"color:#888;\">Spy</span>"; } else if ( hUser['state'] == FCS.FCVIDEO_TX_PVT && hUser['truepvt'] != 1) { sRoomOptions += "<a href=# onClick=\"RequestSession('voyeur'); return false;\" style=\"white-space:nowrap;"+( t.g_fNoPrivateGroupSupport(nBroadcasterId, LoadVideo.clientVideo ) ? 'color:#888;':'')+"\"><b>Spy on Private</b></a>"; sSlimSessions += "<a href=# onClick=\"RequestSession('voyeur'); return false;\" style=\"white-space:nowrap;"+( t.g_fNoPrivateGroupSupport(nBroadcasterId, LoadVideo.clientVideo ) ? 'color:#888;':'')+"\"><b>Spy</b></a>"; } else if(hUser['truepvt'] ) { sRoomOptions += "<span style=\"color:#888;\" title='True private' >Spy on Private</span>"; sSlimSessions += "<span style=\"color:#888;\" title='True private' >Spy</span>"; } else { sRoomOptions += "<span style=\"color:#888;\" title='Private session not available.' >Go Private</span>"; sSlimSessions += "<span style=\"color:#888;\" title='Private session not available.'>Pvt</span>"; } sSlimSessions += "<div class=slim_spacer></div>"; if ( ( t.g_hoPlayerWindows[ nBroadcasterId ].presentation_state == FCS.EVSESSION_GROUP || t.g_hoPlayerWindows[ nBroadcasterId ].presentation_state == FCS.EVSESSION_CLUB ) && t.IsSessionState(hUser['state'] ) ) { var sAdj = hUser['state'] == FCS.FCVIDEO_TX_CLUB ? 'Club' : 'Group'; var sTmp = "<a href=# onClick=\"RequestEndSession('" + ( hUser['state'] == FCS.FCVIDEO_TX_CLUB ? 'club_show' : 'group_show' ) + "'); return false;\" title='Leave the " + sAdj + " Show'>"; sRoomOptions += " | " + sTmp + "<b>Exit " + sAdj + " Show</b></a> "; sSlimSessions += sTmp + "<b>Exit Show</b></a> "; } else if(hUser['state'] == FCS.FCVIDEO_TX_GRP || hUser['state'] == FCS.FCVIDEO_TX_CLUB ) { var sAdj = hUser['state'] == FCS.FCVIDEO_TX_CLUB ? 'Club' : 'Group'; if(t.g_hSelf['access_level'] == 1 || (hUser['state'] == FCS.FCVIDEO_TX_GRP && t.g_hSelf['tokens'] <= 0) ) { var sTmp = "<span style=\"color:#888;\" title='Premium feature'>"; sRoomOptions += " | " + sTmp + "Join " + sAdj + " Show</span>"; sSlimSessions += sTmp + sAdj + "</span>"; } else {
 var sTmp = "<a href=# onClick=\"RequestSession('" + ( hUser['state'] == FCS.FCVIDEO_TX_CLUB ? 'club_show' : 'group_show' ) + "'); return false;\" style=\"white-space:nowrap;" + ( t.g_fNoPrivateGroupSupport(nBroadcasterId, LoadVideo.clientVideo, ( hUser['state'] == FCS.FCVIDEO_TX_CLUB ? 'club_show' : null ) ) ? 'color:#888;':'')+"\" title='Join the " + sAdj + " Show currently in progress'>"; sRoomOptions += " | " + sTmp + "<b>Join " + sAdj + " Show</b></a>"; if(hUser['state'] == FCS.FCVIDEO_TX_CLUB ) sSlimSessions += sTmp + "<b>Club Show</b></a>"; else sSlimSessions += sTmp + "<b>Join " + sAdj + "</b></a>"; } } else if(hUser['token_session_disable'] & FCS.FCNOSESS_GRP ) { sRoomOptions += " | <span style=\"color:#888;\" title='The " + t.g_hPlatform.performer + " has disabled Group Shows.' >Group</span>"; sSlimSessions += "<span style=\"color:#888;\" title='The " + t.g_hPlatform.performer + " has disabled Group Shows..'>Group</span>"; } else if(hUser['state'] == FCS.FCVIDEO_TX_IDLE && ( t.g_hSelf['tokens'] > 0 || t.g_hSelf['access_level'] == 1 ) ) { sRoomOptions += " | "; var sGrp = ''; if(t.g_hSelf['access_level'] > 1 ) { sGrp = "<a href=\"javascript:GroupShow.ControlPopup();\" title='View Group Show Options' style=\"" + ( t.g_fNoPrivateGroupSupport(nBroadcasterId, LoadVideo.clientVideo ) ? 'color:#888;':'')+"\">"; } else { sGrp = A('premium_feature'); } sRoomOptions += sGrp + "Group<span id=group_show_counter>" + GroupShow.GetCounter() + "</span></a>"; sSlimSessions += sGrp + "Grp<span id=group_show_counter></span>" + GroupShow.GetCounter() + "</a>"; } else { sRoomOptions += " | <span style=\"color:#888;\">Group Show</span>"; sSlimSessions += "<span style=\"color:#888;\">Grp</span>"; } sRoomOptions += hVideoDimensions['height'] > ( 506 / CurrentVideoAspectRatio() ) ? " | " : "<br>"; if(t.g_hSelf['access_level'] > FCS.FCLEVEL_BASIC ) {
 sRoomOptions += A("pm_friend",{ user_id: nBroadcasterId, username: hUser.username }); } else { sRoomOptions += A('premium_feature'); } sRoomOptions += ( ( g_UA.mobile ) ? "Pvt. Msg." : "Pvt. Message" ) + "</a>"; sRoomOptions += " | "; sRoomOptions += A('bio',{ user_id: nBroadcasterId, username: hUser.username }) + "Profile</a>"; if ( hUser['share'] && ( hUser['state'] == FCS.FCVIDEO_OFFLINE || hUser['state'] == FCS.FCVIDEO_RX_IDLE || hUser['state'] == FCS.FCVIDEO_TX_AWAY ) ) { sRoomOptions += " | "; sRoomOptions += "<a href=\"https://share.myfreecams.com/"+hUser.username+"\" target=_blank><img class=\"logo-mfc_share\" style=\"height:11px;width:80px;margin-bottom:-2px;\" src=\"" + t.g_hPlatform.image_url_cdn + "files/images/misc/clear.gif\"></a>"; } sRoomOptions += " | "; sRoomOptions += "<a href=# onClick=\"Player_popUserMenu_open(" + nBroadcasterId + ",{ model_menu:1 }); return false;\" title='Show Options Menu for " + hUser.username + "'>Menu</a>"; sRoomOptions += " &nbsp;<img class=\"player_icon icon_friend " + ( hUser.friend ? 'active' : '' ) + "\" src=\"" + t.g_hPlatform.image_url_cdn + "images/svg/heart.svg\" onMousedown=\"ControlIcon(this,{ param: 'friend' });\" title=\"" + ( hUser.friend ? 'Remove' : 'Add' ) + " this " + t.g_hPlatform.performer + " " + ( hUser.friend ? 'from' : 'to' ) + " your friends list.\" >"; sRoomOptions += " <img class=\"player_icon icon_bookmark " + ( hUser.bookmarked ? 'active' : '' ) + "\" src=\"" + "/images/svg/bookmark.svg\" onMousedown=\"ControlIcon(this,{ param: 'bookmarked' });\" title=\"" + ( hUser.bookmarked ? 'Remove' : 'Add' ) + " this " + t.g_hPlatform.performer + " " + ( hUser.bookmarked ? 'from' : 'to' ) + " your bookmarks list.\" >"; var bBell = t.StatusMessaging.servicesByUserId(nBroadcasterId ).length; sRoomOptions += " <img class=\"player_icon icon_bell " + ( bBell ? 'active' : '' ) + "\" src=\"" + t.g_hPlatform.image_url_cdn + "files/images/svg/bell.svg\" onMousedown=\" Popup_StatusMessaging(" + nBroadcasterId + "); \" title=\"Receive notifications about this model.\" >"; if(t.g_hSelf['access_level'] == 2 || t.g_hSelf['access_level'] == 5 ) { sMessage += "You have <b>" + t.g_hSelf['tokens'] + "</b> tokens. ("; sMessage += A('purchase') + "Buy More Tokens</a>)"; } else if(t.g_hSelf['access_level'] == FCS.FCLEVEL_BASIC && hUser['state'] == FCS.FCVIDEO_TX_PVT ) { sMessage += A('purchase') + "<b>Buy Tokens</b></a> to spy on the show."; } else if(t.g_hSelf['access_level'] == FCS.FCLEVEL_BASIC && hUser['state'] == FCS.FCVIDEO_TX_GRP ) { sMessage += A('purchase') + "<b>Buy Tokens</b></a> to enter Group Show."; } else if(t.g_hSelf['access_level'] == FCS.FCLEVEL_BASIC && hUser['state'] == FCS.FCVIDEO_TX_CLUB ) { sMessage += A('purchase') + "<b>Buy Tokens</b></a> to join Clubs.";
 } else if(t.g_hSelf['access_level'] == FCS.FCLEVEL_BASIC ) { sMessage = A('purchase') + "<b>Buy Tokens</b></a> to become <a href=https://wiki." + t.g_hPlatform.domain + "/wiki/Instructions_and_Features#Premium_member_features target=_blank>Premium</a>."; } } else { sRoomOptions += A('bio',{ user_id: nBroadcasterId, username: hUser.username }) + "View Profile</a> "; sRoomOptions += " | <a href=# onClick=\"Player_popUserMenu_open(" + nBroadcasterId + ",{ model_menu:1 }); return false;\">" + t.g_hPlatform.Performer + " Menu</a>"; sRoomOptions += " | <img class=nightmode_invert src=\"" + t.g_hPlatform.image_url_cdn + "files/images/svg/bell.svg\" onMousedown=\" Popup_StatusMessaging(" + nBroadcasterId + "); \" title=\"Receive notifications about this model.\" style=\"height:16px;margin-bottom:-3px;cursor:pointer;opacity:0.3;\">"; sMessage += A('register') + "<b>Create a Free Account!</b></a>"; } var sPreviousNext=''; if(! t.IsTokenSession(t.g_hoPlayerWindows[ nBroadcasterId ].presentation_state ) ) { sPreviousNext += "<span style='line-height:11px;font-size:19px;vertical-align:-25%;'><a href=# onClick=\"AdvanceRoom('previous'); return false;\" style='white-space:nowrap;text-decoration:none;' title='Previous " + t.g_hPlatform.Performer + "'>&laquo;</a></span> <a href=# onClick=\"AdvanceRoom('previous'); return false;\" style='white-space:nowrap;' title='Previous " + t.g_hPlatform.performer + " according to your " + t.g_hPlatform.performer + " list, or type /prev or /p in the chat room input.'>Previous</a> / "; if(AdvanceRoom.aVisitedModels != undefined && AdvanceRoom.aVisitedModels.length ) { sPreviousNext += "<a href=# onClick=\"AdvanceRoom('last_viewed'); return false;\" style='white-space:nowrap;' title='Go back to the last " + t.g_hPlatform.performer + " you viewed, or type /last or /l in the chat room input.'>Last</a>"; } else { sPreviousNext += "<span style=\"color:gray;text-decoration:underline;\" title='Go back to the last " + t.g_hPlatform.performer + " you viewed, or type /last or /l in the chat input.'>Last</span>"; } sPreviousNext += " / "; if(1 ) sPreviousNext += "<a href=# onClick=\"PopupRoomHistory(); return false;\" style='white-space:nowrap;' title='View recently visited rooms.'>Recent</a>"; else sPreviousNext += "<span style=\"color:gray;text-decoration:underline;\" title='View recently visited rooms.'>Recent</span>"; var sAutoNextControl; if(AutoNext.isActive() ) sAutoNextControl = "<span id=auto_next_control class=highlight_bg >Pause</span>"; else sAutoNextControl = "<span id=auto_next_control>Auto</span>";
 sPreviousNext += " | <a href=# onClick=\"AdvanceRoom('next'); return false;\" style='white-space:nowrap;' title='Next " + t.g_hPlatform.performer + " according to your " + t.g_hPlatform.performer + " list, or type /next or /n in the chat room input.'>Next " + t.g_hPlatform.Performer + "</a> (<a href=# onClick=\" AutoNext.Toggle(); return false; \" title=\"" + sAutoNextTitle + "\" >" + sAutoNextControl + "</span></a>) <span style='line-height:11px;font-size:19px;vertical-align: -25%;'><a href=# onClick=\"AdvanceRoom('next'); return false;\" style='white-space:nowrap;text-decoration:none;' title='Next " + t.g_hPlatform.performer + " according to your " + t.g_hPlatform.performer + " list, or type /next or /n in the chat input.'>&raquo;</a></span>"; } sRoomOptions += "</div>"; if(nAvailableWidth > 1200 ) { sRoomOptions = "<div style=\"padding-top:5px;\">" + sRoomOptions + " " + sMessage + " " + sPreviousNext + "</div>"; } else if(nAvailableWidth > 580 ) { sRoomOptions += "<div style=\"padding-top:8px;\">" + sMessage + " " + sPreviousNext + "</div>"; } else { sRoomOptions += "<div style=\"padding-top:8px;\">" + sMessage + "</div>"; sRoomOptions += "<div style=\"padding-top:8px;\">" + sPreviousNext + "</div>"; } SetHTML('room_options',sRoomOptions,{ force: true }); var sSlimOptions; if(t.g_hPlatform.id == PLAT_CAM ) { var sVideoSizeIcon='minimize-custom'; if(t.g_hSelf['video_width'] ) { sVideoSizeIcon='minimize-custom'; } else if(t.g_hSelf['video_size'] == 1 ) { sVideoSizeIcon='maximize-4'; }  var sSlimOptions = " <div class=cam_slim_mode_room_options> <table border=0 cellspacing= cellpadding=0 width=100%><tr><td align=left nowrap> <a href=# onClick=\"AdvanceRoom('previous'); return false;\" style='white-space:nowrap;text-decoration:none;font-size:18px;' title='Previous " + t.g_hPlatform.performer + " according to your " + t.g_hPlatform.performer + " list, or type /prev or /p in the chat room input.'><img class=slim_menu_icons height=16 src=\"" + t.g_hPlatform.image_url_cdn + "images/flat/stroke/svg/rewind-3.svg\"></a> <a href=# onClick=\"PopupRoomHistory(); return false;\" title='View recently visited rooms.'><img class=slim_menu_icons src=\"" + t.g_hPlatform.image_url_cdn + "images/flat/stroke/svg/history-1.svg\"></a>\
 </td><td align=center valign=bottom nowrap> " + "<img id=toggle_video_cam_model_rooms style=\"height:15px;cursor:pointer;\" onClick=\" RefreshMessageBar.VideoControlPopup(); return false;\" src='" + t.g_hPlatform.image_url_cdn + "images/flat/stroke/svg/video-camera-" + ( ToggleVideo.hVideoDisabled['model_rooms'] ? "x" : "1" ) + ".svg'>" + "<span class=icon_mute></span>" ; sSlimOptions += " </td><td align=center nowrap> "; sSlimOptions += "<a title=\"Open " + hUser.username + "'s profile in a new window.\" target=_blank href=\"//profiles." + t.g_hPlatform.domain + "/" + hUser.username + "\"><img src=\"" + t.g_hPlatform.image_url_cdn + "images/flat/stroke/svg/user-1.svg\" onClick=\"if(IframeContent.resource=='bio' ) IframeContent.loadLast();\" ></a>"; sSlimOptions += ( t.g_hSelf['access_level'] > 1 ? A('tip',{ username: hUser.username, broadcaster_id:nBroadcasterId }) : A('premium_feature') ) + "<img class=slim_menu_icons src=\"" + t.g_hPlatform.image_url_cdn + "images/flat/stroke/svg/gift-2.svg\"></a>" + "<a href=# onClick=\"Player_popUserMenu_open(" + nBroadcasterId + ",{ model_menu:1 }); return false;\"><img class=slim_menu_icons src=\"" + t.g_hPlatform.image_url_cdn + "images/flat/stroke/svg/menu-2.svg\" style=\"margin-bottom: 3px;\" title=\"Show Options Menu for " + hUser.username + "\"></a>" ; sSlimOptions += " </td><td align=center nowrap> "; sSlimOptions += "<img src=\"" + t.g_hPlatform.image_url_cdn + "images/flat/stroke/svg/user-1.svg\" onMousedown=\"ControlIcon(this,{ param: 'friend' });\" title=\"" + ( hUser.friend ? 'Remove' : 'Add' ) + " this " + t.g_hPlatform.performer + " " + ( hUser.friend ? 'from' : 'to' ) + " your friends list.\" style=\"height:16px;cursor:pointer;margin-bottom: -2px;opacity:" + ( hUser.friend ? '1' : '0.5' ) + ";\">" + "<img src=\"" + t.g_hPlatform.image_url_cdn + "images/flat/stroke/svg/bookmark-2.svg\" onMousedown=\"ControlIcon(this,{ param: 'bookmarked' });\" title=\""+ ( hUser.bookmarked ? 'Remove' : 'Add' ) + " this " + t.g_hPlatform.performer + " "+ ( hUser.bookmarked ? 'from' : 'to' ) + " your bookmarks list.\" style=\"height:16px;cursor:pointer;margin-bottom: -2px;opacity:" + ( hUser.bookmarked ? '1' : '0.5' ) + ";\"> "; sSlimOptions += " </td><td align=right nowrap> "; sSlimOptions += ( AutoNext.isActive() ) ? "<img src=\"" + t.g_hPlatform.image_url_cdn + "images/flat/stroke/svg/pause-3.svg\" onClick=\" AutoNext.Toggle();\" style=\"cursor:pointer;height:10px;width:10px;background-color:yellow;margin-bottom: 2px;\" >" : "<img src=\"" + t.g_hPlatform.image_url_cdn + "images/flat/stroke/svg/repeat-1.svg\" onClick=\" AutoNext.Toggle();\" style=\"cursor:pointer;height:16px;width:16px;height:12px; width:12px;margin-bottom: 2px;\" title=\"Automatically cycle through chat rooms.\"> "; sSlimOptions += " <a href=# onClick=\"AdvanceRoom('next'); return false;\" style='white-space:nowrap;text-decoration:none;font-size:18px;' title='Next " + t.g_hPlatform.performer + " according to your " + t.g_hPlatform.performer + " list, or type /next or /n in the chat input.'><img class=slim_menu_icons src=\"" + t.g_hPlatform.image_url_cdn + "images/flat/stroke/svg/fast-forward-3.svg\" height=16 ></a> </td></tr></table> ";
 sSlimOptions += "</div>"; SetHTML('slim_mode_room_options',sSlimOptions,{ force: true }); } else { var sSlimOptions = "<a href=# onClick=\"AdvanceRoom('previous'); return false;\" style='white-space:nowrap;text-decoration:none;font-size:18px;' title='Previous " + t.g_hPlatform.performer + " according to your " + t.g_hPlatform.performer + " list, or type /prev or /p in the chat room input.'>&laquo;</a>" + "<div class=slim_spacer></div>" + "<a href=# onClick=\"SlimMode(false); return false;\" title=\"Show Expanded Options\" class=\"expand_slim_options slim_mode_toggle\"><img src=\"/files/images/svg/maximize2.svg\" class=\"slim_mode_toggle\" style=\"height: 12px; margin-top: -1px; \"></a>" + "<div class=slim_spacer></div>"; if(ChatOverlay.is_supported() ) { sSlimOptions += "<img src=\"" + t.g_hPlatform.image_url_cdn + "files/images/svg/overlay" + ( ChatOverlay.bEnabled ? '_off' : '' ) + ".svg\"  class=\"chat_overlay_toggle_slim\" title=\"Turn chat overlay mode " + ( ChatOverlay.bEnabled ? 'off' : 'on' ) + ".\" onClick=\"ChatOverlay.toggle(!ChatOverlay.bEnabled);\">" + "<div class=slim_spacer></div>"; } sSlimOptions += "<span class=mute></span>" + "<div class=slim_spacer></div>"; if(sSlimSessions ) { sSlimOptions += sSlimSessions + "<div class=slim_spacer></div>"; } if(t.g_hSelf['access_level'] >= FCS.FCLEVEL_BASIC ) { sSlimOptions += ( t.g_hSelf['access_level'] > 1 ? A('tip',{ username: hUser.username, broadcaster_id:nBroadcasterId }) : A('premium_feature') ) + "Tip</a>"; sSlimOptions += " <a href=# style='text-decoration:none;' onClick=\"return playerQuickTip.open();\" title=\"Quickly tip the performer, or type /tip into the chat input\">&#9889;</a> "; } else { sSlimOptions += A('register') + "<b>Register</b></a>"; } sSlimOptions += "<div class=slim_spacer></div>" + "<a href=# onClick=\"Player_popUserMenu_open(" + nBroadcasterId + ",{ model_menu:1 }); return false;\">Menu</a>" + "<div class=slim_spacer></div>"; var bBell = t.StatusMessaging.servicesByUserId(nBroadcasterId ).length; sSlimOptions += "<img class=nightmode_invert src=\"" + t.g_hPlatform.image_url_cdn + "files/images/svg/bell.svg\" onMousedown=\" Popup_StatusMessaging(" + nBroadcasterId + "); \" title=\"\" style=\"height:16px;margin-bottom:-3px;cursor:pointer;opacity:" + ( bBell ? '0.9' : '0.3' ) + ";\">"; sSlimOptions += "<div class=slim_spacer></div>";
  sSlimOptions += ( AutoNext.isActive() ) ? "<img title=\"" + sAutoNextTitle + "\" class=nightmode_invert src=\"" + t.g_hPlatform.image_url_cdn + "files/images/icons/svg/pause.svg\" onClick=\" AutoNext.Toggle();\" style=\"cursor:pointer;height:10px;width:10px;opacity:0.5;margin-right:10px;background-color:yellow;padding:3px;margin-bottom:-3px;\" >" : "<img title=\"" + sAutoNextTitle + "\" class=nightmode_invert src=\"" + t.g_hPlatform.image_url_cdn + "files/images/svg/refresh.svg\" onClick=\" AutoNext.Toggle();\" style=\"cursor:pointer;height:16px;width:16px;opacity:0.8;margin-right:6px;margin-bottom:-3px;\" title=\"Automatically cycle through chat rooms.\">" ; sSlimOptions += "<a href=# onClick=\"AdvanceRoom('next'); return false;\" style='white-space:nowrap;text-decoration:none;font-size:18px;' title='Next " + t.g_hPlatform.performer + " according to your " + t.g_hPlatform.performer + " list, or type /next or /n in the chat input.'>&raquo;</a>" ; SetHTML('slim_mode_room_options',sSlimOptions,{ force: true }); } SetHTML('title_left'," <a href=# onClick=\"AdvanceRoom('previous'); return false;\" style='display:inline-block;width:100%;text-align:left;white-space:nowrap;text-decoration:none;' title='Previous " + t.g_hPlatform.performer + " according to your " + t.g_hPlatform.performer + " list, or type /prev or /p in the chat room input.'>&laquo;</a> ",{ force: true }); SetHTML('title_right',"<a href=# onClick=\"AdvanceRoom('next'); return false;\" style='display:inline-block;width:100%;text-align:right;white-space:nowrap;text-decoration:none;' title='Next " + t.g_hPlatform.performer + " according to your " + t.g_hPlatform.performer + " list, or type /next or /n in the chat input.'>&nbsp;&raquo;&nbsp;</a>",{ force: true }); GroupShow.UpdateCounter(); } if(t.g_hUsers[ nBroadcasterId ].chat_text_color ) { oBGs = document.getElementsByClassName('room_header_bg'); for(var a=0; a < oBGs.length; a++ ) { oBGs[a].style.backgroundColor = t.g_hUsers[ nBroadcasterId ].chat_text_color; } } hOptions.force = 1; RoomTopic.render_topic(hOptions ); DrawMute();
 LayoutSizing.size_chat_area();};RefreshMessageBar.VideoControlPopup = function(){ var sH = ''; var sContext = ( UCRPlayer.bIsLoaded || Lounge.bIsLoaded ) ? 'lounge' : 'model_rooms'; var aVideoWidths = [320,480,640,720,1080]; var aVideoWidthOptions = []; var current = t.g_hSelf['video_width']; for(a=0; a < aVideoWidths.length; a++ ) { if(aVideoWidths[a] == t.g_hSelf['auto_update_livesnaps_persec_'+g_sPlayerMode] ) { current = a; } aVideoWidthOptions.push("<input type=radio name=video_size onChange=\" ToggleSize({ width: this.value }); ToggleVideo.Toggle(1); \" value=" + aVideoWidths[a] + " " + ( ! ToggleVideo.hVideoDisabled[sContext] && aVideoWidths[a] == current ? 'CHECKED' : '' ) + ">" + aVideoWidths[a] + "<span style=\"font-size:11px;\">px</span><br>" ); } sH = " <div style=\"width:300px;font-size: 13px; width: 80px; line-height: 20px;\" > <input type=radio name=video_mode onChange=\" ToggleVideo.Toggle(0); \" value=" + aVideoWidths[a] + " " + ( ! ToggleVideo.hVideoDisabled[sContext] ? 'CHECKED' : '' ) + "><b>On</b><br> <input type=radio name=video_mode onChange=\" ToggleVideo.Toggle(0); \" value=" + aVideoWidths[a] + " " + ( ToggleVideo.hVideoDisabled[sContext] ? 'CHECKED' : '' ) + "><b>Off</b><br> <div style=\"padding-top:10px;font-size:11px;\">Video Size</div> " + aVideoWidthOptions.join('') + " </div> "; g_oDhtmlPopup.open(sH );};var playerQuickTip = new MfcQuickTip({ get_user: function() { return t.g_hUsers[ GetBroadcasterId() ]; }, tip_callback: function(hRes, nTipAmount ) { sMsg = "You have tipped " + nTipAmount + " tokens."; ChatQueue.Format_Append(sMsg, 0 ); }, insuf_tokens_callback: function() { t.A_Click(event,{ 'resource': 'purchase', 'target': 'new_window', 'window_params': { 'force_dhtml_window': 1 } }); }
}); var loungeQuickTip = new MfcQuickTip({ get_user: function() { return t.g_hUsers[ GetBroadcasterId() ]; }}); function ProfilePreview(nUserId ){ if(! nUserId ) { GetBroadcasterId(); } if(typeof(IframeContent.bSinglePage ) == 'undefined' ) { IframeContent.bSinglePage = ! t.g_hSelf.profile_preview_scrollbar || t.g_hSelf.single_page_scroll; } IframeContent('bio',{ user_id: nUserId, username: t.g_hUsers[ nUserId ].username, scrollTo: true });}ProfilePreview.processCss = function(){ ModelMenuBar.Refresh(); var oEl = GetEl('profile_preview_link'); if(oEl ) { if(t.g_hPlatform.id == PLAT_CAM ) oEl.style.opacity = ProfilePreview.linkedToRoom ? '' : '0.6'; else if(t.g_hPlatform.id == PLAT_MFC ) oEl.style.backgroundColor = ProfilePreview.linkedToRoom ? 'yellow' : ''; } oEls = document.getElementsByClassName('profile_preview_icon_cam'); for(var a=0; a < oEls.length; a++ ) { oEls[a].src = t.g_hPlatform.image_url_cdn + "images/flat/stroke/svg/" + ( IframeContent.resource == 'bio' ? 'remove' : 'add' ) + "-user-1.svg"; }};ProfilePreview.linkToRoom = function(bEnabled ){ if(typeof(bEnabled) == 'undefined' ) { ProfilePreview.linkedToRoom = ! ProfilePreview.linkedToRoom; } else { ProfilePreview.linkedToRoom = bEnabled; } if(ProfilePreview.linkedToRoom && ProfilePreview.currentId != g_nBroadcasterId ) ProfilePreview.autoLoad(); ProfilePreview.processCss();};
ProfilePreview.autoLoad = function(nUserId ){ if(typeof(ProfilePreview.enabled ) == 'undefined' ) ProfilePreview.enabled = ( t.g_hSelf.lower_half_controls == 'profile' ); if(IframeContent.resource != 'bio' || ! ProfilePreview.linkedToRoom ) { return; } if(! nUserId ) { nUserId = GetBroadcasterId(); } ProfilePreview(nUserId );};ProfilePreview.linkedToRoom = true;function IframeContent(sResource , hOptions, oEvent ){ hOptions = hOptions || {}; var oResource = g_hResources[ sResource ]; if(! oResource && sResource != 'models' ) { return; } if(IframeContent.config && IframeContent.config.handlers && IframeContent.config.handlers[ sResource ] && IframeContent.config.handlers[ sResource ].fPreLoadPermission && ! IframeContent.config.handlers[ sResource ].fPreLoadPermission(sResource, hOptions, oEvent ) ) { return; } IframeContent.fTitle = null; IframeContent.previous_resource = IframeContent.resource; IframeContent.resource = sResource; IframeContent.history.push({ resource: sResource, options: hOptions }); if(sResource == 'models' ) { IframeContent.close(); LayoutSizing.size_online_model_area(); OnlineBroadcasterList.Refresh('reset'); return; } IframeContent.current_options = {}; for(var k in hOptions ) { IframeContent.current_options[k] = hOptions[k]; }
 IframeContent.enabled = true; if(ModelMenuBar.bHideOnlineModels ) { ModelMenuBar.bHideOnlineModels = 0; ModelMenuBar.HideRevealOnlineBroadcasters(); } var oEl = GetEl('online_broadcasters_container_top_td'); if(oEl ) { oEl.style.display = 'none'; } if(oEl = GetEl('lower_half_controls') ) { oEl.style.display = 'block'; } var sUrl = MfcStringUtilities.parse_template(oResource.page,hOptions); if(sResource == 'mfc_share_embed' && t.NightMode_Top.enabled ) { sUrl += ( sUrl.indexOf('?') > -1 ? '&' : '?' ) + 'ui_theme=dark'; } if(IframeContent.config && IframeContent.config.handlers && IframeContent.config.handlers[ IframeContent.resource ] ) { if(IframeContent.config.handlers[ IframeContent.resource ].fTitle ) { IframeContent.fTitle = function() { return IframeContent.config.handlers[ IframeContent.resource ].fTitle(hOptions ); }; } if(IframeContent.config.handlers[ IframeContent.resource ].fQueryString ) { sUrl += sUrl.indexOf('?') > -1 ? '&' : '?'; sUrl += IframeContent.config.handlers[ IframeContent.resource ].fQueryString(hOptions ); } clearTimeout(IframeContent.nTimer_stateMonitor ); if(IframeContent.config.handlers[ IframeContent.resource ].fStateMonitor ) { IframeContent.nTimer_stateMonitor = setInterval(function() { try { var fStateMonitor; if(fStateMonitor = IframeContent.config.handlers[ IframeContent.resource ].fStateMonitor ) { fStateMonitor(hOptions ); } } catch(e){ console.log(e); clearTimeout(IframeContent.nTimer_stateMonitor ); } },250); } } var oEl = GetEl('iframe_content_container'); if(oEl )
 { var siFrameProperties=''; if(sResource == 'bio' ) { siFrameProperties = " sandbox=\"allow-popups allow-popups-to-escape-sandbox allow-modals allow-scripts allow-forms allow-same-origin\" "; } oEl.innerHTML = " <iframe id=iframe_content_iframe name=iframe_content_iframe border=0 framespacing=0 frameborder=0 width=100% height=100%  allowfullscreen=\"allowfullscreen\"  src=\"" + sUrl + "\" " + siFrameProperties + " style=\"border-top-left-radius:5px;border-top: 1px solid #66666644;\" ></iframe> "; oEl.style.display = 'block'; } IframeContent.processCss(); var oLowerHalfEl = GetEl('lower_half_controls_select'); if(oLowerHalfEl ) { oLowerHalfEl.value = sResource; } IframeContent.closeHandlers(); IframeContent.openHandlers(); }IframeContent.nTimer_stateMonitor = 0;IframeContent.resource = 'models';IframeContent.history = [];IframeContent.config = { handlers: { 'whiteboard': { fQueryString: function() { var nUserId = GetBroadcasterId(); return "show_title=1&user_id=" + nUserId + "&username=" + ( t.g_hUsers[nUserId] && t.g_hUsers[nUserId].username ) + "&channel=" + PublicChannel(nUserId ) + "&vcc=" + t.g_nVcc; }, fOpen: function() { var oEl = GetEl('online_broadcasters_container'); if(oEl.offsetHeight < 300 && oEl.offsetHeight > 0 && ! SlimMode.enabled ) { SlimMode.enabled = true; SlimMode.process(); }
 var nUserId = GetBroadcasterId(); if(! t.g_hUsers || ! t.g_hUsers[nUserId]['whiteboard1'] ) { IframeContent.loadLast(); } }, fAutoLoad: function(opts ) { IframeContent('whiteboard',{ user_id: GetBroadcasterId() }); } }, 'mfc_share_embed': { fAutoLoad: function(hOptions ) { hOptions = hOptions || {}; var nUserId = GetBroadcasterId(); if(! t.g_hUsers[nUserId] ) { return; } else if(t.g_hUsers[nUserId] && t.g_hUsers[nUserId]['share'] && t.g_hUsers[nUserId]['share']['albums'] > 0 ) { var sUsername = t.g_hUsers[ GetBroadcasterId() ].username; IframeContent('mfc_share_embed',{ username: sUsername, path: sUsername }); } else { IframeContent.loadLast(); } } }, 'pm_friend': { fTitle: function(hOptions ) { var nUserId = GetBroadcasterId(); if(! t.g_hUsers[nUserId] ) { return; } var nUserId = IframeContent.current_options && IframeContent.current_options.user_id; if(! nUserId ) { return ''; } var hUser = t.g_hUsers[ nUserId ]; if(! hUser ) { return ''; } return " Private Message with <a href=# onClick=\"Player_popUserMenu_open(" + nUserId + ",{ model_menu:1 }); return false;\"> <span class=user_style style=\"" + MfcCustomFonts.prototype.get_style(hUser || {} ) + "\">" + hUser.username + "</span></a> " + t.A('pm_friend',{ user_id: nUserId, load_video: 1}) + "<img src=\"" + t.g_hPlatform.image_url_cdn + "files/images/icons/png/popout.16x16.png\" style=\"margin-bottom:0px;cursor:pointer;\"></a> "; }, fPreLoadPermission: function(sResource, hOptions, oEvent ) { hOptions = hOptions || {}; var nUserId = GetBroadcasterId(); if(t.g_hoPMWindows[ nUserId ] && oEvent ) { try { t.g_hoPMWindows[ nUserId ].window.g_bCloseWindow = true; } catch(e) { console.log(e); } } else if(t.g_hoPMWindows[ nUserId ] ) { try { t.g_hoPMWindows[ nUserId ].window.focus(); } catch(e) { console.log(e); } return false; } return true; }, fStateMonitor: function(hOptions ) { try { var oFrame; if(oFrame = window.frames['iframe_content_iframe'] ) if(oFrame.g_bRedundantPM === true ) { IframeContent.loadLast(); } } catch(e) { console.log(e); } }, fQueryString: function(hOptions ) { hOptions.embeded_mode = true; var sQS=''; for(var k in hOptions ) { sQS += k + '=' + encodeURIComponent(hOptions[k]) + '&'; } return sQS; }, fAutoLoad: function(hOptions ) { hOptions = hOptions || {}; if(t.g_hSelf['iframe_content_stay_with_model'] ) { return; }
 if(Lounge.bIsLoaded ) { IframeContent('models'); return; } var nUserId = GetBroadcasterId(); if(! t.g_hoPMWindows[ nUserId ] ) { var sUsername = t.g_hUsers[ nUserId ] && t.g_hUsers[ nUserId ].username; IframeContent('pm_friend',{ user_id: nUserId, username: sUsername, load_video: 0, embeded_mode: 1 }); } } }, 'mfc_social_embed': { fAutoLoad: function(hOptions ) { hOptions = hOptions || {}; var nUserId = ( GetBroadcasterId() ) ; if(! t.g_hUsers[nUserId] ) { return; } else if(t.g_hUsers[nUserId] && t.g_hUsers[nUserId]['social'] && t.g_hUsers[nUserId]['social']['uname'] ) { var sUsername = t.g_hUsers[ GetBroadcasterId() ].username; IframeContent('mfc_social_embed',{ username: sUsername, path: sUsername }); } else { IframeContent.loadLast(); } } }, 'user_notepad': { fQueryString: function() { var nUserId = GetBroadcasterId(); return "layout=minimal&load_user_id=" + nUserId + "&username=" + ( t.g_hUsers[nUserId] && t.g_hUsers[nUserId].username ); }, fAutoLoad: function() { var nUserId = GetBroadcasterId(); if(t.g_hUsers && t.g_hUsers[ nUserId ]['notes'] )
 IframeContent('user_notepad',{ load_user_id: nUserId }); else IframeContent.loadLast(); } }, 'bio': { fOpen: function() { var oEl = GetEl('online_broadcasters_container'); if(oEl.offsetHeight < 300 && oEl.offsetHeight > 0 && ! SlimMode.enabled ) { SlimMode.enabled = true; SlimMode.process(); } ProfilePreview.processCss(); }, fClose: ProfilePreview.processCss, fAutoLoad: ProfilePreview.autoLoad } }};IframeContent.closeHandlers = function(){ if(IframeContent.config && IframeContent.config.handlers && IframeContent.config.handlers[ IframeContent.previous_resource ] && IframeContent.config.handlers[ IframeContent.previous_resource ].fClose ) { IframeContent.config.handlers[ IframeContent.previous_resource ].fClose(); }};IframeContent.openHandlers = function(){ if(IframeContent.config && IframeContent.config.handlers && IframeContent.config.handlers[ IframeContent.resource ] && IframeContent.config.handlers[ IframeContent.resource ].fOpen ) { IframeContent.config.handlers[ IframeContent.resource ].fOpen(); }};IframeContent.processCss = function(){ ModelMenuBar.Refresh(); var oEl = GetEl('iframe_content_iframe');
 if(oEl ) { oEl.style.paddingTop = IframeContent.resource == 'bio' || IframeContent.resource == 'whiteboard' || IframeContent.resource == 'mfc_share_embed' || IframeContent.resource == 'mfc_social_embed' || IframeContent.resource == 'pm_friend' ? '0px' : '28px'; } var oEl = GetEl('iframe_content_close'); if(oEl ) { if(IframeContent.resource == 'pm_friend' || IframeContent.resource == 'user_notepad' ) { oEl.style.right = '2px'; } else { oEl.style.right = '20px'; } } var oEl = GetEl('iframe_content_container'); if(oEl ) { oEl.style.height = t.g_hSelf.single_page_scroll || IframeContent.bSinglePage ? '20000px' : '100%'; }};IframeContent.close = function(){ if(t.g_hSelf.hide_online_models && ! ModelMenuBar.bHideOnlineModels ) { ModelMenuBar.bHideOnlineModels = 1; ModelMenuBar.HideRevealOnlineBroadcasters(); } var oEl = GetEl('online_broadcasters_container_top_td'); if(oEl ) { oEl.style.display = 'block'; } var oEl = GetEl('iframe_content_container'); if(oEl ) { oEl.style.display = 'none'; oEl.innerHTML = ''; } var oEl = GetEl('lower_half_controls_select'); if(oEl ) { oEl.value = 'models'; }
 if(ModelMenuBar.bHideOnlineModels && ( oEl = GetEl('lower_half_controls') ) ) { oEl.style.display = 'none'; } t.UserExtensions.Write('lower_half_controls', 'models' ); IframeContent.enabled = false; IframeContent.processCss(); IframeContent.closeHandlers();};IframeContent.loadLast = function(){ var hOptions = {}; var sFirstQualifiedResourse, hOptions; for(var a = IframeContent.history.length-1; a > 0; a-- ) { if(IframeContent.history[a].resource != IframeContent.resource ) { sFirstQualifiedResourse = IframeContent.history[a].resource; hOptions = IframeContent.history[a].options; IframeContent.history = IframeContent.history.slice(0,a); break; } } if(! sFirstQualifiedResourse ) { sFirstQualifiedResourse = 'models'; } IframeContent(sFirstQualifiedResourse, hOptions );};IframeContent.SetSinglePage = function(bMode ){ if(typeof(bMode) != 'undefined' ) { IframeContent.bSinglePage = bMode; t.UserExtensions.Write('profile_preview_scrollbar', bMode ? 0 : 1 ); } var oEl = GetEl('profile_preview_single_page_icon'); if(oEl ) { oEl.src = t.g_hPlatform.image_url_cdn + 'files/images/icons/svg/' + ( IframeContent.bSinglePage ? 'no_merge.svg' : 'merge.svg' ); oEl.title = IframeContent.bSinglePage ? 'Un-Merge the Chat Room and Profile / 2 Independent Scroll Bars' : 'Merge Chat Room and Profile into a Single Page / Single Scroll'; } var oEl = GetEl('iframe_content_container'); if(oEl ) { oEl.style.height = t.g_hSelf.single_page_scroll || IframeContent.bSinglePage ? '20000px' : '100%'; }
};IframeContent.autoLoad = function(nUserId ){ if(IframeContent.config && IframeContent.config.handlers && IframeContent.config.handlers[ IframeContent.resource ] && IframeContent.config.handlers[ IframeContent.resource ].fAutoLoad ) { setTimeout(()=>{ IframeContent.config.handlers[ IframeContent.resource ].fAutoLoad(); }, AutoNext.bRunning ? 2500 : 1000 ); }};IframeContent.StayWithModel = function(bFlag ){ t.g_hSelf['iframe_content_stay_with_model'] = bFlag ? 1 : 0; var oCB; if(oCB = GetEl('iframe_content_stay_with_model_checkbox') ) oCB.checked = bFlag;};IframeContent.enabled = false;function ProcessSinglePageScrolling(){ mfcBroadcasterDisplay.DynamicScroll_JumpTo({ start: 0, end: 200 }); GetEl('online_broadcasters_container').scrollTop = 0; LayoutSizing.size_online_model_area(); OnlineBroadcasterList.Refresh('reset'); IframeContent.SetSinglePage(t.g_hSelf.single_page_scroll ); IframeContent.processCss();}function Popup_StatusMessaging(nUserId ){ Popup_StatusMessaging.popup = new MfcDhtmlPopup({ window: window }); Popup_StatusMessaging.popup.zIndex = g_oDhtmlPopup.zIndex - 1; var sH = "<div style=\"padding-top:20px;white-space:nowrap;height:130px;width:270px;\" id=Popup_StatusMessaging_container></div>"; Popup_StatusMessaging.popup.open(sH,{ no_close_on_mouseout: true, provide_close_button: true }); t.StatusMessaging.getHtml({ user: t.g_hUsers[nUserId], callback: Popup_StatusMessaging.getHTML_callback, dhtml_popup: Popup_StatusMessaging.popup });}Popup_StatusMessaging.getHTML_callback = function(sH ){
 Popup_StatusMessaging.popup.update(sH);};function PopupRoomHistory(){ PopupRoomHistory.popup = new MfcDhtmlPopup({ mfcMouseTracker: g_oMouseTracker, mfcGraphics: g, extra_content_class: 'video_controls' }); PopupRoomHistory.popup.zIndex = g_oDhtmlPopup.zIndex - 1; var el = document.createElement('div'); el.innerHTML = PopupRoomHistory.getHTML(); PopupRoomHistory.popup.open(el.innerHTML,{ no_close_on_mouseout: true, provide_close_button: true });}PopupRoomHistory.update = function(){ PopupRoomHistory.popup.update(PopupRoomHistory.getHTML() );};PopupRoomHistory.getHTML = function(){ var sHtml = t.ModelHistory.GetHtml({ column_rollover: 4, numbered: true, width: ' ' }); return ( "<div style=\"width:180px;\">" + "<span id='menu_extras_heading' class=mini_popup_header >Recent Rooms</span><br><br>" + sHtml + "<div style=\"margin-top:10px;font-size:10px;\">" + A('activity_log') + "<img src=" + t.g_hPlatform.image_url_cdn + ( t.g_hPlatform.id == PLAT_MFC ? "files/images/icons/svg/open_door_history.svg" : "images/flat/stroke/svg/history-1.svg" ) + " height=16 style='margin-right:4px;margin-bottom:-4px'>Full Room History</a></div>" + "</div>" );};function ControlIcon(oEl, hOpt ){ hOpt = hOpt || {}; if(! hOpt.param ) { return; } if(! hOpt.user_id ) { hOpt.user_id = g_nBroadcasterId; } if(hOpt.param == 'friend' || hOpt.param == 'bookmarked' ) { if(hOpt.param == 'friend' ) { t.TxAddRemove('friend', hOpt.user_id, t.g_hUsers[ hOpt.user_id ].friend ? 'remove' : 'add' ); } else if(hOpt.param == 'bookmarked' )
 { if(t.g_hUsers[ hOpt.user_id ].bookmarked ) t.Bookmarks.Delete(hOpt.user_id ); else t.Bookmarks.Add(hOpt.user_id ); } if(oEl ) { if ( t.g_hUsers[ hOpt.user_id ][ hOpt.param ] || !oEl.classList.contains('active') ) { oEl.classList.add('active'); oEl.title = oEl.title.replace(/Add/,'Remove'); oEl.title = oEl.title.replace(/ to /,' from '); } else { oEl.classList.remove('active'); oEl.title = oEl.title.replace(/Remove/,'Add'); oEl.title = oEl.title.replace(/ from /,' to '); } } t.Bookmarks.Render(); t.FriendsList.Load({ force: 1 }); OnlineBroadcasterList.Refresh('reset'); }}var AutoNext = { bRunning: false, nFallbackId: 0};AutoNext.Toggle = function(bMode ){ AutoNext.bRunning = ( bMode != undefined ) ? bMode : ( ! AutoNext.bRunning ); if(AutoNext.bRunning == false ) { clearTimeout(AutoNext.oTimer); AutoNext.bRunning = false; RefreshMessageBar(); } else { AutoNext.bRunning = false;
 AutoNext.OpenOptionPopup(); }};AutoNext.isActive = function(){ return AutoNext.bRunning && ! Lounge.bIsLoaded;};AutoNext.hModes = t.VideoCycler.hModes;AutoNext.OpenOptionPopup = function(){ DhtmlPrompt({ popup_options: { extra_content_class: 'video_controls' }, prompt_type: 'confirm', message: AutoNext.DrawOptionPopup(), callback: AutoNext.Start, ok_label: 'Start' });};AutoNext.DrawOptionPopup = function(){ if(! t.g_hSelf.auto_next_mode ) { t.g_hSelf.auto_next_mode = 'all_available'; } var aModes = new Array(); for(var sMode in AutoNext.hModes ) { var long = t.VideoCycler.hModes[sMode].long; long = long.replace(/Custom Selection/, t.A('custom_alerts') + 'Custom Selection</a>'); aModes.push(" <tr> <td width=50 align=center> <input value=1 type=radio name=video_cycler_mode id=video_cycler_mode" + sMode + " value=" + sMode + " " + ( t.g_hSelf.auto_next_mode == sMode ? 'CHECKED' : '' ) + " onClick=\" AutoNext.Select('auto_next_mode', '" + sMode + "' ); \" > </td> <td style=\"font-size:13px;cursor:pointer;\" onClick=\" GetEl('video_cycler_mode" + sMode + "').click();\">" + long + "</td> </tr> "); } if(! t.g_hSelf.auto_next_seconds ) { t.g_hSelf.auto_next_seconds = 30; } var aModelListRefreshSeconds = new Array(); var aSeconds = [5,10,15,30,60,120]; for(var nK=0; nK<aSeconds.length; nK++ ) { aModelListRefreshSeconds.push("<option " + ( t.g_hSelf.auto_next_seconds == aSeconds[nK] ? 'SELECTED' : '' ) + " value=" + aSeconds[nK] + ">" + aSeconds[nK] + "</option>"); } var sHtml = " <div style=\"width:400px;font-size:13px;\"> <b>Auto Room Cycle:</b><br><br> \
 <table width=370> " + aModes.join('') + " </table> <br><br> Advance to the next room every:  <select onChange=\" AutoNext.Select('auto_next_seconds', this.value );\"> " + aModelListRefreshSeconds.join('') + " </select> seconds. </div> "; return sHtml;};AutoNext.Select = function(sKey, sValue ){ t.UserExtensions.Write(sKey, sValue );};AutoNext.Start = function(sKey, sValue ){ g_oDhtmlPopup.close(); AutoNext.bRunning = true; RefreshMessageBar(); AutoNext.NextRoom();};AutoNext.NextRoom = function(sMode ){ if(ClickDragVideo.resizeMode == 'video' ) { clearTimeout(AutoNext.oTimer ); AutoNext.oTimer = setTimeout(AutoNext.NextRoom, 500 ); return; } var nMSecs = ( t.g_hSelf.auto_next_seconds || 30 ) * 1000; if(t.g_hSelf.auto_next_mode == 'trending' && sMode != 'delayed' ) { GetSortedModelList.TrendingRooms.KeepCurrent(nMSecs ); setTimeout(function() { AutoNext.NextRoom('delayed'); }, GetSortedModelList.TrendingRooms.trending.length > 0 ? 200 : 1000 ); return; } aSortedList = GetSortedModelList(t.g_hSelf.auto_next_mode, { use_sort_key: 1 } ); var nNextModelId; for(var nK=0; nK < aSortedList.length; nK++ ) {
 nUserId = aSortedList[nK]; if(nUserId == g_nBroadcasterId ) { if(sMode == 'previous' ) nNextModelId = aSortedList[nK-1] ? aSortedList[nK-1] : aSortedList[ aSortedList.length-1 ]; else nNextModelId = aSortedList[nK+1] ? aSortedList[nK+1] : aSortedList[0]; } if(nNextModelId ) { break; } } if(! nNextModelId ) { nNextModelId = aSortedList[0]; } if(nNextModelId && nNextModelId != g_nBroadcasterId ) { LoadPlayer('player', { broadcaster_id: nNextModelId, auto_advance: 1 } ); } if(nNextModelId && ( nK < aSortedList.length ) ) { var long = t.VideoCycler.hModes[t.g_hSelf.auto_next_mode] && t.VideoCycler.hModes[t.g_hSelf.auto_next_mode].long; AutoNext.sToolTip = `Viewing ${long}, feed #${nK+1} out of ${ aSortedList.length } feeds`; } clearTimeout(AutoNext.oTimer ); AutoNext.oTimer = setTimeout(AutoNext.NextRoom, nMSecs );};var LoungeOptions = {};LoungeOptions.Popup = function(){ var sHtml = " <div style=\"padding-bottom:10px;\"> <span class=mini_popup_header>More Lounge Options</span> [ <a href='javascript:LoungeOptions.Restore();' style='font-size:11px;'>Restore Defaults</a> ] </div> <div class=model_list_settings_box_on_white> <table width=480 height=200 cellpadding=4 cellspacing=0> <tr class=toggle_checkbox > <td width=30 valign=top align=center style='padding-top:8px;'> <input value=4 id=lounge_auto_click_link_1 type=checkbox " + ( Lounge.hSettings['lounge_auto_click_link'] & LOUNGE_MASK_LOUNGE_MODE ? 'CHECKED' : '' ) + " onClick=\" LoungeOptions.Save(4,this.checked) \" > </td> <td onClick=\"oEl=GetEl('lounge_auto_click_link_1'); oEl.checked = ! oEl.checked; LoungeOptions.Save(LOUNGE_MASK_LOUNGE_MODE,oEl.checked); \" style=\"cursor:pointer;\"> <b>Lounge-Mode " + t.g_hPlatform.Performer + " List</b><br> <span style=font-size:11px;>Clicking a " + t.g_hPlatform.performer + " in the " + t.g_hPlatform.Performer + " List will load the " + t.g_hPlatform.performer + "'s feed in the lounge, not go to her room. Click her Menu to go to her room. <br><b>Note:</b> With this option, click \"Previews\" at the top of the " + t.g_hPlatform.performer + " list.</span> </td> </tr> <tr class=toggle_checkbox >\
 <td valign=top align=center style='padding-top:8px;'> <input value=1 id=lounge_auto_click_link_2 type=checkbox " + ( Lounge.hSettings['lounge_auto_click_link'] & LOUNGE_MASK_AUTO_CLICK ? 'CHECKED' : '' ) + " onClick=\" LoungeOptions.Save(1,this.checked) \" > </td> <td onClick=\"oEl=GetEl('lounge_auto_click_link_2'); oEl.checked = ! oEl.checked; LoungeOptions.Save(LOUNGE_MASK_AUTO_CLICK,oEl.checked); \" style=\"cursor:pointer;\"> <b>Auto-Click</b><br> <span style=font-size:11px;>Automatically load the feed of any " + t.g_hPlatform.performer + " whose name is mentioned in chat (as if you clicked on the name).</span> </td> </tr> <tr class=toggle_checkbox > <td valign=top align=center style='padding-top:8px;'> <input value=2 id=lounge_auto_click_link_3 type=checkbox " + ( Lounge.hSettings['lounge_auto_click_link'] & LOUNGE_MASK_NO_CAMSNAPS ? 'CHECKED' : '' ) + " onClick=\" LoungeOptions.Save(2,this.checked) \" > </td> <td onClick=\"oEl=GetEl('lounge_auto_click_link_3'); oEl.checked = ! oEl.checked; LoungeOptions.Save(LOUNGE_MASK_NO_CAMSNAPS,oEl.checked); \" style=\"cursor:pointer;\"> <b>Disable Cam Previews</b><br> <span style=font-size:11px;>When a " + t.g_hPlatform.performer + "'s name is mentioned in chat, do NOT show a cam preview next to her name.</span></td> </tr> </table> </div> "; if(LoungeOptions.popup && LoungeOptions.popup.bIsOpen ) { LoungeOptions.popup.update(sHtml ); } else { LoungeOptions.popup = new MfcDhtmlPopup({ window: window, extra_content_class: 'video_controls' }); LoungeOptions.popup.open(sHtml ); }};LoungeOptions.Restore = function(){ Lounge.hSettings['lounge_auto_click_link'] = 0; t.UserExtensions.Write('lounge_auto_click_link',Lounge.hSettings['lounge_auto_click_link']); LoungeOptions.Popup();};LoungeOptions.Save = function(sMask,sChecked){ if(sChecked ) { Lounge.hSettings['lounge_auto_click_link'] = Lounge.hSettings['lounge_auto_click_link'] | sMask; } else { Lounge.hSettings['lounge_auto_click_link'] = Lounge.hSettings['lounge_auto_click_link'] ^ sMask; } t.UserExtensions.Write('lounge_auto_click_link', Lounge.hSettings['lounge_auto_click_link'] );};
function AdvanceRoom(sMode ){ if(AutoNext.isActive() ) { if(sMode == 'previous' ) AutoNext.NextRoom('previous'); else AutoNext.NextRoom(); return; } if(sMode == 'last_viewed' && AdvanceRoom.aVisitedModels != undefined && AdvanceRoom.aVisitedModels.length ) { var nUserId = AdvanceRoom.aVisitedModels.pop(); LoadPlayer('player', { broadcaster_id: nUserId, 'do_not_retain_last_viewed': true } ); return; } var nNewModelId = 0; if(mfcBroadcasters.SetAdvanceRoom_nCurrentUserId == g_nBroadcasterId && ( mfcBroadcasters.hOptions.hAdvanceRoom.nNextModel || mfcBroadcasters.hOptions.hAdvanceRoom.nPreviousModel || ToggleVideo.hAllHidden['model_rooms'] ) ) { mfcBroadcasters.hOptions.nBroadcasterId = g_nBroadcasterId; if(sMode == 'previous' && mfcBroadcasters.hOptions.hAdvanceRoom.nPreviousModel && mfcBroadcasters.hOptions.hAdvanceRoom.nPreviousModel != g_nBroadcasterId ) { nNewModelId = mfcBroadcasters.hOptions.hAdvanceRoom.nPreviousModel; } else if(sMode == 'next' && mfcBroadcasters.hOptions.hAdvanceRoom.nNextModel && mfcBroadcasters.hOptions.hAdvanceRoom.nNextModel != g_nBroadcasterId ) { nNewModelId = mfcBroadcasters.hOptions.hAdvanceRoom.nNextModel; } } if(nNewModelId && ! g_hWindows[ PublicChannel(nNewModelId ) ] ) { LoadPlayer('player', { broadcaster_id: nNewModelId } ); return; } var aSortedList = mfcBroadcasters.FilteredAndSorted('public_and_current',{ 'ignore_search': ( ModelMenuBar.Search.sQuery && mfcBroadcasterDisplay.nTotalModels == 0 ) }); var aModelList = new Array(); var nNextModel = 0; var nPreviousModel = 0; for(var nK=0; nK < aSortedList.length; nK++ ) { nUserId = aSortedList[nK]; if(t.g_hUsers[ nUserId ] && ! t.g_hLoungeIds[ nUserId ] && ( ! g_hWindows[ PublicChannel(nUserId ) ] || nUserId == g_nBroadcasterId ) ) { aModelList.push(nUserId ); } } for(var nK=0; nK < aModelList.length; nK++ ) { if(aModelList[nK] == g_nBroadcasterId ) { nPreviousModel = aModelList[nK-1] ? aModelList[nK-1] : aModelList[aModelList.length - 1]; nNextModel = aModelList[nK+1] ? aModelList[nK+1] : aModelList[0]; break; } } if(! nPreviousModel ) { nPreviousModel = aModelList[aModelList.length - 1]; } if(! nNextModel ) { nNextModel = aModelList[0]; }
 if(sMode == 'previous' && nPreviousModel ) { LoadPlayer('player', { broadcaster_id: nPreviousModel } ); } else if(sMode == 'next' && nNextModel ) { LoadPlayer('player', { broadcaster_id: nNextModel } ); }}function FcCamState(nUserId ){ if(UCRPlayer.bIsLoaded && UCRPlayer.hRoom.video == 1 && UCRPlayer.hRoom.originator_id != t.g_hSelf.user_id ) LoadVideo(); }function Banned(){ ChatQueue.Append('reset'); PeopleBox.Reset({ channel_owner_id: g_nBroadcasterId }); ChatQueue.Append("<div style='font-weight:bold;font-size:15px;color:red;padding:10px;'>You do not have permission to enter this chat room.</div>"); LoadVideo();} function ClearChat(hBan ){ var chatBufferEls = document.getElementsByClassName('chat_contents')[0]; var now = new Date().getTime(); for(var a=0; a < chatBufferEls.childNodes.length; a++ ) { var buffers = chatBufferEls.childNodes[a].childNodes; for(var b=0; b < buffers.length; b++ ) { var chat = buffers[b]; if(chat && chat.dataset && chat.dataset.stamp ) { var age = now - chat.dataset.stamp; if(hBan && hBan.uids )
 { for(var c=0; c < hBan.uids.length; c++ ) { var nUserId = hBan.uids[c]; if(chat.dataset.user_id == nUserId && age < ( hBan.min * 60 * 1000 ) ) { chat.style.display = 'none'; } } } if(hBan && hBan.sids ) { for(var c=0; c < hBan.sids.length; c++ ) { var nSessionId = hBan.sids[c]; if(chat.dataset.session_id == nSessionId && age < ( hBan.min * 60 * 1000 ) ) { chat.style.display = 'none'; } } } } } }}function Muted(){ ChatQueue.Append("<div style='font-weight:bold;font-size:15px;color:red;padding:10px;'>You have been muted by the " + t.g_hPlatform.performer + "! You do not have permission to chat in this room for a short period of time.</div>");}function Filtered(sMessage ){ ChatQueue.Append("<div style='font-weight:bold;font-size:15px;color:red;padding:10px;'>" + sMessage + "</div>");}t.events.onRx(FCS.FCTYPE_JOINCHAN,function(fcMsg) { FcJoinChan(fcMsg); }, window.name );function FcJoinChan(fcMsg ){ if(! t.g_hoPlayerWindows[ g_nBroadcasterId ] ) { return; } var nChannel = ( fcMsg.arg1 == FCS.FCRESPONSE_ERROR ) ? fcMsg.to : fcMsg.arg1; if(t.g_hoPlayerWindows[ g_nBroadcasterId ].room_channel != nChannel ) { return; } var nPlayerOwnerId = t.GetRoomOwnerId(( fcMsg.arg1 == FCS.FCRESPONSE_ERROR ) ? fcMsg.to : fcMsg.arg1 );
 var nUserId; if(fcMsg.obj!=null && fcMsg.obj.uid ) nUserId = fcMsg.obj.uid; else if(FcJoinChan.hSessToUserId && fcMsg && FcJoinChan.hSessToUserId[ fcMsg.from ] ) nUserId = FcJoinChan.hSessToUserId[ fcMsg.from ]; if(nUserId != t.g_hSelf.user_id ) { if(! t.g_hUsers[ nUserId ] ) { t.g_hUsers[ nUserId ] = {}; } if(! t.g_hUsers[ nUserId ].rooms ) { t.g_hUsers[ nUserId ].rooms = {}; } if(! t.g_hUsers[ nUserId ].rooms[ nPlayerOwnerId ] ) { t.g_hUsers[ nUserId ].rooms[ nPlayerOwnerId ] = {}; } if(fcMsg ) { t.g_hUsers[nUserId].rooms[ nPlayerOwnerId ][ fcMsg.from ] = 1; } } else if ( nUserId == t.g_hSelf.user_id && fcMsg.arg2 == FCS.FCCHAN_JOIN ) { if ( t.g_hUsers[ nPlayerOwnerId ] && t.g_hUsers[ nPlayerOwnerId ].banned ) { delete t.g_hUsers[ nPlayerOwnerId ].banned; } } if(fcMsg.arg2 == FCS.FCCHAN_ERR_NOTALLOWED ) { var nUCROwner = nPlayerOwnerId + FCS.CHANNEL_ID_START; if(t.UCR.hRooms[nUCROwner] ) { ChatQueue.Append("<br><table><td><img sr"+"c=" + t.g_hPlatform.image_url_cdn + "files/images/icons/error.png></td><td>&nbsp;</td><td>This is a friends-only member room created by <b>" + t.UCR.hRooms[nUCROwner].o.name + "</b>. You must be in their friends list in order to enter the chat room.</td></table><br>"); } else { Banned(); } return; } if(fcMsg.arg1 == FCS.FCRESPONSE_ERROR ) { ChatQueue.Append("Unable to join channel! The channel may not exist. Contact support for help or try another room<br>"); return; } if(fcMsg.arg2 == FCS.FCCHAN_JOIN ) { if(t.g_hUsers[ g_nBroadcasterId ]
 && t.g_hUsers[ g_nBroadcasterId ]['state'] == FCS.FCVIDEO_TX_PVT && t.g_hoPlayerWindows[ g_nBroadcasterId ].room_channel > FCS.SESSCHAN_ID_START && t.g_hoPlayerWindows[ g_nBroadcasterId ].room_channel < FCS.CAMCHAN_ID_START && nUserId != t.g_hSelf['user_id'] && nUserId != g_nBroadcasterId ) { var oReportBack = new MfcReportBack('Private3rdJoin'); oReportBack.Send(t.g_hSelf.username, "user_id: " + nUserId + "\tself_id: " + t.g_hSelf.user_id + "\tmodel_id: " + g_nBroadcasterId + "\tstate: " + t.g_hUsers[ g_nBroadcasterId ]['state'] + ' chan: ' + t.g_hoPlayerWindows[ g_nBroadcasterId ].room_channel + "\t" + JSON.stringify(fcMsg) ); return; } if ( ! FcJoinChan.hasOwnProperty('hSessToUserId') ) FcJoinChan.hSessToUserId = { }; if(fcMsg ) { FcJoinChan.hSessToUserId[ fcMsg.from ] = nUserId; } PeopleBox.InsertUser(t.g_hUsers[ nUserId ] ); if(nUserId == t.g_hSelf['user_id'] ) { PeopleBox.Signal_BatchJoin_Complete(); } } else if(fcMsg.arg2 == FCS.FCCHAN_PART) { var hDepartedUser = t.g_hUsers[ nUserId ]; if(typeof hDepartedUser === 'object' && typeof hDepartedUser.rooms === 'object' && typeof hDepartedUser.rooms[ nPlayerOwnerId ] === 'object' ) { if(fcMsg ) { delete hDepartedUser.rooms[ nPlayerOwnerId ][ fcMsg.from ]; if (FcJoinChan.hasOwnProperty('hSessToUserId')) delete FcJoinChan.hSessToUserId[ fcMsg.from ]; } if(isObjectEmpty(hDepartedUser.rooms[ nPlayerOwnerId ]) ) { delete hDepartedUser.rooms[ nPlayerOwnerId ];
 PeopleBox.RemoveUser(nUserId ); t.pruneUsers.CheckByUserId(nUserId); } } }}t.events.onRx(FCS.FCTYPE_ANNOUNCE, function(fcMsg ) { var sMessage = decodeURIComponent(fcMsg.data ); var hMessage = ParseJSON(decodeURIComponent(sMessage ) ); ChatAnnounce(hMessage['msg'] );}, window.name );function ChatAnnounce(sMsg){ sMsg = sMsg || ''; var oEl; if(sMsg.match(/You cannot broadcast on [\w\.]+ until your ID is approved/) ) sMsg += "<br><br><a href=# onClick=\"javascript:t.Logout();\">Click here to logout</a>."; if(g_sPlayerMode == 'player' ) { ChatQueue.Append("<span class=chat_announcement><span class=chat_announcement_label>" + t.g_hPlatform.name + " Announcement:</span> " + sMsg + "</span><br>"); } else if(oEl = GetEl('homepage_update') ) { oEl.style.display = 'block'; SetHTML('homepage_update',"<div style='padding:0px 30px 25px 30px;margin-bottom:25px;border-bottom:2px solid #66666644;'><b>Message From " + t.g_hPlatform.name + " Administrators:</b> " + sMsg + "</b></div>"); } else { alert('Message From " + t.g_hPlatform.name + " Administrators: ' + sMsg); }}function DrawSnapsVideoMenu(sMode ){ var sHtml=''; if(! g_UA.mobile ) { 1; } else if(LoadVideo.clientVideo.videoProfile.recommended_player != 'livesnaps' ) { if(LoadVideo.clientVideo.videoProfile.player_type_override != 'livesnaps' ) sHtml = "<a href=# onClick=\"SetMobileVideoMode('live_feed'); return false;\" style=\"background-color:#FFA;\">Show Mobile Feed</a>"; else
 sHtml = "<a href=# onClick=\"SetMobileVideoMode('images'); return false;\">Show Images</a>"; } if(sHtml ) sHtml += " |"; SetHTML('snap_video_mode', sHtml, { 'force': true } );}function SetMobileVideoMode(sMode ){ if(sMode == 'images' ) LoadVideo.clientVideo.videoProfile.player_type_override = 'livesnaps'; else delete LoadVideo.clientVideo.videoProfile.player_type_override; LoadVideo(); DrawSnapsVideoMenu();} function DrawMute(){ var sHtml; var sIconHtml; if(g_UA.frameSnapVideo ) { sHtml = A('mute') + "<span style=color:#888;>No Sound</span></a>"; sIconHtml = A('mute') + "<img src=\"" + t.g_hPlatform.image_url_cdn + "images/flat/stroke/svg/speaker-3.svg\" style=\"opacity:0.4;\">"; } else { sHtml = A('mute') + ( t.g_hSelf['audio_muted'] == 1 ? "<span class=highlight_fgbg >Unmute</span>" : "<span>Mute</span>" ) + "</a>"; sIconHtml = A('mute') + "<img src=\"" + t.g_hPlatform.image_url_cdn + "images/flat/stroke/svg/" + ( t.g_hSelf['audio_muted'] == 1 ? "speaker-3" : "speaker-1" ) + ".svg\" >"; } var els = document.getElementsByClassName('mute'); for(var a=0; a < els.length; a++ ) { els[a].innerHTML = sHtml; } var els = document.getElementsByClassName('icon_mute'); for(var a=0; a < els.length; a++ ) { els[a].innerHTML = sIconHtml; }} 
function DrawMuteGuests(){ if(GetEl('toggle_mute_guests')) { SetHTML('toggle_mute_guests',t.g_hSelf['mute_guests'] == 1 ? "<span class=highlight_fgbg>Guests</a>" : "<span style=color:blue;>Guests</span>"); } if(GetEl('toggle_mute_regs')) { SetHTML('toggle_mute_regs',t.g_hSelf['mute_regs'] == 1 ? "<span class=highlight_fgbg>Basics</a>" : "<span style=color:blue;>Basics</span>"); }}function DrawSize(){ if(GetEl('toggle_size_control') ) { var sHtml; if(t.g_hSelf['video_width'] ) { sHtml = '<span class=highlight_fgbg >Reset</span>'; } else if(t.g_hSelf['video_size'] == 1 ) { sHtml = 'Big'; } else { sHtml = 'Small'; } SetHTML('toggle_size_control',sHtml,{ 'force': true }); }}function GetPlayerDimensions(){ var hPlayerSize, oEl; if(oEl = GetEl('main_iframe_container') ) { hPlayerSize = { width: oEl.offsetWidth, height: oEl.offsetHeight }; } else { hPlayerSize = t.GetDocumentDimensions(document, window); } return hPlayerSize;}
function GetVideoDimensions(hOptions ){ hOptions = hOptions || {}; var aVideoWidth = [ null, 320, 480 ]; var nAspectRatio = CurrentVideoAspectRatio(); var bDebug = false; var oEl = GetEl('video_td'); var bDebug=0; var nDocHeight = ( window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight ); var nDocWidth = ( window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth ); var hPlayerSize = GetPlayerDimensions(); var nWidth; if(ChatOverlay.bEnabled ) { hPlayerSize.height -= ( ChatOverlay.bFullscreen ? 60 : 38 ); hPlayerSize.width -= ( ChatOverlay.bFullscreen ? 35 : 30 ); nWidth = hPlayerSize.width; if((hPlayerSize.width / nAspectRatio) > hPlayerSize.height ) { nWidth = Math.floor(hPlayerSize.height * nAspectRatio); } if(bDebug ) { console.log('GetVideoDimensions nWidth A ' + nWidth ); } } else if(hOptions['width'] ) { nWidth = hOptions['width']; if(bDebug ) { console.log('GetVideoDimensions nWidth B ' + nWidth ); } } else if(( ModelMenuBar.bChatUnderVideo || g_bPopupPlayer ) && LayoutSizing.nWorkingVideoWidth ) { nWidth = LayoutSizing.nWorkingVideoWidth; if(bDebug ) { console.log('GetVideoDimensions nWidth C ' + nWidth ); } } else if(ModelMenuBar.bHideOnlineModels && ModelMenuBar.bChatUnderVideo ) { nWidth = hPlayerSize.width - 17; var nMinHeight = 300; if(hPlayerSize.height - ( nWidth * ( 1 / CurrentVideoAspectRatio() ) ) < nMinHeight ) {
 nWidth = ( hPlayerSize.height - nMinHeight ) * CurrentVideoAspectRatio(); } } else if(ModelMenuBar.bChatUnderVideo && t.g_hSelf['chat_under_video_video_width'] ) { nWidth = t.g_hSelf['chat_under_video_video_width']; if(bDebug ) { console.log('GetVideoDimensions nWidth D1 ' + nWidth ); } } else if(t.g_hSelf['video_width'] && ( t.g_hSelf['video_width'] * ( 1 / CurrentVideoAspectRatio() ) ) < ( nDocHeight - 30 ) ) { nWidth = t.g_hSelf['video_width']; if(bDebug ) { console.log('GetVideoDimensions nWidth D2 ' + nWidth ); } } else { if(g_UA.mobile ) { nWidth = Math.round(nDocWidth / 2.5 ); } else { var fWidthRatio = t.g_hSelf['video_size'] == 1 ? 3 : 2; var fHeightAllowance = ( nDocWidth / nDocHeight ); fWidthRatio += fHeightAllowance < 1 ? 1 : fHeightAllowance; nWidth = Math.round(nDocWidth * ( CurrentVideoAspectRatio() / fWidthRatio ) ); } if(bDebug ) { console.log('GetVideoDimensions nWidth F ' + nWidth ); } } if(g_bPopupPlayer && hOptions['mode'] != 'user_initiated' && ! LayoutSizing.nWorkingVideoWidth && ! ChatOverlay.bEnabled && ! ModelMenuBar.bChatUnderVideo ) { if(bDebug ) { console.log('GetVideoDimensions nWidth G ' + nWidth ); } var nFrameHeight = g_UA.IE ? document.getElementsByTagName('body')[0].clientHeight : window.innerHeight; var nFrameWidth = g_UA.IE ? document.getElementsByTagName('body')[0].clientWidth : window.innerWidth; var nTrimForControls = 0; if(SlimMode.enabled )
 { if(bDebug ) { console.log('GetVideoDimensions nWidth H ' + nWidth ); } nTrimForControls = 70; } else if(t.g_hSelf.show_chat_header_topic ) { if(bDebug ) { console.log('GetVideoDimensions nWidth I ' + nWidth ); } nTrimForControls = 160; } else { if(bDebug ) { console.log('GetVideoDimensions nWidth J ' + nWidth ); } nTrimForControls = 115; } nWidth = Math.ceil(( nFrameHeight - nTrimForControls ) * CurrentVideoAspectRatio() ); if(! t.g_hSelf.hide_chat && ( nFrameWidth - nWidth ) < 300 ) { if(bDebug ) { console.log('GetVideoDimensions nWidth K ' + nWidth ); } nWidth = nFrameWidth - 300; } else if(( nFrameWidth - nWidth ) < 45 ) { if(bDebug ) { console.log('GetVideoDimensions nWidth L ' + nWidth ); } nWidth = nFrameWidth - 45; } } var nHeight = Math.floor(nWidth * ( 1 / CurrentVideoAspectRatio() ) ) + 0; if(bDebug ) { console.log('GetVideoDimensions FINAL ' + nWidth ); } return { width: nWidth, height: nHeight };}var ToggleChat = {};ToggleChat.Toggle = function(nOverride ){ if(nOverride != undefined ) t.g_hSelf.hide_chat = nOverride; else t.g_hSelf.hide_chat = t.g_hSelf.hide_chat == 1 ? 0 : 1; t.UserExtensions.Write('hide_chat', t.g_hSelf.hide_chat ? 1 : 0 ); var el = GetEl('chat_container'); if(el ) el.style.display = t.g_hSelf.hide_chat ? 'none' : ''; LayoutSizing.handle_hide_chat_message();
};var ToggleVideo = { hVideoDisabled: {}, hAllHidden: {}};ToggleVideo.Toggle = function(nMode ){ var sContext = ( UCRPlayer.bIsLoaded || Lounge.bIsLoaded ) ? 'lounge' : 'model_rooms'; if(nMode ) { if(nMode == ! ToggleVideo.hVideoDisabled[ sContext ] ) { return; } else { ToggleVideo.hVideoDisabled[ sContext ] = ! nMode; } } else { ToggleVideo.hVideoDisabled[ sContext ] = ToggleVideo.hVideoDisabled[ sContext ] == 1 ? 0 : 1; } if(sContext == 'lounge' ) { SetHTML('toggle_video_lounge', ToggleVideo.hVideoDisabled['lounge'] ? '<span class=highlight_fgbg >On</span>' : 'Off'); LoadVideo({ mode: ToggleVideo.hVideoDisabled['lounge'] ? 'no_video' : '' }); } else { SetHTML('toggle_video_model_rooms', ToggleVideo.hVideoDisabled['model_rooms'] ? '<span class=highlight_fgbg>On</span>' : 'Off'); LoadVideo({ mode: ToggleVideo.hVideoDisabled['model_rooms'] ? 'no_video' : '' });
 var oEl = GetEl('toggle_video_cam_model_rooms'); if(oEl ) { oEl.src = t.g_hPlatform.image_url_cdn + "images/flat/stroke/svg/video-camera-" + ( ToggleVideo.hVideoDisabled['model_rooms'] ? "x" : "1" ) + ".svg"; } }};ToggleVideo.HideAll = function(sAction, nOverride ){ var sContext = ( UCRPlayer.bIsLoaded || Lounge.bIsLoaded ) ? 'lounge' : 'model_rooms'; if(ToggleVideo.hAllHidden[sContext] == undefined ) ToggleVideo.hAllHidden[sContext] = t.g_hSelf[ 'hide_video_' + sContext ]; if(sAction == 'toggle' ) { if(nOverride != undefined ) ToggleVideo.hAllHidden[sContext] = nOverride; else ToggleVideo.hAllHidden[sContext] = ToggleVideo.hAllHidden[sContext] == 1 ? 0 : 1; t.UserExtensions.Write('hide_video_' + sContext, ToggleVideo.hAllHidden[sContext] ); LoadVideo({ mode: ToggleVideo.hAllHidden[sContext] ? 'no_video' : '' }); } var oEl = GetEl('video_area'); if(oEl ) { oEl.style.display = ToggleVideo.hAllHidden[sContext] ? 'none' : 'block'; } var oEl = GetEl('click_drag_video_grip'); if(oEl ) { oEl.style.display = ToggleVideo.hAllHidden[sContext] ? 'none' : ''; } var oEl = GetEl('toggle_video_reveal'); if(oEl ) { oEl.style.display = ToggleVideo.hAllHidden[sContext] ? '' : 'none'; } if(sContext == 'lounge' && GetEl('hide_video_toggle') ) { SetHTML('hide_video_toggle', ToggleVideo.hAllHidden[sContext] == 1 ? '<b>Un-Hide</b>' : 'Hide' ); } PeopleBoxHelper.MenuHighlight(); if(sAction == 'toggle' ) { setTimeout(OnResizeHandler, 300 ); }
};function ToggleSize(hOptions ){ hOptions = hOptions || {}; if(hOptions.width ) { if(hOptions.width != t.g_hSelf['video_width'] ) { t.UserExtensions.Write('video_width',hOptions.width ); } } else { var nVideoSize = 0; if(t.g_hSelf['video_width'] ) { t.UserExtensions.Write('video_width', 0 ); nVideoSize = 2; } else { nVideoSize = t.g_hSelf['video_size'] == 1 ? 2 : 1; } if(nVideoSize != t.g_hSelf['video_size'] ) { t.UserExtensions.Write('video_size',nVideoSize ); } } var oEl; if(! t.g_hSelf.single_page_website && ( oEl = GetEl('inner_body') ) ) { oEl.style.overflowX = 'hidden'; oEl.style.overflowY = 'hidden'; } LayoutSizing.size_video(); DrawSize(); setTimeout(function(){ var oEl; if(! t.g_hSelf.single_page_website && ( oEl = GetEl('inner_body') ) ) { oEl.style.overflowX = 'hidden'; oEl.style.overflowY = 'auto'; } OnResizeHandler(); },500);}function OnResizeHandler(hOptions )
{ hOptions = hOptions || {}; if(FnRateLimit('OnResizeHandler',300,function(){ OnResizeHandler(); }) ) { return; } LayoutSizing.resize(); mfcBroadcasterDisplay.RecalculateOnResize(); LayoutSizing.size_online_model_area(); LayoutSizing.size_video(); OnlineBroadcasterList.HideReveal();}var LayoutSizing = { fResizeDelay: null, nWorkingVideoWidth: 0, nSizeOnlineModelArea_PreviousHeight: 0};LayoutSizing.resize = function(nExecute ){ if(g_UA.mobile ) { return; } if(LayoutSizing.fResizeDelay ) { return; } else if(nExecute ) { if(g_bPopupPlayer ) { var resizeLayout = function() { if(ChatOverlay && ChatOverlay.bEnabled ) { ChatOverlay.resize_elements(); } else { LayoutSizing.size_chat_area(); LayoutSizing.size_video(); } };
 resizeLayout(); } else { if(ChatOverlay && ChatOverlay.bEnabled ) { ChatOverlay.resize_elements(); } else { LayoutSizing.size_chat_area(); LayoutSizing.size_online_model_area(); } RoomTopic.render_topic(); } } else { LayoutSizing.fResizeDelay = 1; setTimeout(function(){ LayoutSizing.fResizeDelay = 0; LayoutSizing.resize('execute'); }, 300 ); }};LayoutSizing.size_chat_area = function(hOptions ){ hOptions = hOptions || {}; if(! GetBroadcasterId() ) { return; } if(FnRateLimit('LayoutSizing.size_chat_area',300,function(){ LayoutSizing.size_chat_area(); }) ) { return; } if(g_sPlayerMode == 'homepage') { return; } var oEl_online_broadcasters_container = GetEl('online_broadcasters_container'); var nHeight = 0; var oEl; var bDebug=1; if(( oEl_online_broadcasters_container && oEl_online_broadcasters_container.style.display == 'none' ) || ModelMenuBar.bHideOnlineModels ) { t.Log('LayoutSizing.size_chat_area no_models '); if(ModelMenuBar.bChatUnderVideo )
 { var hPlayerSize = GetPlayerDimensions(); var oVideoTd = GetEl('video_td'); if(t.g_hSelf.single_page_website && FindAbsoluteOffset('chat_container') ) nHeight = window.innerHeight - FindAbsoluteOffset('chat_container').y - 80; else nHeight = hPlayerSize.height - oVideoTd.offsetHeight - ( g_bPopupPlayer ? 38 : 60 ); } else { var oEl; if(oEl = GetEl('online_broadcasters_container_2') ) { oEl.style.right = "0px"; } if(oEl = GetEl('toggle_online_broadcaster_refresh') ) { oEl.style.display = 'none'; }  if(g_UA.mobile ) { nHeight = VideoHeight() - 51; } else { if(t.g_hSelf.single_page_website && FindAbsoluteOffset('chat_container') ) { nFrameHeight = window.innerHeight - FindAbsoluteOffset('chat_container').y - 30; } else if(oEl = GetEl('main_iframe_container') ) { nFrameHeight = oEl.offsetHeight; } else { nFrameHeight = g_UA.IE ? document.getElementsByTagName('body')[0].clientHeight : window.innerHeight; } nHeight = nFrameHeight - ( g_bPopupPlayer ? 38 : 57 ); } } }
 else if(oEl_online_broadcasters_container ) { t.Log('LayoutSizing.size_chat_area with_models '); if(oEl = GetEl('online_broadcasters_container_2') ) { oEl.style.right = "16px"; } if(oEl = GetEl('toggle_online_broadcaster_refresh') ) { oEl.style.display = 'inline'; } var oElChatBox; if(( oElVideoArea = GetEl('video_area') ) && oElVideoArea.style.display == 'none' ) { nHeight = parseInt(window.innerHeight * (2/3) ); } else if(( ClickDragVideo.bUserDefinedModelListHeight || ( ToggleVideo.hAllHidden.model_rooms && ! Lounge.bIsLoaded ) || ( ToggleVideo.hAllHidden.lounge && Lounge.bIsLoaded ) ) && ( oElVideoTd = GetEl('video_td') ) && ( oElVideoArea = GetEl('video_area') ) ) { t.Log('LayoutSizing.size_chat_area with_models A '); nHeight = oElVideoTd.offsetHeight > oElVideoArea.offsetHeight ? oElVideoTd.offsetHeight : oElVideoArea.offsetHeight; nHeight = nHeight - 33; } else { t.Log('LayoutSizing.size_chat_area with_models B ' + nHeight ); nHeight = VideoHeight() - ( g_UA.mobile ? 33 : 34 ); } } var nHeightAdjustment = 0; if(ChatOverlay.bEnabled ) { nHeightAdjustment = ChatOverlay.nChatHeightAdjustment; var oChatConEl; if(oChatConEl = GetEl("chat_container") ) { nHeight = oChatConEl.clientHeight; } } var oChatTable = GetEl("chat_table"); if(oChatTable && nHeight > 0 ) {
 var oEl; if(oEl = GetEl("chat_table") ) { t.Log('LayoutSizing.size_chat_area chat_table = ' + oEl.style.height ); oEl.style.height = (ChatOverlay.bEnabled ? nHeight + "px" : ""); } var oChat; if(oChat = GetEl("chat_box") ) { t.Log('LayoutSizing.size_chat_area chat_box = ' + oChat.style.height ); oChat.style.height = (nHeight-nHeightAdjustment) + "px"; } var nWidth = 130; if(oChatTable.offsetWidth > 600 ) { nWidth = 150; } else if(oChatTable.offsetWidth > 285 ) { nWidth = ( 150 * ( oChatTable.offsetWidth / 600 ) ); } else if(oChatTable ) { nWidth = 0; } var nMinWidthToCompact = 120; var bCompact = nWidth < nMinWidthToCompact; if(nWidth == 0 ) { PeopleBoxHelper.HideReveal(1); var oEl = GetEl("people_box_toggle"); if(oEl ) { oEl.style.display = 'none'; } } else { PeopleBoxHelper.HideReveal(); var oEl = GetEl("people_box_toggle"); if(oEl ) { oEl.style.display = 'inline'; } var oOptions = GetEl("chat_options_link2"); if(oOptions ) { if(bCompact ) oOptions.innerHTML = "<i title=\"Show Chat Options\" class=\"bg_menu_gray icon-square-16\"></i>"; else oOptions.innerHTML = "Options"; } var oPeopleCountLabel = GetEl("people_count_label"); if(oPeopleCountLabel ) { oPeopleCountLabel.innerHTML = "People"; } } nWidth = ( nWidth >= nMinWidthToCompact ) ? nWidth : nMinWidthToCompact; if(oEl = GetEl("people_content_td") ) { LayoutSizing.people_contents_width = nWidth; oEl.style.width = nWidth + 'px'; } if(oEl = GetEl("people_contents") ) { t.Log('LayoutSizing.size_chat_area people_contents = ' + oEl.style.height ); oEl.style.width = nWidth + 'px'; oEl.style.height = (nHeight - ( 32 + nHeightAdjustment)) + "px"; } } LayoutSizing.handle_hide_chat_message();};LayoutSizing.handle_hide_chat_message = function(){ var el = GetEl('chat_container_message'); if(! el ) { return; } if(t.g_hSelf.hide_chat ) el.style.display = el.parentNode.offsetWidth > 70 ? 'block' : 'none'; else el.style.display = 'none';};LayoutSizing.size_video = function(hOptions ){ hOptions = hOptions || {}; if(! GetBroadcasterId() ) { return; } if(FnRateLimit('LayoutSizing.size_video',300,function(){ LayoutSizing.size_video(); }) ) { return; } if(hOptions.width ) { if(ModelMenuBar.bChatUnderVideo && hOptions.mode == 'user_initiated' ) { t.UserExtensions.Write('chat_under_video_video_width', parseInt(hOptions.width ) ); LayoutSizing.nWorkingVideoWidth = hOptions.width; }
 else if(g_bPopupPlayer && hOptions.mode == 'user_initiated' ) { LayoutSizing.nWorkingVideoWidth = hOptions.width; } else if(hOptions.width != t.g_hSelf.video_width ) { t.UserExtensions.Write('video_width', parseInt(hOptions.width ) ); } } var hVideoDimensions = GetVideoDimensions(hOptions ); if(LoadVideo.clientVideo && LoadVideo.clientVideo.SetDimensions ) LoadVideo.clientVideo.SetDimensions({ width: hVideoDimensions.width }); LayoutSizing.size_video_area(hVideoDimensions.width, hVideoDimensions.height ); if(! hOptions.no_chat_resize ) { LayoutSizing.size_chat_area(); } RefreshMessageBar(); var oVideoTd = GetEl('video_td'); var oModelListGrip = GetEl('click_drag_model_list_grip_icon'); if(oModelListGrip && oVideoTd ) { oModelListGrip.style.left = ( Math.round(oVideoTd.offsetWidth / 2 ) - 8 ) + 'px'; } var oModelListGrip = GetEl('click_drag_model_list_reset'); if(oModelListGrip && oVideoTd ) { oModelListGrip.style.left = ( Math.round(oVideoTd.offsetWidth / 2 ) - 52 ) + 'px'; } var videochat_container_td, inner_body; if(( inner_body = GetEl('inner_body') ) && ( videochat_container_td = GetEl('videochat_container_td') ) && videochat_container_td.offsetWidth < hVideoDimensions.width ) {
 inner_body.style.overflowX = 'auto'; } else if(inner_body ) { inner_body.style.overflowX = 'hidden'; } ChatBox.SmoothScroll('size_video'); DrawSize();};LayoutSizing.size_video_area = function(nWidth, nHeight ){ var oEl; if(ChatOverlay && ChatOverlay.bEnabled ) { var hVideoDim = GetVideoDimensions(); nWidth = hVideoDim['width']; nHeight = hVideoDim['height'] + 25; } else if(! g_bPopupPlayer && ( oEl = GetEl('room_options') ) ) { var nOptionsHeight; if(nWidth > 1200 ) nOptionsHeight = 20; else if(nWidth > 580 ) nOptionsHeight = 40; else if(t.g_hSelf.access_level==0 ) nOptionsHeight = 65; else nOptionsHeight = 85; nOptionsHeight += 10; if(SlimMode.enabled ) { nOptionsHeight = 0; } oEl.style.height = nOptionsHeight + 'px'; } if(oEl = GetEl('video') ) { oEl.style.width = nWidth + 'px'; oEl.style.height = nHeight + 'px'; }
 if(oEl = GetEl('video_wrapper') ) { oEl.style.width = (( ChatOverlay && ChatOverlay.bEnabled ) ? ( nWidth + 12 ) : ( nWidth )) + 'px'; oEl.style.height = ( nHeight ) + 'px'; } var oVideoContainer = LoadVideo.clientVideo && LoadVideo.clientVideo.video_container; if(oVideoContainer ) { if(ChatOverlay && ChatOverlay.bEnabled ) { oVideoContainer.style.cssText = " position:absolute; top:1px; left:0px; "; } else if(t.g_hPlatform.id == PLAT_MFC ) { if(t.location.search.indexOf('corner_video') > -1 ) { oVideoContainer.style.cssText = " position: absolute; top: -10px; left: " + ( g_bPopupPlayer ? -5 : -15 ) + "px; width: calc(100% + 22px); height: calc(100% + 8px); border-radius: 0px 0px 6px 0px; overflow: hidden; "; } else { oVideoContainer.style.cssText = " position: absolute; top: 0px; left: 0px; width: 100%; height: 100%; border-radius:3px; "; } } }};LayoutSizing.size_online_model_area = function(hOptions ){ hOptions = hOptions || {};
 if(FnRateLimit('LayoutSizing.size_online_model_area',300,function(){ LayoutSizing.size_online_model_area(); }) ) { return; } if(! GetEl('online_broadcasters_container') || ( ModelMenuBar.bHideOnlineModels && g_sPlayerMode == 'player' ) || g_bPopupPlayer ) { return; } if(( t.g_hSelf.single_page_scroll && g_sPlayerMode == 'player' ) || t.g_hSelf.single_page_website ) { var oEl = GetEl('online_model_controls_container'); if(oEl.style.right != '0px' ) { oEl.style.right = '0px'; } if(t.g_hSelf.single_page_website && ( ( IframeContent.resource == 'models' && ! ModelMenuBar.bHideOnlineModels ) || g_sPlayerMode == 'homepage' ) ) { var sHeight; { sHeight = FindAbsoluteOffset('online_broadcasters_container_content_bottom').y + 250; }
 var oEl = t.GetEl('layout_table'); oEl.style.height = sHeight + 'px'; } var online_broadcasters_td = GetEl('online_broadcasters_td'); if(online_broadcasters_td ) { online_broadcasters_td.style.height = ''; } } else { var online_broadcasters_td = GetEl('online_broadcasters_td'); var main_footer = GetEl('main_footer'); if(main_footer && online_broadcasters_td ) { var height = ( main_footer.offsetTop - online_broadcasters_td.offsetTop ); online_broadcasters_td.style.height = height + 'px'; } if(! ( g_UA.Safari && g_UA.Mac ) && ! g_UA.mobile ) { var oEl = GetEl('online_model_controls_container'); if(oEl.style.right != '17px' ) { oEl.style.right = '17px'; } } else if(g_UA.mobile ) { var oEl = GetEl('online_model_controls_container'); if(oEl ) { oEl.style.right = '0px'; } } } LayoutSizing.fResizeDelay = 1; setTimeout(function(){ LayoutSizing.fResizeDelay = 0; }, 300 );};LayoutSizing.SetSinglePageWebsite = function(nValue ){ var oEl = GetEl('online_broadcasters_container'); if(oEl ) { if(t.g_hSelf['model_list_mode'] == 'scroll' ) mfcBroadcasterDisplay.DynamicScroll_JumpTo({ start: 0, end: 200 }); else oEl.scrollTop = 0; oEl.style.position = t.g_hSelf.single_page_website ? 'relative' : 'absolute'; } if(g_UA.iOS && nValue == 0 ) { alert("You may need to reload the site in order for this change to take effect."); } if(t.g_hSelf.single_page_website != nValue )
 { t.g_hSelf.single_page_website = nValue; t.UserExtensions.Write('single_page_website_mobile', nValue ); } t.ConfigureForSinglePageWebsiteMode(); LayoutSizing.size_online_model_area(); OnlineBroadcasterList.Refresh('reset');};ChatOverlay.bottomPadding = 50;ChatOverlay.elements = { chatContainer: '#chat_container', chatContainerOffsetParent: '#videochat_container_td', centerToContainer: '#video_wrapper', resizeSensors: ['#video_area', '#player_main'], chatTd: '#chat_td', dragContainment: '#player_main', fullscreen: 'body'};ChatOverlay.events.toggleHideChat = function(bHidden){ if(! bHidden ) ChatBox.ScrollToBottom_Execute();};ChatOverlay.events.onResize = function(bStarted ){ LayoutSizing.size_chat_area();};ChatOverlay.events.resizeElements = function(bForceRun){ if(ChatOverlay.bActive || bForceRun ) { LoadPlayerMenu(); ChatBox.ScrollToBottom('force'); setTimeout(function(){ LayoutSizing.size_online_model_area();
 }, 1000 ); }};ChatOverlay.events.onFullscreenChange = function(bOnOrOff ){ if(bOnOrOff ) SlimMode(true);};ChatOverlay.events.onToggle = function(bOnOrOff ){ t.g_bChatOverlayMode = bOnOrOff; if(bOnOrOff ) { if ( typeof(ChatOverlay.hCache.nWidth) !== 'undefined' && typeof(ChatOverlay.hCache.nHeight) !== 'undefined' ) { $('#chat_table').css('height', ChatOverlay.hCache.nHeight + 'px'); $('#chat_box').css('height', (ChatOverlay.hCache.nHeight - ChatOverlay.nChatHeightAdjustment) + 'px'); } SlimMode(true); PeopleBoxHelper.Toggle(true); } else { if(typeof(ChatOverlay.hCache.bSlimModeSetting) !== 'undefined' ) { SlimMode(ChatOverlay.hCache.bSlimModeSetting); ChatOverlay.hCache.bSlimModeSetting = undefined; } if(typeof(ChatOverlay.hCache.bPeopleBoxHelperSetting) !== 'undefined' ) { PeopleBoxHelper.Toggle(ChatOverlay.hCache.bPeopleBoxHelperSetting); ChatOverlay.hCache.bPeopleBoxHelperSetting = undefined; } }};var PopupDynamicScroll = { hJumpToPoints: { 'public': { name: 'Public Rooms', state: FCS.FCVIDEO_TX_IDLE }, 'group ': { name: 'Group Shows', state: FCS.FCVIDEO_TX_GRP }, 'private ': { name: 'Private Shows', state: FCS.FCVIDEO_TX_PVT }, 'club ': { name: 'Club Shows', state: FCS.FCVIDEO_TX_CLUB }
 }};PopupDynamicScroll.Menu = function(){ var sGroupLinks=''; if(t.g_hSelf.group_models_by_state == 1 ) { for(var sSection in PopupDynamicScroll.hJumpToPoints ) { sGroupLinks += "<a href=\"javascript:PopupDynamicScroll.GoTo('" + sSection + "');\">" + PopupDynamicScroll.hJumpToPoints[ sSection ].name + "</a><br>"; } } var nStepSize = 300; var sRangeLinks = ''; var nCxPerRow=0; for(var n=0; n <= mfcBroadcasterDisplay.nTotalModels ; n += nStepSize ) { sRangeLinks += "<a href=\"javascript:mfcBroadcasterDisplay.DynamicScroll_JumpTo({ start:" + n + " }); g_oDhtmlPopup.close(); \">" + ( n == 0 ? '#1' : n ) + "</a></b>.. "; if(nCxPerRow++ % 3 == 2 ) sRangeLinks += "<br>"; } if(! sRangeLinks ) { sRangeLinks += "<a href=\"javascript:mfcBroadcasterDisplay.DynamicScroll_JumpTo({ start: 0 }); g_oDhtmlPopup.close(); \">1</a></b> "; } sRangeLinks += " of <a href=\"javascript:mfcBroadcasterDisplay.DynamicScroll_JumpTo({ start: " + ( mfcBroadcasterDisplay.nTotalModels - 10 ) + ", end:" + mfcBroadcasterDisplay.nTotalModels + " }); g_oDhtmlPopup.close(); \">" + mfcBroadcasterDisplay.nTotalModels + "</a> " + t.g_hPlatform.performer + "s.<br>"; g_oDhtmlPopup.open(" <div style=\"width:250px;font-size:11px;\"> <b>Skip to " + t.g_hPlatform.performer + " list position...</b> <div style=\"padding:10px 0px 15px 15px;\"> <table> <tr> <td style=\"font-size:15px;padding-right:20px;line-height:23px;white-space:nowrap;\"> " + sRangeLinks + " </td> </tr> <tr> <td style=\"font-size:15px;padding-right:20px;padding-top:8px;line-height:23px;\"> " + sGroupLinks + " </td> </tr> </table>\
 </div> Adjust your <a href=# onClick=\"FilterSortOptions_Player.Popup(); return false;\" title=\"" + t.g_hPlatform.Performer + " List Settings\">" + t.g_hPlatform.Performer + " List Settings</a><br> to filter and sort the " + t.g_hPlatform.performer + " list. <br><br> </div> ");};PopupDynamicScroll.GoTo = function(sSection ){ var aSortedList = mfcBroadcasters.FilteredAndSorted(); var nOffset = 0; for(var nK=0; nK < aSortedList.length; nK++ ) { nUserId = aSortedList[nK]; if(t.g_hUsers[ nUserId ] && t.g_hUsers[ nUserId ].state == PopupDynamicScroll.hJumpToPoints[ sSection ].state ) { if(t.g_hUsers[ nUserId ].friend && t.g_hSelf.online_model_friends_first ) { continue; } nOffset = nK; break; } } nOffset -= mfcBroadcasterDisplay.nModelsPerRow; if(nOffset < 0 ) { nOffset = 0; } mfcBroadcasterDisplay.DynamicScroll_JumpTo({ start: nOffset }); g_oDhtmlPopup.close();};var FlagContent = {};FlagContent.open = function(){ g_oDhtmlPopup.open(" <form style=\"white-space:nowrap;\" onSubmit=\" FlagContent.send(this); return false; \" > Reason to Flag:<br><br> <input type=radio name=type value=nudity> Nudity <br> <input type=radio name=type value=other> Other <input type=text name=other style=\"width:120px;\"><br> <br> <input type=submit value=\"Send Report\"> </form> ",{ no_close_on_mouseout: true ,provide_close_button: true });};
FlagContent.send = function(form){ var sFlag=''; if(form.type.value == 'other' ) sFlag = form.other.value; else sFlag = form.type.value; if(sFlag ) { var oReportBack = new MfcReportBack('CamFlag'); oReportBack.Send(t.g_hUsers[g_nBroadcasterId].username, 'user: ' + t.g_hSelf.username + ' flag: ' + sFlag ); } g_oDhtmlPopup.update(" <br><br> Thank you! <br><br> "); setTimeout(function(){ g_oDhtmlPopup.close(); }, 2500 ); return false;};function ModelListRefreshActions(){ ModelMenuBar.Message.Set(); if(ModelMenuBar.Search.sQuery ) ModelMenuBar.Search.Execute('update'); if(t.g_hSelf.single_page_scroll || t.g_hSelf.single_page_website ) LayoutSizing.size_online_model_area();}function ModelMenuContext(event, el ){ if(event.target.tagName != 'IMG' && event.target.tagName != 'A' && event.target.tagName != 'INPUT' && ! getSelectedText() ) { event.stopPropagation(); event.preventDefault(); Player_popUserMenu_open(GetBroadcasterId()); return false; }
 return true;}function getSelectedText() { var text = ""; if (typeof window.getSelection != "undefined") { text = window.getSelection().toString(); } else if (typeof document.selection != "undefined" && document.selection.type == "Text") { text = document.selection.createRange().text; } return text;}function HTMLTemplates(sTemplate, sHeader, sFooter ){ sHeader = sHeader || ''; var bExtraHeadRoom = false; //t.g_hSelf.model_list_mode == 'page';
 var bNoScrollBar = ( g_UA.Safari && g_UA.Mac ) || t.g_hSelf.single_page_website || g_UA.tablet || g_UA.mobile; if(! sFooter ) { sFooter = " <div style=\"padding:40px 5px 10px 10px;\"> %filter_sort_options% </div> <div class=content style='font-size:13px;padding-top: calc(100vh - 540px); padding-bottom:100px; '> "; if(typeof g_hLegalnotice != 'undefined' && !!g_hLegalNotice && g_hLegalNotice.footer ) { sFooter += "<div style=\"padding:100px 0px 100px 0px;font-size:17pt;color:#8888;\">" + g_hLegalNotice.footer.replace(/\n/g,'<br><br>') + "</div>"; } if(t.g_hPlatform.id == PLAT_MFC ) { sFooter += " Please " + A('contact') + "Contact Us</a> if you need anything. <a href=https://wiki." + t.g_hPlatform.domain + "/wiki/Becoming_a_Webcam_Model_at_" + t.g_hPlatform.name + " target=_blank>Information on becoming a " + t.g_hPlatform.performer + "</a>. <br><br> <a href=//share." + t.g_hPlatform.name + ".com target=_blank>Share." + t.g_hPlatform.name + ".com</a> <br><br> Twitter: <a href=https://twitter.com/" + t.g_hPlatform.name.toLowerCase() + " target=_blank>@" + t.g_hPlatform.name + "</a>  &nbsp; Facebook: <a href=https://www.facebook.com/" + t.g_hPlatform.name.toLowerCase() + "/ target=_blank>@" + t.g_hPlatform.name + "</a> &nbsp; MFC Share: <a href=https://share." + t.g_hPlatform.domain + "/" + t.g_hPlatform.name + " target=_blank>" + t.g_hPlatform.name + "</a> <br><br> You can use <a href=https://M." + t.g_hPlatform.name + ".com target=_blank>" + t.g_hPlatform.name + " Mobile</a> on your Phone or Tablet at <a href=https://M." + t.g_hPlatform.name + ".com target=_top>https://M." + t.g_hPlatform.name + ".com</a>.\
 <br><br> All " + t.g_hPlatform.performer + "s are over the age of 18. " + A('2257') + "18 U.S.C. 2257 Record Keeping Requirements Compliance Statement</a>. <br><br> &copy; Copyright 2004-" + (new Date().getFullYear()) + " " + t.g_hPlatform.name + ".com, all rights reserved. " + A('terms') + "Terms and Conditions</a>.  " + A('privacy_policy') + "Privacy Policy</a>. <br> "; } sFooter += "</div>"; } var sPlayerDrop = " ondrop=\" event.preventDefault(); if(t.nDragUserId && t.g_hUsers[t.nDragUserId] && t.g_hUsers[t.nDragUserId].access_level==4 ) { if(Lounge.bIsLoaded && Lounge.hSettings['lounge_auto_click_link'] & LOUNGE_MASK_LOUNGE_MODE ) { GetEl('message_input').value += ' ' + t.g_hUsers[t.nDragUserId].username + ' '; GetEl('message_input').focus(); } else { LoadPlayer('player', { broadcaster_id: t.nDragUserId } ); } t.nDragUserId=0; } this.classList.remove('highlight_bg'); \" ondragover=\" event.preventDefault(); if(! MfcBroadcasterDisplay.drag && t.g_hUsers[t.nDragUserId] && t.g_hUsers[t.nDragUserId].access_level==4 ) this.classList.add('highlight_bg'); \" ondragleave=\" this.classList.remove('highlight_bg'); \" "; var sChatOverlayHeaderHtml = " <div class=\"chat_tabs\"> <div class=\"chat_tab hide_chat_tab chat_border_bgcolor no_select\" title=\"Hide the chat overlay\"> <img src=\"" + t.g_hPlatform.image_url_cdn + "files/images/svg/show_chat.svg\"> </div> <div class=\"chat_tab move_tab chat_border_bgcolor no_select\" title=\"Click and drag to move the chat window. Double-click to reset back to the default position and size.\"> <img src=\"" + t.g_hPlatform.image_url_cdn + "files/images/svg/move_chat.svg\"> </div> <div class=\"chat_tab opacity_tab chat_border_bgcolor\" title=\"Change Opacity\"> <img src=\"" + t.g_hPlatform.image_url_cdn + "files/images/svg/opacity_chat.svg\"> <input type=\"range\" min=\"0\" max=\"1\" value=\"1\" id=\"opacity-slider\" step=\"0.01\">\
 </div> <div class=\"chat_tab chat_border_bgcolor fullscreen_tab no_select hide\" title=\"Toggle Fullscreen Mode\"> <img data-on=\"" + t.g_hPlatform.image_url_cdn + "files/images/svg/fullscreen-exit.svg\" data-off=\"" + t.g_hPlatform.image_url_cdn + "files/images/svg/fullscreen.svg\"> </div> <div class=\"chat_tab exit_tab chat_border_bgcolor\" title=\"Exit Chat Overlay Mode\"> <img src=\"" + t.g_hPlatform.image_url_cdn + "files/images/svg/exit_chat.svg\"> </div> </div> "; var sChatOverlayShowChatHtml = " <div class=\"chat_tab show_chat_tab chat_border_bgcolor no_select\" title=\"Show Chat\" style=\"position: absolute;\"> <a href=\"#\" class=\"chat_show_link chat_tab_settings_link no_select\"><img src=\"" + t.g_hPlatform.image_url_cdn + "files/images/svg/show_chat.svg\"></a> <div class=\"show_chat_tab_new_messages\"></div> </div> "; var chat_contents_class = ''; var size = t.g_hSelf.font_size_chatroom && t.g_hSelf.font_size_chatroom.replace(/-/g,'_'); chat_contents_class += ( size && ( 'chat_font_size_' + size ) ) || ' '; if(t.g_hSelf.hide_usernames_chatroom ) { chat_contents_class += ' hide_usernames_chatroom '; } if(t.g_hSelf.hide_avatars_chatroom ) { chat_contents_class += ' hide_avatars_chatroom '; } var sVideo; if(t.g_hPlatform.id == PLAT_MFC && t.location.search.indexOf('corner_video') > -1 ) { sVideo = " <div id=video_top></div> <div id=video_area style=\"overflow:hidden;text-align:;padding-top:5px;display:inline-block;\"> %video% <div id=video_controls style=\"font-size:11px;text-align:center;padding-top:6px;padding-bottom: 10px;\"></div> <div style=\"" + ( t.g_hPlatform.id == PLAT_CAM ? 'display:none;':'' ) + "\">\n <div align=center class=room_header style=\"position:relative;width:100%;height:25px;font-size:12px;\"> <div class=room_header_bg></div> <table width=100% cellpadding=0 cellspacing=0 > <tr> <td valign=top id=slim_mode_toggle style=\"padding:7px 5px 0px 0px;\"> <div id=\"slim_mode_enable\" class=\"slim_mode_toggle\" title=\"Enable Slim Viewing Mode\" onClick=\"SlimMode(true);\">-</div> <div id=\"slim_mode_disable\" class=\"slim_mode_toggle\" title=\"Disable Slim Viewing Mode\" style=\"display:none;\" onClick=\"SlimMode(false);\">+</div> </td> <td id=title_left style='font-size:19px;vertical-align:top;'></td> <td id=title_line_container ></td> <td id=title_right style='font-size:19px;vertical-align:top;'></td> </tr> <tr> <td colspan=4 align=center valign=center><div id=topic_container></div></td> </tr> </table>\
 </div>\n </div>\n <div id=room_options style='font-size:13px;padding-top:8px;white-space:nowrap;'></div> <div id=slim_mode_room_options style='display:none;font-size:12px;padding:1px 0px 9px 0px;white-space:nowrap;'></div> </div>\n <div id=video_bottom></div> "; } else { sVideo = " <div id=video_top></div> <div id=video_area style=\"overflow:;margin-top:10px;\"> <div style=\"" + ( t.g_hPlatform.id == PLAT_CAM ? 'display:none;':'' ) + "\">\n <div style=\"position:relative;padding-top:30px;font-size:12px;border:0px dashed yellow;width:100%;\"> <table cellpadding=0 cellspacing=0 id=title_table border=0 width=100% style=\"position:absolute;top:0px;\"> <tr> <td valign=top id=slim_mode_toggle style=\"width:10px;padding:7px 5px 0px 0px;\"> <div id=\"slim_mode_enable\" title=\"Enable Slim Viewing Mode\" onClick=\"SlimMode(true);\"><img src=\"/files/images/svg/minimize2.svg\" class=\"slim_mode_toggle\" style=\"height: 12px; margin-top: -1px;\"></div> <div id=\"slim_mode_disable\" title=\"Disable Slim Viewing Mode\" style=\"display:none;\" onClick=\"SlimMode(false);\"><img src=\"/files/images/svg/maximize2.svg\" class=\"slim_mode_toggle\" style=\"height: 12px; margin-top: -1px; \"></div> </td> <td id=title_left style='width:16px;font-size:19px;vertical-align:top;'></td> <td id=title_line_container style=\"border:0px dashed orange;position:relative;\"></td> <td id=title_right style='width:16px;font-size:19px;vertical-align:top;'></td> </tr> </table> <div style=\"display:table;width:100%;\"> <div id=topic_container style=\"border:0px dashed pink;width:100%;text-align:center;vertical-align:middle;display:table-cell;position:relative;height:40px;\"></div> </div> </div> </div> %video% <div id=video_controls style=\"min-height:20px;font-size:11px;text-align:center;padding-top:5px;padding-bottom: 0px;\"></div> <div id=room_options style='font-size:13px;padding-top:2px;white-space:nowrap;'></div> <div id=slim_mode_room_options style='min-height: 22px;display:none;font-size:12px;padding:1px 0px 9px 0px;white-space:nowrap;'></div> </div> <div id=video_bottom></div> "; } var hTemplates = { homepage: "\n <div id=online_broadcasters_container_top></div> <div style='width:100%;height:100%;overflow:hidden;position:relative;'> <div id=online_broadcasters_container style=\"position:absolute;top:0px;right:0px;bottom:0px;left:0px;overflow-x:hidden;overflow-y:auto;height:100%;max-height:100%;width:100%;\"> " + sHeader + " <div style=\"padding-top:" + ( bExtraHeadRoom ? 85 : 45 ) + "px;padding-left:10px;\">\n <div id=homepage_update style='margin-bottom:10px;display:none;'></div>\n <div id=online_broadcasters class=online_broadcasters style='margin-top:0px;margin-left:0px;padding-bottom:45px;'\
 ondragover=\"event.preventDefault();\" >\n <div id=online_broadcasters_header></div> <div id=online_broadcasters_list class=online_broadcasters_list></div> <div id=online_broadcasters_footer></div> </div>\n </div>\n <div>\n <div style=\"padding-left:8px;\" id=topics_search_matches></div> <div style=\"padding-left:8px;\" id=tags_search_matches></div> <div style=\"padding-left:8px;\" id=model_tag_region></div> <div style=\"padding-left:8px;\" id=newsfeed_search_matches></div> <div style=\"padding-left:8px;\" id=share_search_matches></div> </div>\n " + sFooter + " <div id=online_broadcasters_container_content_bottom style=\"\">&nbsp;</div> </div> </div> <div id=online_broadcasters_container_bottom></div> <div class=online_model_controls_container id=online_model_controls_container> <div class=online_model_controls id=\"online_model_controls\"> %online_model_controls%  </div> </div> ", player: "\n <div id=main_player_table style='position:relative;'>\n <div id=videochat_container_td valign=top style=\"position:relative;padding-bottom:0px;padding-top:0px;padding-left:8px;\"> <table cellpadding=0 cellspacing=0 border=0 width=100% id=videochat_table > <tr id=videochat_table_top_row " + sPlayerDrop + " onContextMenu=\"return ModelMenuContext(event,this);\"> <td id=video_td style=\"vertical-align:middle;text-align:center;\">\n " + sVideo + " </td>\n <td id=resize_video_td style=\"position:relative;z-index:1;padding-left:8px;text-align:center;color:gray;\" title=\"Drag right or left to resize the video.\" valign=center> <img draggable=false id=resize_video_icon style=\"position:absolute;top:50%;left:0px;width:16px;height:16px;z-index:0;opacity:0.2;margin-left: -6px;\" src=\"" + t.g_hPlatform.image_url_cdn + "files/images/icons/png/split_horizontal.16x16.png\"> <div id=click_drag_video_grip style=\"position:absolute;z-index:1;height:calc(100% - 40px);width:20px;top:40px;left:-15;cursor:e-resize;\"> </div> </td>\n <td id=chat_td width=100% valign=top >\n <div id=chat_container_message style=\"%chat_container_message_style%font-size:10px;text-align:center;color:#999999;\">%chat_container_message%</div>" + sChatOverlayShowChatHtml + " <div id=chat_container style=\" word-break: break-word; %chat_container_style%\" class=\"chat_border_bgcolor\">\n" + sChatOverlayHeaderHtml + "<table cellpadding=0 cellspacing=0 width=100% id=chat_table class=chat_table border=0 style=\"%chat_table_style%\">\n <tr>\n <td style='margin-bottom:0px;'>\n <div style='width:100%;position:relative;overflow:hidden;' name=chat_box id=chat_box >\n <div id=chat_contents class=\"chat_contents " + chat_contents_class + "\"\n style='position:absolute;" + ( g_UA.Android ? 'bottom:0px;':'height:100%;width:100%;overflow-x:hidden;overflow-y:auto;overflow:auto;' ) + "'>\n\
 </div>\n <div id=room_heading style='font-size:12px;position: absolute; left: 0px; top: 3px; font-size: 11px; background-color:#fff; padding: 3px 7px; border-radius:3px; border: 1px solid #66666644; box-shadow: 0px 2px 6px rgba(0,0,0,0.17);'></div> <div id=people_reveal title=\"Show People in Chat\" style=\"position: absolute; right: 0px; top: 3px; font-size: 10px; background-color:#ffffffdd; padding: 3px 7px 3px 4px; border-radius:3px; border: 1px solid #66666644; box-shadow: 0px 2px 6px rgba(0,0,0,0.17); %people_reveal_style%\"> <span id=people_box_toggle><a href=# onClick=\"PeopleBoxHelper.Toggle(0); return false;\" style='text-decoration:none;'><img src=/files/images/svg/maximize2.svg style='height: 10px; margin-bottom: -1px;margin-right: 4px;'></a></span> <span class=people_count_container><span id=people_count2 style=\" \"></span>&nbsp;People</span></span>&nbsp;" + "<a href=# class=\"chat_options_link\" onClick=\"ChatOptions_Player.Popup(); return false;\">" + ( t.g_hPlatform.id == PLAT_CAM ? "<img width=12 src='" + t.g_hPlatform.image_url_cdn + "images/flat/stroke/svg/wrench-1.svg'>" : "<b><span style=\"font-size:10px;\" id=chat_options_link >Options</span></b>" ) + " </div>\n </td>\n <td style='position:relative;%people_content_td_style% border-top:1px solid transparent;padding-left:5px;' valign=top id=people_content_td class=people_content_td>\n <div id=people_header class=people_header style=\"border-bottom: 1px solid #EEE;\"> <table height=30 width=100% cellpadding=0 cellspacing=0 border=0> <td style='font-size:10px;white-space:nowrap;width: 95px; '> <a href=# title=\"Hide Viewer List\" onClick=\"PeopleBoxHelper.Toggle(1); return false;\" style='text-decoration:none;'><img src=/files/images/svg/minimize2.svg style='height: 10px; margin-bottom: -1px; margin-right: 5px;'></a> <span id=room_heading_end></span> <span class=people_count_container> <span id=people_count style=\"\"></span><span id=people_count_label class=people_count_label>People</span> </span> </td> <td align=right style=\"padding-right:8px;\" nowrap> " + ( t.g_hPlatform.id == PLAT_CAM ? "<img src='" + t.g_hPlatform.image_url_cdn + "images/flat/stroke/svg/flag-2.svg' onClick=\"FlagContent.open();\" style=\"cursor:pointer;\">&nbsp;" : "" ) + "<a href=# onClick=\"ChatOptions_Player.Popup(); return false;\">" + ( t.g_hPlatform.id == PLAT_CAM ? "<img width=16 src='" + t.g_hPlatform.image_url_cdn + "images/flat/stroke/svg/wrench-1.svg'>" : "<b><span style=\"font-size:10px;padding-left:2px;\" id=chat_options_link2 >Options</span></b></a>") + " </td> </table> </div> <div style='position:relative;' id=people_box class=people_box> <div class=people_contents style='overflow-x:hidden;overflow-y:auto;padding-left:0px;' id=people_contents ></div>\n </div> </td>\n </tr>\n <tr>\n <td id=chat_input_td colspan=2 valign=bottom>\n <div class=player_input_container >\n <div style=\"position:absolute;height:100%;width:100%;padding-top:2px;\"> <div style=\"padding-right:95px;padding-left:5px;\"> <input type=text id=message_input name=message_input  class=player_message_input style=\"%input_style%\" MAXLENGTH=160 onKeyDown=\" KeyDown(event); \" onKeyPress=\" KeyPress(event); \"\
 onKeyUp=\" KeyUp(event); \" onMouseDown=\" MessageInput_MouseDown(event); \" onMouseOver=\" iPhone_InputNoZoom.MouseOver(); \" onMouseUp=\" iPhone_InputNoZoom.MouseUp(); if(g_UA.iOS ) { GetEl('video_td').style.verticalAlign='bottom'; } \" onContextMenu=\"event.stopPropagation();\" ondrop=\" event.preventDefault(); if(t.nDragUserId && t.g_hUsers[t.nDragUserId] ) this.value = this.value + ' ' + t.g_hUsers[t.nDragUserId].username + ' '; t.nDragUserId=0; this.classList.remove('highlight_bg'); this.style.backgroundColor='transparent'; this.focus(); this.value=this.value; \" ondragover=\" event.preventDefault(); this.style.backgroundColor=''; this.classList.add('highlight_bg'); \" ondragleave=\" this.style.backgroundColor='transparent'; this.classList.remove('highlight_bg'); \" autocomplete=\"off\" >\n </div> </div> <div style=\"position:absolute;right:3px;top:3px;text-align:right;text-align:center;\"> <div id=chat_image_controls style='position:absolute;right:50px;top:5px;white-space:nowrap;'></div> <input type=button style='position:absolute;right:2px;top:2px;font-size:11px;width:43px;' value='Send' onClick=\"Send();\" id=send_button> </div> </div>\n </td>\n </tr>\n </table>\n <!--<i"+"mg sr"+"c=" + t.g_hPlatform.image_url_cdn + "files/images/misc/clear.gif width=230 height=1><br>-->\n </div> </td>\n </tr> <tr> <td style=\"position:relative;" + ( ModelMenuBar.bChatUnderVideo ? '':'display:none;' ) + "\" id=click_drag_chat_under_video_td>\n <img id=click_drag_chat_under_video_grip_icon style=\"position:absolute;top:-8px;left:calc(50%);height:16px;width:16px;z-index:2;opacity:0.2;\" src=\"" + t.g_hPlatform.image_url_cdn + "files/images/icons/png/split_vertical.16x16.png\">\n <div id=click_drag_chat_under_video_grip style=\"position:absolute;top:-8px;height:16px;width:calc(100% - 5px);border-radius: 8px;z-index:2;text-align:center;color:gray;cursor:s-resize;\" title=\"Drag up or down to resize the chat room and " + t.g_hPlatform.performer + " list.\">&nbsp;</div>\n <div id=click_drag_chat_under_video_reset style=\" border: 1px solid #BBB; position: absolute; top: -9px; left: 34px; font-size: 8px; z-index: 3; background-color:#fff; padding: 1px 5px; border-radius:2px; display:none;\" ><a href=\"javascript:ClickDragVideo.ModelListSizeReset();\">Reset</a></div>\n </td>\n </tr> <tr id=below_video_tr></tr> </table> </div> <div id=videochat_footer style=\"font-size:1px;position:absolute;bottom:0px;\">&nbsp;</div></td> </div>\n <div style=\"position:relative;" + ( ModelMenuBar.bHideOnlineModels ? 'display:none;':'' ) + "\" id=click_drag_model_list_td>\n <img id=click_drag_model_list_grip_icon style=\"position:absolute;top:-8px;left:10px;height:16px;width:16px;z-index:2;opacity:0.2;\" src=\"" + t.g_hPlatform.image_url_cdn + "files/images/icons/png/split_vertical.16x16.png\">\n <div id=click_drag_model_list_grip style=\"position:absolute;top:-1px;left:10px;height:16px;border-radius:8px;width:calc(100% - 20px);z-index:2;text-align:center;color:gray;cursor:s-resize;\" title=\"Drag up or down to resize the chat room and " + t.g_hPlatform.performer + " list.\">&nbsp;</div>\n <div id=click_drag_model_list_reset style=\" border: 1px solid #BBB; position: absolute; top: -9px; left: 34px; font-size: 8px; z-index: 3; background-color:#fff; padding: 1px 5px; border-radius:2px; display:none;\" ><a href=\"javascript:ClickDragVideo.ModelListSizeReset();\">Reset</a></div>\n </div>\n\
 <div id=online_broadcasters_td style=\"position:relative;height:100px;\">\n <div id=lower_half_controls style='position:relative;'></div> <div style='position:relative;'><div id=mouse_move_shield style='display:none;z-index:1002;position:absolute;top:0px;left:0px;width:300px;height:100px;background-color:transparent;'></div></div> <div id=iframe_content_container style='height:100%;overflow:hidden;position:relative;display:none;'></div> <div id=online_broadcasters_container_top_td style='height:;position:relative;'> <div id=online_broadcasters_container_top></div> <div id=online_broadcaster_controls_container_minimized style=\"display:none;text-align:right;padding-top:5px;font-size:12px;height:20px;padding-right:10px;\"></div> <div id=online_broadcaster_controls_container style='z-index:2;position:relative;'> <div class=online_model_controls_top_trim></div> <div class=\"online_model_controls_container player_mode\" id=online_model_controls_container style=\"right:" + ( bNoScrollBar ? 0 : 17 ) + "px;\"> %online_model_controls% </div> </div> <div id=online_broadcasters_available_space style='position:relative;height:100%;min-height:135px;'>\n <div id=online_broadcasters_container style='" + ( t.g_hSelf['single_page_website'] ? 'position:relative;' : 'position:absolute;' ) + "top:0px;right:0px;bottom:0px;left:0px;overflow-y:scroll;overflow-x:hidden;height:;max-height:100%;width:100%;margin-left:0;background-color: #6666660C;'>\n <div id=online_broadcasters class=online_broadcasters style=\"padding-top:" + ( bExtraHeadRoom ? 80 : 40 ) + "px;width:100%;padding-bottom:25px;padding-left:10px;\" ondragover=\"event.preventDefault();\" >\n <div id=homepage_update style='margin-bottom:10px;display:none;'></div>\n <div id=online_broadcasters_header></div> <div id=online_broadcasters_list class=online_broadcasters_list></div> <div id=online_broadcasters_footer></div> </div> <div id=topics_search_matches style=\"clear:both;\"></div> <div id=tags_search_matches style=\"clear:both;\"></div> <div id=model_tag_region style=\"clear:both;\"></div> <div id=newsfeed_search_matches style=\"clear:both;\"></div> <div id=share_search_matches style=\"clear:both;\"></div> <div id=online_broadcasters_container_content_bottom style=\"clear:both;\">&nbsp;</div> " + sFooter + " </div>\n </div>\n </div> <div id=online_broadcasters_container_bottom></div> </div> </div>\n <div id=toggle_video_reveal style=\"display:none;border:1px solid #AAAAAA;padding:3px;font-size:10px;position:absolute;top:7px;left:4px;border-radius:2px;\" class=highlight_bg ><a href=# onClick=\" ToggleVideo.HideAll('toggle'); return false;\"><b>Un-Hide Video</b></a></div> ", tags_in_player: " <div style=\"height:100%;margin:0px 0px 20px 0px;\"> <div class=search_section><a name=tags_section>&nbsp;</a></div> <table border=0 cellspacing=0 height=100% width=98% style=\"height:100%;padding-bottom:50px;\"> <tr> <td style='font-size:18px;border-bottom:1px solid #dddddd;padding-bottom:0px;'> 3. " + A('model_tags',{ search: ModelMenuBar.Search.sQuery }) + t.g_hPlatform.Performer + " Tags</a>&nbsp;matching \"<span id=model_tag_match style=\"font-weight:bold;\"></span>\" <span id=model_tag_match_extra></span> (<a href=\"javascript:ModelMenuBar.Search.Execute('clear');\">Clear Search</a>) </td> </tr>\
 <tr> <td> <div style='padding:10px 20px;font-size:10px;'> " + t.g_hPlatform.Performer + "s write their own tags. " + t.g_hPlatform.name + " does not review them. Only showing tags from " + t.g_hPlatform.performer + "s currently online. </div> </td> </tr> <tr> <td valign=top height=100% style='padding:0px 15px;height:100%;border-bottom:1px solid #cccccc;'> <table border=0 height=100% width=100% style=\"height:100%;\"> <tr> <td height=100% width=200 style=\"height:100%;\"> <table height=100% width=100% style=\"height:100%;\" border=0>\<!-- <tr> <td> <div style=\"font-size:11px;padding-bottom:13px;\">Sort: <span id=sort_cam_score class=highlight_fgbg ><a href=\"javascript:g_oTags.TagSort('cam_score');\">by Cam Score</a></span> | <span id=sort_tag ><a href=\"javascript:g_oTags.TagSort('tag');\"># of " + t.g_hPlatform.Performer + "s</a></span> | <span id=sort_alphabetically ><a href=\"javascript:g_oTags.TagSort('alphabetically');\">Alphabetically</a></span> </div> </td> </tr>\--> <tr> <td height=100% style=\"height:100%;\"> <div style=\"height:100%;position:relative;\"> <div style='position:absolute;overflow:auto;height:100%;' id=tags></div> </div> </td> </tr> </table> </td> <td height=100% style=\"height:100%;border-left:1px solid #cccccc;\"> <table heigh=100% width=100% style=\"height:100%;\" border=0> <tr> <td height=100% style=\"height:100%;\"> <div style=\"height:100%;position:relative;\"> <div style='position:absolute;width:100%;padding-left:8px;overflow:hidden;height:100%;' id=tags_content></div> </div> </td> </tr> </table> </td> </tr> </table> </td> </tr> </table> </div>\
 " }; return hTemplates[ sTemplate ].replace(/>\s+</g,'><');}var Countdown = { hPreviousCountdownData: { }};Countdown.Receive = function(hCountdown ){ if(hCountdown.model != g_nBroadcasterId ) { return; } if(hCountdown.topic && t.g_hUsers[ g_nBroadcasterId ] ) { t.g_hUsers[ hCountdown.model ].topic = t.StoreUserHash.sanitize(hCountdown.topic, 'topic' ); RoomTopic.render_topic(); } if(t.g_hUsers[ g_nBroadcasterId ].roomHelper == t.g_hSelf.user_id ) { Countdown.VerboseUpdates(hCountdown ); }};Countdown.VerboseUpdates = function(hCountdown ){ var nChange = 0; if(hCountdown.countdown != Countdown.hPreviousCountdownData.countdown ) nChange = hCountdown.countdown ? 1 : -1; var sMsg; var sChatStyle; if(hCountdown.total != undefined ) { if(nChange != 0 || hCountdown.src != 'notify' ) { sChatStyle = 'system'; if(typeof(hCountdown.total) == 'number' && typeof(hCountdown.sofar) == 'number' ) { if(nChange == 0 )
 { if(hCountdown.sofar == 0 ) sMsg = "* Updated tip countdown to " + hCountdown.total + " tokens!"; else sMsg = "* Updated tip countdown to " + ( hCountdown.total - hCountdown.sofar ) + " tokens! (" + hCountdown.sofar + " of " + hCountdown.total + " total)"; } else if(nChange == -1 ) { if(hCountdown.sofar < hCountdown.total ) sMsg = "* Tip countdown ended with " + ( hCountdown.total - hCountdown.sofar ) + " tokens still remaining."; else sMsg = "* Tip countdown completed, no remaining tokens!"; } else if(nChange == 1 ) { if(hCountdown.sofar == 0 ) sMsg = "* Tip countdown started for " + hCountdown.total + " tokens!"; else sMsg = "* Tip countdown started for " + hCountdown.total + " tokens! (" + hCountdown.sofar + " of " + hCountdown.total + " total)"; } } } else if(nChange == 0 && hCountdown.src == 'notify' ) { sChatStyle = 'countdown'; if(typeof(hCountdown.total) == 'number' && typeof(hCountdown.sofar) == 'number' ) sMsg = "* " + ( hCountdown.total - hCountdown.sofar ) + " tokens remain in the countdown!"; } } if(sMsg ) ChatQueue.Format_Append(sMsg, 0, { chat_style: sChatStyle } ); Countdown.hPreviousCountdownData = hCountdown;};var dhtmlPopop_PlayerCallback = { oIframeBacking: {} };dhtmlPopop_PlayerCallback.resize = function(sInstanceName, hSizeLoc ){ var oIframeBacking = document.createElement('iframe'); if(! dhtmlPopop_PlayerCallback.oIframeBacking[ sInstanceName ] ) dhtmlPopop_PlayerCallback.oIframeBacking[ sInstanceName ] = new Array(); dhtmlPopop_PlayerCallback.oIframeBacking[ sInstanceName ].push(oIframeBacking ); oIframeBacking.height = hSizeLoc.height; oIframeBacking.width = hSizeLoc.width - 3;
 oIframeBacking.style.position = 'absolute'; oIframeBacking.style.top = hSizeLoc.top; oIframeBacking.style.left = hSizeLoc.left + 3; oIframeBacking.style.backgroundColor = 'gray'; var oBody = document.getElementsByTagName('body')[0]; if(oBody && oBody.appendChild ) oBody.appendChild(oIframeBacking);};dhtmlPopop_PlayerCallback.close = function(sInstanceName ){ var aIframes = dhtmlPopop_PlayerCallback.oIframeBacking[ sInstanceName ]; if(! aIframes || ! aIframes.length ) { return; } for(var a=0; a < aIframes.length; a++ ) { var oIframeBacking = aIframes[a]; if(oIframeBacking && oIframeBacking.parentNode ) oIframeBacking.parentNode.removeChild(oIframeBacking ); }};function InstantiateDhtmlPopup_Player(){ if(window.g_oDhtmlPopup ) { return; } window.g_oDhtmlPopup = new MfcDhtmlPopup({ persistent: true, instance_name: 'player_popup', mfcMouseTracker: g_oMouseTracker, mfcGraphics: g }); window.g_oDhtmlPopup_child = new MfcDhtmlPopup({ persistent: true, instance_name: 'player_popup_child', mfcMouseTracker: g_oMouseTracker, mfcGraphics: g });}var g_hCache = {};var mfcBroadcasters = new MfcBroadcasters({ hUsers: t.g_hUsers,
 hSelf: t.g_hSelf, hLoungeIds: t.g_hLoungeIds, hAdvanceRoom: AdvanceRoom, hStates: FCS, sModelSearch: ModelMenuBar.Search.sQuery, fGetBoolSearch: function() { return ModelMenuBar.Search.hBoolSearch; }, nBroadcasterId: g_nBroadcasterId, bShowOnlyNew: ToggleNewModels.nShowOnlyNew, MfcTrendingRooms: t.MfcTrendingRooms, fBlockedModelRegionCheck: t.BlockedModelRegionCheck, fIsBroadcastState: IsBroadcastState, fCharPadding: MfcStringUtilities.char_padding, fGetPlatform: function() { return t.g_hPlatform; }, fGetRecommendations: function() { return LoadRecommendations.GetRecommendations(); }, fGetModelHistory: t.ModelHistory.GetHistory, fGetModelHistory: t.ModelHistory.GetHistory, fIsH5Video: function(id) { return t.g_default_clientVideo.IsH5SupportedVideo(id ); }});var g_hMfcBroadcasterDisplay_config = { hCache: t.g_hOnlineBlockHTML, hUsers: t.g_hUsers, hSelf: t.g_hSelf, hLoungeIds: t.g_hLoungeIds, hStates: FCS, nBroadcasterId: g_nBroadcasterId, sContainingDiv: 'online_broadcasters_container', hUA: g_UA, hQS: t.g_hQS, hC: g_hC, nModelsPerPage: t.g_hSelf.models_per_page, fA: A, fAvatarUrl: AvatarUrl, fLiveSnapUrl: t.LiveSnapUrl,
 fGetEl: GetEl, fBroadcasters: function(){ return mfcBroadcasters.FilteredAndSorted(); }, fMfcCustomFonts: MfcCustomFonts.prototype.get_style, fMfcCustomColor: MfcCustomFonts.prototype.get_font_color, fParseTemplate: MfcStringUtilities.parse_template, fPageBox: OnlineBroadcasterList.ChangePage, fRefreshEvent: ModelListRefreshActions, fUpdateScrollDisplay: ModelMenuBar.Message.Set, sScrollingReferenceType: ( 1 ) ? 'div' : 'body', bUsePseudoLinks: top.location.search.match(/pseudo_links/) ? 1 : 0, oCmdQ: t.g_oCmdQ, sModelSearch: ModelMenuBar.Search.sQuery, oAnimatedLiveSnaps: new AnimatedLiveSnaps({ getSnapUrl: t.LiveSnapUrl, onClickAction: function() {} }), fGetBoolSearch: function() { return ModelMenuBar.Search.hBoolSearch; }, fPublicChannel: PublicChannel, fGetPlatform: function() { return t.g_hPlatform; }, fGetRecommendedModels: function() { return mfcBroadcasters.GetRecommendedModels(); }, fGetRecommendModelId: function() { return LoadRecommendations.nRecommendModelId; }, fGetRegionTopModels: function() { return mfcBroadcasters.GetRegionTopModels(); }, fGetPopularRooms: function() { return mfcBroadcasters.GetPopularRooms(); }, fGetModelHistory: function() { return mfcBroadcasters.GetModelHistory(); }, fFindDataTag: FindDataTag, fIsH5Video: function(id) { return t.g_default_clientVideo.IsH5SupportedVideo(id ); }, fGetTrendingRooms_Request: function() { return mfcBroadcasters.GetTrendingRooms_Request(); }, fGetTrendingRoomData: function() { return mfcBroadcasters.GetTrendingRoomData(); }, fGetCustomAlerts: function() { return mfcBroadcasters.GetCustomAlerts(); }, fGetDisplayedTrendingRooms: function() { return mfcBroadcasters.GetDisplayedTrendingRooms(); }, fIsNightMode: function() { return t.NightMode_Top.enabled; }, fPauseRefresh: function() { return t.LiveSnapImage.videoIsPlaying || ModelMenuBar.AutoScroll_timer; }, fAutoScrollInProgress: function() { return ModelMenuBar.AutoScroll_timer; }, oPersonalMenu: t.TogglePersonalMenu, fGetCurrentBroadcasterId: function() { return GetBroadcasterId(); }, fProcessDynamicTopic: ProcessDynamicTopic, fGetBroadcasterCount: function() { return t.g_nBroadcasterCount; }, mfcBroadcasters: mfcBroadcasters, fAddClass: addClass, fRemoveClass: removeClass, hAutoSizingPatterns: { 'homepage': { 1: {}, 2: {}, 4: {}, 5: {}, 8: {} }, 'player': { 1: {}, 2: {}, 4: {}, 5: {}, 8: {} } }, hPatternDimensions: { 'homepage': { 1: { box_w: 96, box_h: 110, margin_r: 3, margin_b: 5, topic_h:130, links_h:34 }, 2: { box_w: 159, box_h: 178, margin_r: 6, margin_b: 6, topic_h:72, links_h:20 }, 3: { box_w: 160, box_h: 22, margin_r: 6, margin_b: 3, topic_h:0 }, 4: { box_w: 175, box_h: 117, margin_r: 7, margin_b: 7, topic_h:95, links_h:18 }, 5: { box_w: 270, box_h: 178, margin_r: 8, margin_b: 8, topic_h:42 },
 6: { box_w: 100, box_h: 157, margin_r: 4, margin_b: 4, topic_h:150 }, 7: { box_w: 160, box_h: 210, margin_r: 2, margin_b: 2, topic_h:150 }, 8: { box_w: 132, box_h: 138, margin_r: 4, margin_b: 4, topic_h:90 } }, 'player': { 1: { box_w:81, box_h:93, margin_r: 2, margin_b: 2, topic_h:107 }, 4: { box_w:128, box_h:91, margin_r: 4, margin_b: 4, topic_h:81 } } }, hBoxSizes: { homepage: { 1: { height:84, width:84, marginTop:5 }, 2: { height:145, width:145, marginTop:15 }, 4: { height:90, width:160, marginTop:2 }, 5: { height:169, width:262, marginTop:2 }, 6: { height:150, width:90, marginTop:2 }, 7: { height:204, width:150, marginTop:2 }, 8: { height:84, width:118, marginTop:2 } }, player: { 1: { height:69, width:69, marginTop:5 }, 4: { height:64, width:118, marginTop:10 } } }};if(t.g_hPlatform.id == PLAT_CAM ){ g_hMfcBroadcasterDisplay_config.hBoxSizes.homepage[1].height = 73; g_hMfcBroadcasterDisplay_config.hBoxSizes.homepage[1].width = 111; g_hMfcBroadcasterDisplay_config.hPatternDimensions.homepage[1].box_h = 120; g_hMfcBroadcasterDisplay_config.hPatternDimensions.homepage[1].box_w = 98; g_hMfcBroadcasterDisplay_config.hBoxSizes.homepage[2].height = 177; g_hMfcBroadcasterDisplay_config.hBoxSizes.homepage[2].width = 156; g_hMfcBroadcasterDisplay_config.hPatternDimensions.homepage[2].box_h = 180; g_hMfcBroadcasterDisplay_config.hPatternDimensions.homepage[2].box_w = 160; g_hMfcBroadcasterDisplay_config.hBoxSizes.homepage[4].height = 79; g_hMfcBroadcasterDisplay_config.hBoxSizes.homepage[4].width = 138; g_hMfcBroadcasterDisplay_config.hPatternDimensions.homepage[4].box_h = 133; g_hMfcBroadcasterDisplay_config.hPatternDimensions.homepage[4].box_w = 149; g_hMfcBroadcasterDisplay_config.hBoxSizes.homepage[5].height = 227; g_hMfcBroadcasterDisplay_config.hPatternDimensions.homepage[5].box_h = 227; g_hMfcBroadcasterDisplay_config.hPatternDimensions.homepage[5].box_w = 275;}var mfcBroadcasterDisplay = new MfcBroadcasterDisplay(g_hMfcBroadcasterDisplay_config );
mfcBroadcasters.hOptions.mfcBroadcasterDisplay = mfcBroadcasterDisplay;var g_hMousePressConfig_Player = { 'click_drag_video_grip': { left_click: { onmousedown: ClickDragVideo.OnMouseDown, onmouseup: ClickDragVideo.OnMouseUp, onmousemove: ClickDragVideo.OnMouseMove_ResizeLayout, onselectstart: function () { return false; } } }, 'click_drag_model_list_grip': { left_click: { onmousedown: ClickDragVideo.OnMouseDown, onmouseup: ClickDragVideo.OnMouseUp, onmousemove: ClickDragVideo.OnMouseMove_ResizeLayout, onselectstart: function () { return false; } } }, 'click_drag_chat_under_video_grip': { left_click: { onmousedown: ClickDragVideo.OnMouseDown, onmouseup: ClickDragVideo.OnMouseUp, onmousemove: ClickDragVideo.OnMouseMove_ResizeLayout, onselectstart: function () { return false; } } }, 'user\\d+': { right_click: { onmousedown: function(e,sName) { if(sName.match(/user(\d+)/) ) Player_popUserMenu_open(RegExp.$1 ); } } }, 'user_menu_\\d+': { left_click: { onmousedown: function(e,sName) { if(sName.match(/user_menu_(\d+)/) ) { Player_popUserMenu_open(RegExp.$1 ); } }
 } }, 'user_bio_\\d+': { left_click: { onmousedown: function(e,sName) { if(sName.match(/user_bio_(\d+)/) && t.g_hUsers[RegExp.$1] ) { A('bio',{ user_id: RegExp.$1, username: t.g_hUsers[RegExp.$1].username, do_click: 1 }); } } } }, 'player_left' : { left_click: { onmouseup: function(e) { if(typeof e == 'undefined' || !e.target.dataset ) { return; } var uid = e.target.dataset.uid/1; if(! uid ) { return false; } var un = t.g_hUsers[uid].username; TopLoadPlayer({ broadcaster_id:uid },e); } }, right_click: { onmousedown: function(e,sName) { if(typeof e == 'undefined' || !e.target.dataset ) { return; } var uid = e.target.dataset.uid/1; if(! uid ) { return false; } Player_popUserMenu_open(uid ); } } }, 'player_pop' : { left_click: { onmousedown: function(e) { if(! e.target.dataset ) { return; } var uid = e.target.dataset.uid/1; if(! uid ) { return false; } var un = t.g_hUsers[uid].username; TopLoadPlayer({ broadcaster_id:uid },e); } }, right_click: { onmousedown: function(e,sName) { if(! e.target.dataset ) { return; } var uid = e.target.dataset.uid/1; if ( ! uid ) { return false; } Player_popUserMenu_open(uid ); }
 } } };if(t.g_hQS['disable_context_menu'] ) { g_hMousePressConfig_Player = {}; }if(! window.mfcMousePress_Player ) { window.mfcMousePress_Player = new MfcMousePress(g_hMousePressConfig_Player ); }function Player_popUserMenu_open(nUserId, hOptions ){ if(event.stopPropagation) event.stopPropagation(); if(event.preventDefault) event.preventDefault(); hOptions = hOptions || {}; if(! nUserId || ! t.g_hUsers[ nUserId ] ) { return; } hOptions.broadcaster_id = g_nBroadcasterId; if(t.RoomHelper_TopHandlers ) hOptions.room_helper = t.RoomHelper_TopHandlers.authorized_rooms[ g_nBroadcasterId ]; popUserMenu.open(t.g_hUsers[ nUserId ], t.g_hSelf, g_oDhtmlPopup, hOptions ); return false;}var TagsHandlers = { bFrameLoaded: false, scroll_to_on_load: false};TagsHandlers.Load = function(){ ModelSearch.hMatches.tags = '-'; var oEl; if(( oEl = GetEl('model_tag_region') ) && ! TagsHandlers.bFrameLoaded ) { oEl.style.display='block'; oEl.style.height = '300px'; SetHTML('model_tag_region', HTMLTemplates('tags_in_player') ); TagsHandlers.bFrameLoaded = true; }
 var oEl; if(oEl = GetEl('model_tag_match') ) oEl.innerHTML = ModelMenuBar.Search.sQuery; if(TagsHandlers.scroll_to_on_load ) { location.hash = ''; location.hash = 'tags_section'; TagsHandlers.scroll_to_on_load = false; }};TagsHandlers.Unload = function(){ var oEl; if(oEl = GetEl('model_tag_region') ) { SetHTML('model_tag_region',''); } oEl.style.display='none'; TagsHandlers.bFrameLoaded = false;};TagsHandlers.UpdatePresentation = function(hHtml ) { hHtml = hHtml || {}; if(typeof(hHtml.aTagsIndex ) == 'object' ) { if(hHtml.aTagsIndex.length == 0 ) { var oEl = GetEl('model_tag_region'); oEl.style.display='block'; oEl.style.height = '115px'; SetHTML('model_tag_region'," <div class=search_section><a name=tags_section>&nbsp;</a></div> <div style='font-size:18px;border-bottom:1px solid #dddddd;'> 3. " + A('model_tags',{ search: ModelMenuBar.Search.sQuery }) + t.g_hPlatform.Performer + " Tags</a> matching \"<span style=\"font-weight:bold;\">" + ModelMenuBar.Search.sQuery + "</span>\" (<a href=\"javascript:ModelMenuBar.Search.Execute('clear');\">Clear Search</a>) </div> <div style='padding:30px 20px;font-size:15px;color:gray;'> <i>No Matches by Tag</i></span> &nbsp; (<a href=\"javascript:ModelMenuBar.Search.Execute('clear');\"><b>Clear Search</b></a>) </div> "); ModelMenuBar.Search.NoMatches('by_tags'); TagsHandlers.bFrameLoaded = false; } else { SetHTML('tags_matching', hHtml.aTagsIndex.length, { 'force': true } ); 
 SetHTML('tags',' <table cellspacing=0 cellpadding=0> <tr> <td class=tag_container_' + this.sWordSource + ' valign=top> ' + hHtml.aTagsIndex.join('') + ' </td> </tr> </table> ', { 'force': true }); } ModelSearch.hMatches.tags = hHtml.aTagsIndex.length; ModelMenuBar.Message.Set(); } if(hHtml.sTagsContentLabel && hHtml.aListOrder ) //&& typeof(hHtml.aTagsContent ) == 'object' )
 { var sOnlinePatternKey = g_sPlayerMode == 'player' ? 'online_model_pattern_player' : 'online_model_pattern'; var nTmpPattern = t.g_hSelf[sOnlinePatternKey]; if(t.g_hSelf[sOnlinePatternKey] == 2 ) { nTmpPattern = 1; } if(t.g_hSelf[sOnlinePatternKey] == 5 ) { nTmpPattern = 4; } var aHtml=[]; for(var a=0; a < hHtml.aListOrder.length; a++ ) { var hUser = t.g_hUsers[ hHtml.aListOrder[a] ]; if(! hUser ) { continue; } var hBroadcasterHtml = mfcBroadcasterDisplay._BuildBroadcasterHtml({ hUser: hUser, template: nTmpPattern }); aHtml.push(hBroadcasterHtml.sHtml ); } if(t.g_hSelf[sOnlinePatternKey] == 5 ) { mfcBroadcasterDisplay.SetHtmlTemplate(4); } SetHTML('tags_content', hHtml.sTagsContentLabel + aHtml.join(''), { 'force': true } ); var oEl = document.getElementById('tags_content'); var oContainingEl = document.getElementById('model_tag_region'); if(oEl && oContainingEl ) oContainingEl.style.height = oEl.scrollHeight + 150; mfcBroadcasterDisplay.ProcessCss({ oHtmlContainer: oEl }); } var oEl; if(oEl = GetEl('model_tag_match') ) oEl.innerHTML = ModelMenuBar.Search.sQuery;
 var oEl; if(oEl = GetEl('model_tag_match_extra') ) oEl.innerHTML = "(<a href=\"javascript:ModelMenuBar.Search.LoadAlternateTagsView('list');\">Show Results in List Format</a>)";};var g_oTags = new Tags({ fLoadTagsDisplay: TagsHandlers.Load, fUnloadTagsDisplay: TagsHandlers.Unload, fUpdatePresentation: TagsHandlers.UpdatePresentation, oLabelContainer: GetEl('label'), oTagsContainer: GetEl('tags')});var Tags = {};Tags.load = function(){ sH = Tags.prepareHTML(); var el = GetEl('tags_search_matches'); if(! el ) { console.log("tags_search_matches el not found"); return; } el.style.display = 'block'; el.innerHTML = sH; if(Tags.last_search != ModelMenuBar.Search.sQuery ) { Tags.userSelected = false; } Tags.getTagData();};Tags.unload = function(){ var el = GetEl('tags_search_matches'); if(! el ) { console.log("tags_search_matches el not found"); return; } el.innerHTML = '';};Tags.getTagData = function(){ if(Tags.userSelected || ( Tags.last_search == ModelMenuBar.Search.sQuery && Tags.selectedTag ) ) { Tags.placeTags(); Tags.getModelData(); return; } var oTagsReq = createRequestObject(); oTagsReq.open("GET", MfcClientRes.apiUrl + "/tags/models?format=assoc&sort=count&limit=50&search=" + encodeURIComponent(ModelMenuBar.Search.sQuery )); oTagsReq.onreadystatechange = () => { if(oTagsReq.readyState != 4 ) return; var data = t.ParseJSON(oTagsReq.responseText ); if(data && data.result && data.result.tags )
 { Tags.tags = data.result.tags; if(Tags.tags ) { Tags.placeTags(); Tags.selectedTag = Object.keys(Tags.tags)[0]; if(Tags.selectedTag ) { Tags.last_search = ModelMenuBar.Search.sQuery; Tags.getModelData(); } } } }; oTagsReq.send();};Tags.getModelData = function(){ if(Tags.last_selectedTag == Tags.selectedTag ) { Tags.placeModels(); return; } var oModelsReq = createRequestObject(); oModelsReq.open("GET", MfcClientRes.apiUrl + "/tags/models/" + encodeURIComponent(Tags.selectedTag ) + "?user_data=1&include_tags=1"); oModelsReq.onreadystatechange = () => { if(oModelsReq.readyState != 4 ) return; var data = t.ParseJSON(oModelsReq.responseText ); if(data && data.result ) { Tags.last_selectedTag = Tags.selectedTag; Tags.models = data.result; Tags.placeModels(); } }; oModelsReq.send();};Tags.loadModels = function(tag ){ Tags.userSelected = true; Tags.selectedTag = tag; Tags.getModelData();};Tags.placeTags = function(){ var set = [];
 var max=1; for(var tag in Tags.tags ) { if(max < Tags.tags[tag] ) { max = Tags.tags[tag]; } } var seachLc = ModelMenuBar.Search.sQuery.toLowerCase(); seachLc = seachLc.replace(/[^\w\s]/g,''); for(var tag in Tags.tags ) { var style=''; var fontSize = 10 + Math.round(( parseInt(Tags.tags[tag] ) / max ) * 30 ); var oRE = new RegExp("("+seachLc+")","gi"); var tagHtml = tag.replace(oRE,"<b>$1</b>"); tagHtml += "<span style=\"color:#888;font-size:10px;\">(" + Tags.tags[tag] + " " + ( Tags.tags[tag] > 1 ? 'models' : 'model' ) + ")</span>"; set.push(` <div id="Tags_tag_list_${tag}" class="Tags_tag_list" style="font-size:${fontSize}px;white-space:nowrap;padding:3px;${style};border-radius:3px;"> <a href=# onClick=\"Tags.loadModels('${tag}');\"> ${tagHtml} </a> </div> `); } var el = GetEl('Tags_tags'); if(el ) { el.innerHTML = set.join(''); }};Tags.placeModels = function(){ var set = []; var els = document.getElementsByClassName('Tags_tag_list'); for(var n=0; n < els.length; n++ ) { els[n].style.backgroundColor = ''; } var el = GetEl('Tags_tag_list_' + Tags.selectedTag ); if(el ) { el.style.backgroundColor = '#FFFF0044'; } var sOnlinePatternKey = g_sPlayerMode == 'player' ? 'online_model_pattern_player' : 'online_model_pattern'; var nTmpPattern = t.g_hSelf[sOnlinePatternKey]; if(t.g_hSelf[sOnlinePatternKey] == 2 ) { nTmpPattern = 1; } if(t.g_hSelf[sOnlinePatternKey] == 5 ) { nTmpPattern = 4; }
 var width = ( mfcBroadcasterDisplay.nColumnWidth || 150 ) - 5; for(var n in Tags.models.users ) { var hUser = t.g_hUsers[ Tags.models.users[n] ]; if(! hUser ) { continue; } var hBroadcasterHtml = mfcBroadcasterDisplay._BuildBroadcasterHtml({ hUser: hUser, template: nTmpPattern }); hBroadcasterHtml.sHtml = hBroadcasterHtml.sHtml.replace(/style="/,"style=\"width:" + width + "px;"); set.push(hBroadcasterHtml.sHtml ); } if(t.g_hSelf[sOnlinePatternKey] == 5 ) { mfcBroadcasterDisplay.SetHtmlTemplate(4); } var el = GetEl('Tags_models'); if(! el ) { console.log('Tags_models not found'); return; } el.innerHTML = ` <div style="position:absolute;right:20px;top:-20px;" id=tag_follow_control></div> `; el.innerHTML += set.join('');  mfcBroadcasterDisplay.ProcessCss({ oHtmlContainer: el }); Tags.placeFollowControl(); if(TagsHandlers.scroll_to_on_load ) { location.hash = ''; location.hash = 'tags_section'; setTimeout(function(){ location.hash = 'tags_section'; },1500); setTimeout(function(){ location.hash = ''; },5000); TagsHandlers.scroll_to_on_load = false; }};Tags.prepareHTML = function()
{ var sFrame = ` <div id=Tags_container style="padding-bottom:20px;"> <div style="font-size:18px;border-bottom:1px solid #dddddd;padding-bottom:0px;"> <div class=search_section><a name=tags_section>&nbsp;</a></div> 3. ${A('model_tags',{ search: ModelMenuBar.Search.sQuery })}${t.g_hPlatform.Performer} Tags</a> matching "<span style="font-weight:bold;">${ModelMenuBar.Search.sQuery}</span>\" (<a href=\"javascript:ModelMenuBar.Search.LoadAlternateTagsView('list');\">Show Results in List Format</a>) (<a href=\"javascript:ModelMenuBar.Search.Execute('clear');\">Clear Search</a>) </div> <div style='padding:10px 20px;font-size:10px;'> ${t.g_hPlatform.Performer}s write their own tags. ${t.g_hPlatform.name} does not review them. Only showing online ${t.g_hPlatform.performer}s. </div> <table> <tr> <td id=Tags_tags class=Tags_tags style="padding:10px;vertical-align:top;"></td> <td id=Tags_models class=Tags_models style="padding:10px;vertical-align:top;position:relative;width:100%;"></td> </tr> </table> </div> `; return sFrame;};Tags.searchTag = function(tag ){ TagsHandlers.scroll_to_on_load = true; var oSearchInput = GetEl('online_model_search'); if(! oSearchInput ) { return; } oSearchInput.value = tag; ModelMenuBar.Search.Interaction(window.event, oSearchInput );};Tags.placeFollowControl = function(){ var tag_control; if(Tags.getFollowedTag(Tags.selectedTag ) ) tag_control = `<a href=\"javascript:Tags.unfollowTag();\">Stop following the tag "${Tags.selectedTag}" on the Homepage</a> <i class="divider">•</i> `+t.A('model_tags')+`Manage Followed Tags</a>`; else tag_control = `(<a href=\"javascript:Tags.followTag();\">Follow the tag "${Tags.selectedTag}" on the Homepage</a>)`; var el = GetEl('tag_follow_control'); if(el ) el.innerHTML = tag_control;};Tags.followTag = function(tag ){ tag = tag || Tags.selectedTag; var followedTags = { tags: {} }; if(t.g_hSelf.followed_tags.charAt(0) == '{' ) { followedTags = t.ParseJSON(t.g_hSelf.followed_tags ); }
 followedTags.tags[ tag ] = 1; var sJSON = JSON.stringify(followedTags ); t.UserExtensions.Write('followed_tags', sJSON ); Tags.placeFollowControl(); mfcBroadcasterDisplay.ClearCache();};Tags.unfollowTag = function(tag ){ tag = tag || Tags.selectedTag; var followedTags = { tags: {} }; if(t.g_hSelf.followed_tags.charAt(0) == '{' ) { followedTags = t.ParseJSON(t.g_hSelf.followed_tags ); } delete followedTags.tags[ tag ]; var followedTags_string = ( Object.keys(followedTags.tags ).length ) ? JSON.stringify(followedTags ) : ''; t.UserExtensions.Write('followed_tags', followedTags_string ); Tags.placeFollowControl(); mfcBroadcasterDisplay.ClearCache();};Tags.getFollowedTag = function(tag ){ var followedTags; if(t.g_hSelf.followed_tags.charAt(0) == '{' ) { followedTags = t.ParseJSON(t.g_hSelf.followed_tags ); } return followedTags && followedTags.tags && followedTags.tags[ tag ];};Tags.getFollowedTags = function(){ var followedTags; if(t.g_hSelf.followed_tags.charAt(0) == '{' ) { followedTags = t.ParseJSON(t.g_hSelf.followed_tags ); } return ( followedTags && followedTags.tags ) || null; };var ChanOp_Player_Helpers = {};ChanOp_Player_Helpers.Kicked = function(hOp ){ hOp = hOp || {}; if(hOp.chan != PublicChannel(g_nBroadcasterId ) ) { return; } var nModelId = g_nBroadcasterId; var sMessage = "You have been kicked out of " + t.g_hUsers[ nModelId ].username + "'s room."; if(g_bPopupPlayer )
 { oEl = GetEl('videochat_container_td'); if(oEl ) { oEl.innerHTML = "<table height=100% width=100%><tr><td align=center valign=center>" + sMessage + "</td></tr></table>"; } } else { DhtmlPrompt({ prompt_type: 'alert', message: sMessage }); LoadPlayer('homepage', { broadcaster_id: 0 } ); }};var RoomHelper_PlayerHandlers = { countdownUI: null};RoomHelper_PlayerHandlers.EnableRoomHelper = function(){ setTimeout(RoomHeading.render, 500 );};RoomHelper_PlayerHandlers.DisableRoomHelper = function(){ setTimeout(RoomHeading.render, 500 );};RoomHelper_PlayerHandlers.AboutPopup = function(){ var sInfo = g_roomHelper.HelpHTML(); g_oDhtmlPopup.open(" <div class=mini_popup_header>Room Helper Info</div> <div class=mini_popup_content style=\"width:400px;font-size:13px;\"> <a href=# onClick=\"RoomHelper_PlayerHandlers.OpenChangeTopicPopup(); return false;\">Change Room Topic</a> &nbsp;  <a href=# onClick=\"RoomHelper_PlayerHandlers.Countdown_Popup(); return false;\">Modify Countdown</a><br><br> You may use the following <a href=\"https://wiki." + t.g_hPlatform.domain + "/wiki/Model_Chat_Commands\" target=\"_blank\">" + t.g_hPlatform.Performer + " Chat Commands</a>: <br><br> /topic /countdown /ban /unban /mute /help /kick<br><br> <a href=\"https://wiki." + t.g_hPlatform.domain + "/wiki/Room_Helper\" target=\"_blank\">Details and information about being a Room Helper</a>. </div> ", { no_close_on_mouseout:true, provide_close_button:true, width:400, top:10, right:30, enable_context_menu: true });};RoomHelper_PlayerHandlers.ReceivedMessage = function(message ){ ChatQueue.Format_Append(message, 0, { 'chat_style':'chat_command' } );};RoomHelper_PlayerHandlers.OpenChangeTopicPopup = function(){ var hModel = t.g_hUsers[ g_nBroadcasterId ]; var sHtml = " <div oncontextmenu=\"return true;\" style=\"width:400px;height:100px;padding-top:10px;\">\
 <form onSubmit=\"RoomHelper_PlayerHandlers.ChangeTopicPopup_Submit(); return false;\"> Enter a new topic; <span id=RoomHelper_ChartCounter></span><br><br> <textarea style=\"width:320px;height:70px;\" name=new_topic id=new_topic onKeyUp=\"\RoomHelper_PlayerHandlers.CharCounter(this.value);\"></textarea> <input type=submit value=\"Update\"> </form> </div> "; g_oDhtmlPopup.open(sHtml,{ no_close_on_mouseout:true ,provide_close_button:true ,width:400, enable_context_menu:true }); RoomHelper_PlayerHandlers.CharCounter(hModel.topic ); setTimeout(function(){ GetEl('new_topic').focus(); GetEl('new_topic').value = hModel.topic_template || hModel.topic || ''; }, 100 );};RoomHelper_PlayerHandlers.CharCounter = function(sString ){ if(sString.length ) 1; sString = sString || ''; var el; var sCount; if(sString.length > 160 ) { sCount = "160 character maximimum met."; if(el = GetEl('new_topic') ) { el.value = el.value.substring(0,160); } } else { sCount = sString.length + " characters used, " + ( 160 - sString.length ) + " remaining."; } if(el = GetEl('RoomHelper_ChartCounter') ) { el.innerHTML = sCount; }};RoomHelper_PlayerHandlers.ChangeTopicPopup_Submit = function(){ var oInput = GetEl('new_topic'); if(! oInput ) { return; } g_roomHelper.Topic(['/topic'].concat(oInput.value.split(' ') ) ); g_oDhtmlPopup.close();};
RoomHelper_PlayerHandlers.GetMuteStatus = function(sType ){ var hUser = t.g_hUsers[ g_nBroadcasterId ]; if(! hUser ) { return false; } if(sType == 'guest' ) { return hUser.guests_muted; } else if(sType == 'basic' ) { return hUser.basics_muted; }};RoomHelper_PlayerHandlers.ReceiveCountdown = function(hCountdown ){ if(! hCountdown.countdown ) RoomHelper_PlayerHandlers.countdownObject = {}; else RoomHelper_PlayerHandlers.countdownObject = hCountdown; if(RoomHelper_PlayerHandlers.countdownUI ) RoomHelper_PlayerHandlers.countdownUI.update(hCountdown );};RoomHelper_PlayerHandlers.Countdown_Popup = function(){ if(g_UA.mobile ) RoomHelper_PlayerHandlers.Countdown_Popup_DHTML(); else RoomHelper_PlayerHandlers.Countdown_Popup_NewWindow();};RoomHelper_PlayerHandlers.Countdown_Popup_DHTML = function(){ g_oDhtmlPopup.open("<div id=countdownUI_div></div>", { no_close_on_mouseout: true, provide_close_button: true, width:400, height:300, enable_context_menu:true }); RoomHelper_PlayerHandlers.countdownUI = new MfcCountdownModelUI({ countdown: RoomHelper_PlayerHandlers.countdownObject, countdown_form_node: document.getElementById('countdownUI_div'), send_to_server: RoomHelper_PlayerHandlers.Countdown_SendToServer, close_form: function() { g_oDhtmlPopup.close(); } }); RoomHelper_PlayerHandlers.countdownUI.open();};RoomHelper_PlayerHandlers.Countdown_Popup_NewWindow = function(){ g_oDhtmlPopup.close(); RoomHelper_PlayerHandlers.oCountdownPopupWindow = window.open("../html/countdown_ui.html?" + Math.random(),"_blank","height=400,width=520");};RoomHelper_PlayerHandlers.Countdown_SendToServer = function(hCountdownObject ){ hCountdownObject.model = g_nBroadcasterId; hCountdownObject.type = FCS.FCTYPE_ROOMDATA; t.RoomHelper_TopHandlers.Send(FCS.FCTYPE_ROOMDATA, g_nBroadcasterId, hCountdownObject );
};if(t && t.RoomHelper_TopHandlers ){ g_roomHelper = new RoomHelpers({ SendCommand: t.RoomHelper_TopHandlers.Send, Display_EnableRoomHelper: RoomHelper_PlayerHandlers.EnableRoomHelper, Display_DisableRoomHelper: RoomHelper_PlayerHandlers.DisableRoomHelper, Display_ReceivedMessage: RoomHelper_PlayerHandlers.ReceivedMessage, GetModelId: function() { return g_nBroadcasterId; }, GetPublicChannelId: function() { return PublicChannel(g_nBroadcasterId ); }, GetMuteStatus: function(sType ) { return RoomHelper_PlayerHandlers.GetMuteStatus(sType ); }, HasHelperAuth: function() { return t.RoomHelper_TopHandlers.authorized_rooms[ g_nBroadcasterId ]; }, GetUserByUsername: t.RoomHelper_TopHandlers.GetUserByUsername, GetCountdownDataObj: function() { return RoomHelper_PlayerHandlers.countdownObject; } });}var mfcChatCommands;var mfcChatCommandHandlers;var ChatCommandHandlers;function InitializeChatCommands(){ ChatCommandHandlers = { pm_initiated: {}, whisper_initiated: false }; ChatCommandHandlers.HelpOutput = function(sHtml ) { if(sHtml.length < 1500 ) { ChatQueue.Format_Append(sHtml, 0, { 'chat_style':'chat_command' } ); return; } var nHeight = window.innerHeight - 100; var hDhtmlPopupConfig = { no_close_on_mouseout:true, provide_close_button:true, width:400, height: nHeight, top:10, right:30 }; sHtml = " <div style=\"overflow:auto;height:" + nHeight + ";\"> " + sHtml + " </div> "; if(g_bPopupPlayer ) { g_oDhtmlPopup.open(sHtml, hDhtmlPopupConfig ); } else { t.g_oDhtmlPopup.open(sHtml, hDhtmlPopupConfig ); }
 var oEl; if(oEl = GetEl('message_input') ) { oEl.focus(); } }; ChatCommandHandlers.callback_message = function(hRes ) { hRes = hRes || {}; if(! hRes.message ) { return; } if(hRes.success == false && hRes.message ) { hRes.message = "Error: " + hRes.message.replace(/^Error/,''); } var nDelay = 0; if(hRes.message && ( hRes.message.indexOf('Tip exceeds tokens available!') > -1 || hRes.message.indexOf('Available token volumes') > -1 ) ) { hRes.message += ' You can purchase tokens with the /quickbuy chat command.'; g_inChatPurchase.purchasePrompt(); nDelay = 500; } setTimeout(function(){ ChatQueue.Format_Append(hRes.message, 0, { 'chat_style':'chat_command' } ); },nDelay); }; ChatCommandHandlers.post_command_handler = function(aArgs, hOptions, oResponse ) { if(aArgs[0] != '/?' && aArgs[0] != '/help' ) { if(g_oDhtmlPopup && g_oDhtmlPopup.bIsOpen ) { g_oDhtmlPopup.close(); } if(t.g_oDhtmlPopup && t.g_oDhtmlPopup.bIsOpen ) { t.g_oDhtmlPopup.close(); } } }; ChatCommandHandlers.command_not_found = function(aArgs, hOptions ) { var oResponse = { "success": true }; var nFoundUserId; var sInput = aArgs.shift(); if(sInput == undefined ) { return {}; } sInput = sInput.replace(/\W/g,''); var sLowerCaseInput = sInput.toLowerCase(); if(t.g_hUsers )
 { for(var nUserId in t.g_hUsers ) { var hUser = t.g_hUsers[ nUserId ]; if(hUser.access_level != 4 ) { continue; } if(sLowerCaseInput == hUser.username.toLowerCase() ) { nFoundUserId = parseInt(nUserId ); break; } } } if(! nFoundUserId ) { oResponse = { "success": false, "message": "There are no commands or " + t.g_hPlatform.performer + " names matching <b>\"" + sInput + "\"</b>. Type /help for a list of available commands." }; } else { if(Lounge.bIsLoaded ) { Lounge.VideoCycler.Cycle(nFoundUserId ); } else { LoadPlayer('player', { broadcaster_id: nFoundUserId } ); } } return oResponse; }; ChatCommandHandlers.pm = function(aArgs, hOptions ) { hOptions = hOptions || {}; if(t.g_hSelf && t.g_hSelf.access_level < 2 ) { return { "success": false, "message": "Private messages to " + t.g_hPlatform.performer + "s may only be sent by Premium Members. Please buy tokens one time to become a premium member forever." }; } var sMessage = aArgs.slice(2).join(' '); var sUsername = aArgs[1].replace(/\W/g,''); if(! sUsername || ! sMessage ) { return { "success": false, "message": "pm command usage: /pm [username] [message]" }; } var nUserId = t.GetUserIdByUsername(sUsername ); if(! nUserId || ! t.g_hUsers[nUserId] )
 { return { "success": false, "message": "There are no logged in users with the username \"" + sUsername + "\". Please check the spelling." }; } if(nUserId && t.g_hUsers[nUserId] && t.g_hUsers[nUserId].state == FCS.FCVIDEO_OFFLINE ) { return { "success": false, "message": "Your private message to " + t.g_hUsers[nUserId].username + " was not sent because this user is currently Offline." + A('pm_friend',{ user_id:nUserId, username:t.g_hUsers[nUserId].username, load_video:'false'}) + "Click here to send an Offline private message to " + t.g_hUsers[nUserId].username + "</a>, using a normal PM window." }; } if(! ChatCommandHandlers.pm_initiated ) { ChatCommandHandlers.pm_initiated = {}; } ChatCommandHandlers.pm_initiated[ nUserId ] = true; ChatCommandHandlers.pm_user_id = nUserId; g_oParseEmoteInput.Process(sMessage, ChatCommandHandlers.pm_parse_emote_response ); }; ChatCommandHandlers.pm_parse_emote_response = function(sMessage ) { var nUserId = ChatCommandHandlers.pm_user_id; ChatQueue.Format_Append(sMessage, t.g_hSelf.user_id, { 'inline_pm': true, username: t.g_hUsers[ nUserId ].username } ); t.SendPrivateMessage({ msg: sMessage, to: nUserId }); if(t && t.Sound && ( t.g_hSelf['pm_sound_mode'] == 'txrx' || ! t.g_hSelf['pm_sound_mode'] ) ) { t.Sound('up'); } }; ChatCommandHandlers.pm_response = function(nUserId, sMessage ) { if(sMessage.match(/^\w+ is online\.$/) ) { return false; }
 if(t.g_hSelf.display_pm_inline & DISPLAY_PM_INLINE_ALL || ( ChatCommandHandlers.pm_initiated && ChatCommandHandlers.pm_initiated[ nUserId ] ) || ( g_nBroadcasterId == nUserId && ( ChatCommandHandlers.whisper_initiated || t.g_hSelf.display_pm_inline & DISPLAY_PM_INLINE_WHISPER ) ) ) { ChatQueue.Format_Append(sMessage, nUserId, { 'inline_pm': true, username: t.g_hUsers[ nUserId ].username } ); return true; } return false; }; ChatCommandHandlers.notefor = function(aArgs ) { if(! aArgs[1] || aArgs[1].match(/\W/) ) { return { "success": false, "message": "Enter a username as the second argument: /notefor [username]" }; } var aNewArgs = [ '/note' ], hNewOptions={}; for(var a=2; a<aArgs.length; a++ ) { if(aArgs[a].match(/\-(\w)/) ) { hNewOptions[ RegExp.$1 ] = true; } else { aNewArgs.push(aArgs[a] ); } } if(! aArgs[2] ) { var oResponse = ChatCommandHandlers.notes([ aArgs[0]] , {}, 0, aArgs[1] ); return oResponse; } else
 { ChatCommandHandlers.notefor_aArgs = aNewArgs; ChatCommandHandlers.notefor_hOptions = hNewOptions; t.FcUsernameLookup.Query(aArgs[1], ChatCommandHandlers.notefor_callback ); } }; ChatCommandHandlers.notefor_callback = function(nErrCode, sUsername, hUser, hContext ) { if(! hUser || ! hUser.user_id ) { ChatCommandHandlers.callback_message({ "success": false, "message": "The username you have entered was not found, please check the spelling." }); return; } var oResponse = ChatCommandHandlers.notes(ChatCommandHandlers.notefor_aArgs, {}, hUser.user_id ); if(oResponse && oResponse.success == false ) ChatCommandHandlers.callback_message(oResponse ); return oResponse; }; ChatCommandHandlers.notes = function(aArgs, hOptions, nUserId, sUsername ) { if(! nUserId ) { nUserId = g_nBroadcasterId; } if(t.g_hSelf && t.g_hSelf.access_level < 1 ) { return ChatCommandHandlers.callback_message({ "success": false, "message": "The /note command is for Members only."}); } var sNote = aArgs.slice(1).join(' '); if(! sNote ) { if(sUsername ) A('user_notepad',{ load_username: sUsername, target:'new_window', do_click:true }); else A('user_notepad',{ load_user_id: nUserId, target:'new_window', do_click:true }); return; } if(! t.g_hUsers[ nUserId ] || ! nUserId || t.g_hLoungeIds[ nUserId ]
 ) { return { "success": false, "message": "The notes command cannot be used to add notes in this room." }; } sNote = MfcUserNotepad.generateEntryDate() + "\n" + sNote; var oReq = createRequestObject(); oReq.open("POST", MfcClientRes.apiUrl + "/userNotepad/prepend/" + nUserId ); oReq.setRequestHeader("Content-Type", "application/x-www-form-urlencoded;charset=UTF-8"); oReq.withCredentials = true; oReq.onreadystatechange = () => { if(oReq.readyState != 4 ) return; var res; try{ res = t.ParseJSON(oReq.responseText); } catch (e) {} if(res && res.err === 0 ) { ChatCommandHandlers.callback_message({ "message": "Note saved successfully."}); if(t && t.g_hUsers && typeof(t.g_hUsers[ nUserId ] ) == 'object' ) { t.toggleNotesFlag(nUserId, 1); if(t.g_hUsers[ nUserId ].friend && t.LoadFriends ) { t.LoadFriends(); } } } else { return ChatCommandHandlers.callback_message({"success": false, "message": "There was an error saving your note. Please try again."}); } }; oReq.send("token=" + t.g_hSelf.token + "&notes=" + encodeURIComponent(sNote) ); }; ChatCommandHandlers.whisper = function(aArgs, hOptions ) { hOptions = hOptions || {}; if(t.g_hSelf && t.g_hSelf.access_level < 2 ) { return { "success": false, "message": "Private messages to " + t.g_hPlatform.performer + "s may only be sent by Premium Members. Please buy tokens one time to become a premium member forever." };
 } var sMessage = aArgs.slice(1).join(' '); if(! sMessage ) { return { "success": false, "message": "whisper command usage: /whisper [message]" }; } if(! t.g_hUsers[ g_nBroadcasterId ] || ! g_nBroadcasterId || t.g_hLoungeIds[ g_nBroadcasterId ] ) { return { "success": false, "message": "The whisper command cannot be used in this room." }; } ChatCommandHandlers.whisper_initiated = true; g_oParseEmoteInput.Process(sMessage, ChatCommandHandlers.whisper_parse_emote_response ); }; ChatCommandHandlers.whisper_parse_emote_response = function(sMessage ) { ChatQueue.Format_Append(sMessage, t.g_hSelf.user_id, { 'inline_pm': true, username: t.g_hUsers[ g_nBroadcasterId ].username } ); t.SendPrivateMessage({ msg: sMessage, to: g_nBroadcasterId }); if(t && t.Sound && ( t.g_hSelf['pm_sound_mode'] == 'txrx' || ! t.g_hSelf['pm_sound_mode'] ) ) { t.Sound('up'); } }; ChatCommandHandlers.emote = function(aArgs, hOptions ) { if(t.g_hSelf && t.g_hSelf.access_level < 2 ) { return { "success": false, "message": "The emote command is only available to Premium Members. Please buy tokens one time to become a premium member forever." }; }
 if(! aArgs[1] ) { return { "success": false, "message": "You must emote something..." }; } Send("{*emote*} " + aArgs.slice(1).join(' ') ); }; ChatCommandHandlers.sarcasm = function(aArgs, hOptions ) { if(t.g_hSelf && t.g_hSelf.access_level < 2 ) { return { "success": false, "message": "The sarcasm command is only available to Premium Members. Please buy tokens one time to become a premium member forever." }; } Send("*sarcasm* " + aArgs.slice(1).join(' ') ); }; ChatCommandHandlers.homepage = function(aArgs, hOptions ) { LoadPlayer('player', { broadcaster_id: 0 } ); }; ChatCommandHandlers.next = function(aArgs, hOptions ) { if(Lounge.bIsLoaded ) { Lounge.VideoCycler.Cycle(0,{ advance: 'next' }); } else { AdvanceRoom('next'); } }; ChatCommandHandlers.prev = function(aArgs, hOptions ) { if(Lounge.bIsLoaded ) { Lounge.VideoCycler.Cycle(0,{ advance: 'back' }); } else { AdvanceRoom('previous'); } }; ChatCommandHandlers.last = function(aArgs, hOptions ) { if(Lounge.bIsLoaded ) { Lounge.VideoCycler.Cycle(0,{ advance: 'last' }); } else { AdvanceRoom('last_viewed'); } }; ChatCommandHandlers.set_away = function(aArgs, hOptions ) { t.g_hSelf['away_state'] = true; t.TxCmd(FCS.FCTYPE_PRIVACY, t.g_hSelf['sessionid'], 0, t.g_hSelf['userid'], t.g_hSelf['pmesg_accept'] , "I'm currently away from my computer." ); t.LoadFriends(); var sMessage = "You have changed your status to <b>Away</b>";
 return { "success": true, "message": sMessage }; }; ChatCommandHandlers.set_back = function(aArgs, hOptions ) { t.g_hSelf['away_state'] = false; t.TxCmd(FCS.FCTYPE_PRIVACY, t.g_hSelf['sessionid'], 0, t.g_hSelf['userid'], t.g_hSelf['pmesg_accept'] , null ); t.LoadFriends(); return { "success": true, "message": "You are no longer away." } }; var g_hChatCommandMap = { tip: { handler: function() { return mfcChatCommandHandlers.tip.apply(mfcChatCommandHandlers,arguments); }, shorthand: 't', description: "Send a tip to the " + t.g_hPlatform.performer + " you are talking to.", usage: "/tip [option(s)] [tip amount] [public message].", example: "<br>&nbsp; /tip 10 thank you<br>&nbsp; /tip -x5d7 50 -- would tip 50 tokens 5 times, each 7 seconds apart", premium_only: true, pass_bad_options: true, options: { 'a': "Anonymous tip.", 's': "Silent tip. (No tip sound)", 'h': "Hide Tip Amount from chat. (Only " + t.g_hPlatform.Performer + " sees Tip Amount)", 'p': "Private tip. (Tip & message not displayed in chat)", 'm': "Only " + t.g_hPlatform.Performer + " sees Tip Message. (Tip displayed in chat)", 'x': "Tip this many times. ex: -x10 = 10 times", 'd': "Delay the tips by this many seconds. ex: -d10 = 10 seconds" }, advanced_command: true }, tipstop: { handler: function() { return mfcChatCommandHandlers.tipstop.apply(mfcChatCommandHandlers,arguments); }, description: "Stop automatic tipping" }, yes: { handler: function() { return mfcChatCommandHandlers.tip_yes.apply(mfcChatCommandHandlers,arguments); }, shorthand: 'y' }, tipfor: { handler: function() { return mfcChatCommandHandlers.tipfor.apply(mfcChatCommandHandlers,arguments); },
 description: "Send a tip to any " + t.g_hPlatform.performer + ".", usage: "/tip [" + t.g_hPlatform.performer + " name] [option(s)] [tip amount] [public message].", shorthand: 'tip4', premium_only: true, pass_bad_options: true, advanced_command: true }, sharetip: { handler: function() { return mfcChatCommandHandlers.sharetip.apply(mfcChatCommandHandlers,arguments); }, description: "Purchase an MFCShare item", usage: "/sharetip [option(s)] [amount] [public message].", premium_only: true, options: { 'a': "Anonymous tip.", 's': "Silent tip. (No tip sound)", 'h': "Hide Tip Amount from chat. (Only " + t.g_hPlatform.Performer + " sees Tip Amount)", 'p': "Private tip. (Tip & message not displayed in chat)", 'm': "Only " + t.g_hPlatform.Performer + " sees Tip Message. (Tip displayed in chat)" }, advanced_command: true }, tostorage: { handler: function() { return mfcChatCommandHandlers.tostorage.apply(mfcChatCommandHandlers,arguments); }, description: "Put tokens into your Token Storage", usage: "/tostorage [token volume].", shorthand: "ts", premium_only: true }, fromstorage: { handler: function() { return mfcChatCommandHandlers.fromstorage.apply(mfcChatCommandHandlers,arguments); }, description: "Take tokens from your Token Storage", usage: "/fromstorage [token volume].", shorthand: "fs", premium_only: true }, sarcasm: { handler: ChatCommandHandlers.sarcasm, description: "Slant your text to show sarcasm.", usage: "/sarcasm [sarcastic chat message]", shorthand: "sar" }, sarcastic: { handler: ChatCommandHandlers.sarcasm }, me: { handler: ChatCommandHandlers.emote, description: "State in chat that you are performing an action.", usage: "/me [action you are taking]", shorthand: "em" },
 pm: { handler: ChatCommandHandlers.pm, usage: "/pm [username] [private message]", clean_command_retain_x_args: 1, description: "Send a Private Message to any user." }, whisper: { handler: ChatCommandHandlers.whisper, description: "Send a Private Message (whisper) to the " + t.g_hPlatform.performer + " whose chat room you are currently in.", usage: "/whisper [private message]", shorthand: "w" }, note: { handler: ChatCommandHandlers.notes, description: "View or add a note to the user you are talking to.", usage: "/note [optional; note to add]" }, notefor: { handler: ChatCommandHandlers.notefor, description: "View or add notes for a particular user", usage: "/notefor [username] [optional; note to add]", shorthand: 'note4' }, next: { handler: ChatCommandHandlers.next, description: "Go to the next " + t.g_hPlatform.performer + "'s room.", shorthand: "n" }, prev: { handler: ChatCommandHandlers.prev, description: "Go to the previous " + t.g_hPlatform.performer + "'s room.", shorthand: "p" }, last: { handler: ChatCommandHandlers.last, description: "Go to the last room visited.", shorthand: "l" }, homepage: { handler: ChatCommandHandlers.homepage, description: "Return to the homepage.", shorthand: "h" }, awaymsg: { handler: ChatCommandHandlers.set_away, description: "Set your status to 'Away'.", usage: "/awaymsg" }, back: { handler: ChatCommandHandlers.set_back,
 description: "Reset your away status." } }; if(t.g_hSelf && t.g_hSelf.access_level >= FCS.FCLEVEL_BASIC ) { g_hChatCommandMap.quickbuy = { handler: function() { return mfcChatCommandHandlers.quickbuy.apply(mfcChatCommandHandlers,arguments); }, description: "Purchase tokens via chat command.", usage: "/quickbuy [token volume].", shorthand: "qb", premium_only: true, pass_bad_options: true, advanced_command: true }; } mfcChatCommands = new MfcChatCommands({ debug: 1, history_retainer: t.g_oChatCommandHistory, post_command_handler: ChatCommandHandlers.post_command_handler, command_not_found: { handler: ChatCommandHandlers.command_not_found, definition: "[" + t.g_hPlatform.performer + " name]", qualifier: "^\/\\w{4,}$", description: "Go to [" + t.g_hPlatform.performer + " name's] room." }, help_config: { overtake_help_output: ChatCommandHandlers.HelpOutput, more_info_a_tag: ( "<a href='https://wiki." + t.g_hPlatform.domain + "/wiki/Chat_Commands' target=_blank>" ), up_down_arrows: true, right_arrow: true, double_click_recall: true, help_order: [ [ 'ban','unban','topic','mute','countdown','kick' ], [ 'homepage','next','prev','last','command_not_found' ], [ 'pm','whisper' ], [ 'me', 'sarcasm' ], [ 'awaymsg', 'back', 'note', 'notefor' ], [ 'tip', 'tipfor', 'quickbuy', 'tostorage', 'fromstorage' ] ] }, command_map: g_hChatCommandMap }); mfcChatCommandHandlers = new MfcChatCommandHandlers({ mfcChatCommands: mfcChatCommands,
 callback_message_func: ChatCommandHandlers.callback_message, get_token_func: function(){ return t.g_hSelf.token; }, get_purchase_link_func: function(){ return t && t.A('purchase'); }, get_target_user_id: function(){ return g_nBroadcasterId; }, is_tipping_available: function() { return t.g_hUsers[ g_nBroadcasterId ] && t.g_hUsers[ g_nBroadcasterId ].access_level==FCS.FCLEVEL_MODEL && ! t.g_hLoungeIds[ g_nBroadcasterId ]; }, current_platform: t.g_hPlatform, current_user: { username: function() { return t.g_hSelf.username; }, user_id: function() { return t.g_hSelf.user_id; }, access_level: function() { return t.g_hSelf.access_level; }, session_id: function() { return t.g_hSelf.session_id; }, token: function() { return t.g_hSelf.token; }, tokens: function() { return t.g_hSelf.tokens; }, advanced_chat_commands: function() { return t.g_hSelf.advanced_chat_commands; } }, username_lookup_func: t.FcUsernameLookup.Query, enable_advanced_commands_a_tag: t.A('user_settings',{ load: 'chat_commands' }) }); g_roomHelper.setParam({ mfcChatCommands: mfcChatCommands });}InitializeChatCommands();t.events.on('PostLoginProcedures',function(){ InitializeChatCommands();}, window.name );document.addEventListener("mousedown", function(e) { window.mfcMousePress_Player.Down(e); } );document.addEventListener("mouseup", function(e) { window.mfcMousePress_Player.Up(e); } );var g_bPlayerJsLoaded = true;