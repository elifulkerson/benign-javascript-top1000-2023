"use strict";(self.__LOADABLE_LOADED_CHUNKS__=self.__LOADABLE_LOADED_CHUNKS__||[]).push([[3188],{36274:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Ad: () => (/* binding */ apiFetchTopline),\n/* harmony export */   SC: () => (/* binding */ apiFetch),\n/* harmony export */   SP: () => (/* binding */ getTaxonomyEndpoint),\n/* harmony export */   wK: () => (/* binding */ apiFetchService),\n/* harmony export */   yp: () => (/* binding */ apiFetchCTAUnit)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(64649);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(14206);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lodash_isObject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(11611);\n/* harmony import */ var lodash_isObject__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_isObject__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var lodash_merge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(15409);\n/* harmony import */ var lodash_merge__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_merge__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(71323);\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _util_errors__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(14788);\n/* harmony import */ var _util_config__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(39894);\n/* harmony import */ var _constants_properties__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(78961);\n/* harmony import */ var _util_observability__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(55126);\n/* harmony import */ var _redux_constants_types__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(51930);\n/* harmony import */ var _debug_logging__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(31905);\n/* harmony import */ var _locale__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(41533);\n/* harmony import */ var _network__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(43705);\n/* harmony import */ var _is_internal_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(9002);\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Validates the response data from the API..\n * If we have a malformed (ie. non-JSON) response, throw an error.\n *\n * @param {Object} response\n * @returns {Object}\n */\nconst responseValidator = response => {\n  (0,_debug_logging__WEBPACK_IMPORTED_MODULE_5__/* .debugLog */ .q)('Axios response received.', {\n    // These properties are sorted by usefulness in debugging.\n    url: response.config.url,\n    status: response.status,\n    headers: response.headers\n  });\n  if (!lodash_isObject__WEBPACK_IMPORTED_MODULE_2___default()(response.data)) {\n    throw new TypeError(response.data);\n  }\n  return response;\n};\n\n/**\n * Handles a response error from axios.\n * Dispatches the error to Redux so we can render an error page.\n *\n * @param {Function} dispatch\n * @param {Error}    error\n * @returns {*}\n */\nconst handleResponseError = (dispatch, error) => {\n  // If we caught a cancellation \"error\", bypass it.\n  if (axios__WEBPACK_IMPORTED_MODULE_1___default().isCancel(error)) {\n    return;\n  }\n  const {\n    request: {\n      responseURL = ''\n    } = {},\n    response: {\n      status = 500\n    } = {}\n  } = error;\n\n  // If we got a 404 error on a Careers page, redirect to the careers home.\n  if (status === 404 && responseURL.indexOf('/mntv/content/v3/careers/') >= 0) {\n    window.location = `${_constants_properties__WEBPACK_IMPORTED_MODULE_6__/* .PATHS */ .yy.mmcareers}/`;\n    return;\n  }\n\n  // Set error as get, but override if we got a 404.\n  let payload = error;\n  if (status === 404) {\n    payload = new _util_errors__WEBPACK_IMPORTED_MODULE_7__/* .Error404 */ .l(responseURL);\n  }\n  dispatch({\n    type: _redux_constants_types__WEBPACK_IMPORTED_MODULE_8__/* .SET_ERROR */ .Go,\n    payload\n  });\n  return error.response;\n};\n\n/**\n * Generates default config options for axios requests.\n *\n * For server-side requests we need to set a few headers that are otherwise not available.\n *  - Set \"bypass_maint=1\" cookie.\n *  - Set an identifiable \"user-agent\" for tracing requests across our stack.\n *  - Set `host` header with the current hostname.\n *\n * @link https://github.com/axios/axios#request-config\n *\n * @param {Object}         args             The function args.\n * @param {String}         args.hostname    The hostname the current request is being made for.\n * @param {String|boolean} args.serviceHost The service the request is being made to.\n *\n * @returns {Object} The request config object.\n */\nfunction getDefaultAxiosConfig(_ref) {\n  let {\n    hostname,\n    serviceHost\n  } = _ref;\n  let userAgent = {};\n  if (serviceHost && (0,_is_internal_service__WEBPACK_IMPORTED_MODULE_9__/* .isInternalService */ .D)(serviceHost)) {\n    userAgent = {\n      'User-Agent': (0,_util_config__WEBPACK_IMPORTED_MODULE_10__/* .getConfig */ .i)('APP_TYPE')\n    };\n  }\n  return {\n    // Only set custom headers for server-side requests.\n    headers: typeof window !== 'undefined' ? {} : _objectSpread(_objectSpread({\n      cookie: 'bypass_maint=1;'\n    }, userAgent), typeof hostname !== 'undefined' ? {\n      host: hostname\n    } : {}),\n    maxRedirects: 0\n  };\n}\n\n/**\n * Generates a full API URL based on the path and query args provided.\n *\n * @param {object} params          The function parameters.\n * @param {object} params.args     Additional query args to be used to filter.\n * @param {string} params.hostname The hostname to make the request to.\n * @param {string} params.locale   The locale to make the request for.\n * @param {string} params.path     Variables to build path (posts, posts/slug, categories, topics, etc).\n *\n * @returns {string}\n */\nconst getEndpoint = _ref2 => {\n  let {\n    args,\n    hostname,\n    locale = 'en',\n    path\n  } = _ref2;\n  const network = (0,_network__WEBPACK_IMPORTED_MODULE_11__/* .getNetwork */ .H)(hostname);\n  const langPath = (0,_locale__WEBPACK_IMPORTED_MODULE_12__/* .getLocalePath */ .WU)(locale);\n  const servicePath = _constants_properties__WEBPACK_IMPORTED_MODULE_6__/* .SERVICE_PATHS */ .UY[network].replace(_constants_properties__WEBPACK_IMPORTED_MODULE_6__/* .PARAM_PATHS */ .Sg.lang, langPath);\n\n  /**\n   * Build query string.\n   * @type {String}\n   */\n  let query = new URLSearchParams(args).toString();\n  if (query.length) {\n    query = '?' + query;\n  }\n  const isStorybook = (0,_util_config__WEBPACK_IMPORTED_MODULE_10__/* .getConfig */ .i)('DOCKER_TAG') === 'storybookLocal';\n  /**\n   * Calls made server-side need fully qualified URLs, calls made client-side only need the path.\n   * @type {String}\n   */\n  const serviceHost = (0,_util_config__WEBPACK_IMPORTED_MODULE_10__/* .getConfig */ .i)('APP_SERVICE_VIP');\n  /**\n   * @type {string}\n   */\n  const hostBase = serviceHost.length > 0 && !isStorybook ? `http://${serviceHost}` : '';\n\n  /**\n   * Put the full request URL together.\n   * @type {string}\n   */\n  const format = '%s%s/%s/%s';\n  return util__WEBPACK_IMPORTED_MODULE_4___default().format(format, hostBase, servicePath, path, query);\n};\n\n/**\n * Translates a given property (either `curiosity` or `resources`) and taxonomy name into a taxonomy endpoint.\n *\n * @param {String} url The URL to identify the endpoint for.\n *\n * @returns {String}\n */\nconst getTaxonomyEndpoint = url => {\n  let endpoint = '';\n  if (url.startsWith(`${_constants_properties__WEBPACK_IMPORTED_MODULE_6__/* .PATHS */ .yy.curiosity}/category/`)) {\n    endpoint = 'categories';\n  } else if (url.startsWith(`${_constants_properties__WEBPACK_IMPORTED_MODULE_6__/* .PATHS */ .yy.curiosity}/topic/`)) {\n    endpoint = 'topics';\n  } else if (url.startsWith(`${_constants_properties__WEBPACK_IMPORTED_MODULE_6__/* .PATHS */ .yy.resources}/topic/`)) {\n    endpoint = 'rc_topics';\n  }\n  return endpoint;\n};\n\n/**\n * Single helper function to fetch from the Content Platform API.\n *\n * @param {Object}   args           Query args to be appended to the request URL.\n * @param {Function} dispatch       An optional function to dispatch data from the request.\n * @param {String}   hostname       An optional hostname to set into the `Host` header.\n * @param {String}   path           The relative endpoint path for the request. ( ie. posts/, categories/, topics/ ).\n * @param {Object}   requestConfig  Custom request config to send to axios.get().\n *\n * @returns {Promise<void>}\n */\nconst apiFetch = async _ref3 => {\n  let {\n    args = {},\n    dispatch = () => {},\n    hostname = '',\n    locale,\n    path = '',\n    requestConfig = {}\n  } = _ref3;\n  /**\n   * @type {String}\n   */\n  const endpoint = getEndpoint({\n    args,\n    hostname,\n    locale,\n    path\n  });\n  /**\n   * Allow calling methods to append their own axios config into the request.\n   * @type {Object}\n   */\n  const axiosConfig = lodash_merge__WEBPACK_IMPORTED_MODULE_3___default()(getDefaultAxiosConfig({\n    hostname\n  }), requestConfig);\n  (0,_debug_logging__WEBPACK_IMPORTED_MODULE_5__/* .debugLog */ .q)('Axios request dispatched.', {\n    // These properties are sorted by usefulness in debugging.\n    url: endpoint,\n    axiosConfig\n  });\n\n  // Use normal axios request server-side, errors are handled elsewhere down the line.\n  if (typeof window === 'undefined') {\n    return axios__WEBPACK_IMPORTED_MODULE_1___default().get(endpoint, axiosConfig).then(responseValidator);\n  }\n\n  // Bind dispatch into the first callback param so we can catch errors immediately client-side.\n  const axiosCatch = handleResponseError.bind(null, dispatch);\n  return axios__WEBPACK_IMPORTED_MODULE_1___default().get(endpoint, axiosConfig).then(responseValidator).catch(axiosCatch);\n};\n\n/**\n * Single helper function to fetch CTA units from the API.\n *\n * @param {Boolean} auth_state\n * @param {String} cta_page_type\n * @param {String} cta_placement\n * @param {String} engagement_state\n * @param {String} vertical\n * @returns {Promise<void>}\n */\nconst apiFetchCTAUnit = async _ref4 => {\n  let {\n    auth_state = false,\n    cta_page_type = '',\n    cta_placement = '',\n    engagement_state = '',\n    vertical = ''\n  } = _ref4;\n  let payload = {};\n\n  /**\n   * @type {{cta_placement: String, auth_state: string, cta_page_type: String, engagement_state: String, vertical: String}}\n   */\n  const args = {\n    auth_state: auth_state ? 'logged-in' : 'logged-out',\n    cta_page_type,\n    cta_placement\n  };\n  if (engagement_state.length) {\n    args.engagement_state = engagement_state;\n  }\n  if (vertical.length) {\n    args.vertical = vertical;\n  }\n  try {\n    const {\n      data\n    } = await apiFetch({\n      path: 'cta_unit',\n      args\n    });\n    if (data.length && 'attributes' in data[0]) {\n      const {\n        id,\n        attributes\n      } = data[0];\n      payload = _objectSpread({\n        id\n      }, attributes);\n    }\n  } catch (error) {\n    (0,_util_observability__WEBPACK_IMPORTED_MODULE_13__/* .reportError */ .eK)({\n      error\n    });\n  }\n  return payload;\n};\n\n/**\n * Single helper function to fetch CTA units from the Content Platform API.\n *\n * @param {String} fetchType The type of route we are fetching from.\n * @param {Number} toplineId The ID of the topline we are fetching.\n * @returns {Object}\n */\nconst apiFetchTopline = async _ref5 => {\n  let {\n    fetchType = 'data',\n    toplineId = 0\n  } = _ref5;\n  const endpoint = fetchType === 'data' ? 'get-topline-data' : 'get-topline-metadata';\n  let payload = {};\n  try {\n    const {\n      data\n    } = await apiFetch({\n      path: `sm-topline/${endpoint}/${toplineId}`\n    });\n\n    // Send our response data down the pipe.\n    payload = data;\n  } catch (error) {\n    (0,_util_observability__WEBPACK_IMPORTED_MODULE_13__/* .reportError */ .eK)({\n      error\n    });\n  }\n  return payload;\n};\n\n/**\n * PostOptions type definition\n * @typedef {Object} PostOptions\n * @property {object|string} payload\n * @property {string} uri\n * @property {object} config\n */\n\n/**\n * GetOptions type definition\n * @typedef {Object} GetOptions\n * @property {string} uri\n * @property {object} config\n */\n\n/**\n * Unified API POST/GET service with logging\n *\n * @param {PostOptions|GetOptions} options\n * @returns {object} response object\n */\nconst apiFetchService = async _ref6 => {\n  let {\n    config = {},\n    payload,\n    uri\n  } = _ref6;\n  const requestType = payload ? 'POST' : 'GET';\n  let response = {};\n  try {\n    const axiosConfig = lodash_merge__WEBPACK_IMPORTED_MODULE_3___default()(getDefaultAxiosConfig({\n      serviceHost: uri\n    }), config);\n    (0,_debug_logging__WEBPACK_IMPORTED_MODULE_5__/* .debugLog */ .q)(`Axios ${requestType} request dispatched.`, {\n      // These properties are sorted by usefulness in debugging.\n      url: uri,\n      axiosConfig\n    });\n    if (requestType === 'POST') {\n      response = await axios__WEBPACK_IMPORTED_MODULE_1___default().post(uri, payload, axiosConfig).then(responseValidator);\n    } else {\n      response = await axios__WEBPACK_IMPORTED_MODULE_1___default().get(uri, axiosConfig).then(responseValidator);\n    }\n  } catch (error) {\n    (0,_util_observability__WEBPACK_IMPORTED_MODULE_13__/* .reportError */ .eK)({\n      error,\n      severity: 'info'\n    });\n  }\n  return response;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzYyNzQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3V0aWwvYXBpLmpzP2FiODYiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///36274\n")},45180:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _: () => (/* binding */ fetchUserAuth)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(64649);\n/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(31655);\n/* harmony import */ var _util_api__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(36274);\n/* harmony import */ var _util_config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(39894);\n/* harmony import */ var _util_hosts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(73711);\n/* harmony import */ var _util_observability__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(55126);\n/* harmony import */ var _constants_properties__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(78961);\n/* harmony import */ var _constants_auth__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(37874);\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n\n\n\n\n\n\n\n\n/**\n * Fetch SurveyMonkey auth state from the /cc/auth/ endpoint for the current user.\n *\n * @param {Object} args          The function arguments.\n * @param {String} args.hostname The hostname we are making the auth request from.\n * @param {String} args.referrer The referrer URL we are making the auth request from.\n * @returns\n */\nasync function fetchUserAuth(_ref) {\n  let {\n    hostname = ''\n  } = _ref;\n  let authState = {};\n\n  /**\n   * We do not support authentication for non-SurveyMonkey hosts.\n   */\n  const isSMHelpCenter = (0,_util_hosts__WEBPACK_IMPORTED_MODULE_2__/* .isSMHelpCenterHost */ .NC)(hostname);\n  const isSurveyMonkey = (0,_util_hosts__WEBPACK_IMPORTED_MODULE_2__/* .isSurveyMonkeyHost */ .$5)(hostname);\n  if (!isSurveyMonkey && !isSMHelpCenter) {\n    return authState;\n  }\n\n  /**\n   * For Help Center authentication, check if the current user is associated with the EU datacenter.\n   * If they are, ensure auth requests are made against the `eu.surveymoney.com` subdomain.\n   */\n  const smCookieBase = (0,_util_config__WEBPACK_IMPORTED_MODULE_3__/* .getConfig */ .i)('APP_SURVEYMONKEY_COOKIE_HOST');\n  const authDataCenter = js_cookie__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .Z.get(_constants_auth__WEBPACK_IMPORTED_MODULE_4__/* .SM_DATACENTER_COOKIE */ .n3) || _constants_auth__WEBPACK_IMPORTED_MODULE_4__/* .SM_US_DATACENTER_ID */ .iV;\n  const authHost = isSMHelpCenter && authDataCenter === _constants_auth__WEBPACK_IMPORTED_MODULE_4__/* .SM_EU_DATACENTER_ID */ .cv ? `https://eu${smCookieBase}` : '';\n\n  /**\n   * The SM Help Center contact page needs additional user info for chatbot context.\n   */\n  const getMoreUserData = isSMHelpCenter;\n\n  // Build the request body with params needed for logging.\n  const params = _objectSpread(_objectSpread({}, getMoreUserData ? {\n    getMoreUserData\n  } : {}), {}, {\n    // Only set the param if true.\n    // This usage of `window` is fine because it is in a utility that is only ever used client-side\n    // (the file name is auth-client.js for that reason), so window will always be defined and valid.\n    // We also can't use the useLocation hook here because it is a utility function and not a React\n    // component, so referending window directly is the only option (this utility isn't called from\n    // a React component either, it's called from a Redux action, so it can't be generated and then\n    // passed in).\n    uri: window.location.pathname + window.location.search,\n    url: window.location.href,\n    userAgent: window.navigator.userAgent\n  });\n  const config = {\n    withCredentials: true,\n    headers: {\n      'Content-type': 'application/x-www-form-urlencoded'\n    }\n  };\n  try {\n    const {\n      data = {}\n    } = await (0,_util_api__WEBPACK_IMPORTED_MODULE_5__/* .apiFetchService */ .wK)({\n      config,\n      payload: new URLSearchParams(params).toString(),\n      uri: `${authHost}${_constants_properties__WEBPACK_IMPORTED_MODULE_6__/* .PATHS */ .yy.auth}/`\n    });\n    authState = data;\n  } catch (error) {\n    (0,_util_observability__WEBPACK_IMPORTED_MODULE_7__/* .reportError */ .eK)({\n      error,\n      severity: 'info'\n    });\n  }\n  return authState;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDUxODAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3V0aWwvYXV0aC1jbGllbnQuanM/OTRkZiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///45180\n")},14479:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   o: () => (/* binding */ appendCacheKeys)\n/* harmony export */ });\n/* unused harmony export responseCacheKeys */\n/* harmony import */ var lodash_hasIn__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(79749);\n/* harmony import */ var lodash_hasIn__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_hasIn__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_isString__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(47206);\n/* harmony import */ var lodash_isString__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_isString__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var lodash_uniq__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(83766);\n/* harmony import */ var lodash_uniq__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_uniq__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\n/**\n * Parses response and appends new cache keys.\n *\n * @param {Array} oldKeys An array of existing cache keys.\n * @param {Object} headers Response object.\n *\n * @returns {Array}\n */\nconst appendCacheKeys = function () {\n  let oldKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let headers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  // Using TypeOf here because this runs in the server and asking for window will break Node\n  if (typeof window === 'undefined') {\n    const newKeys = lodash_hasIn__WEBPACK_IMPORTED_MODULE_0___default()(headers, 'x-sm-key') && lodash_isString__WEBPACK_IMPORTED_MODULE_1___default()(headers['x-sm-key']) ? headers['x-sm-key'].split(' ') : [];\n    const combined = Array.prototype.concat(oldKeys, newKeys);\n    const unique = lodash_uniq__WEBPACK_IMPORTED_MODULE_2___default()(combined);\n    return unique.sort();\n  }\n  return oldKeys;\n};\n\n/**\n * Flattens cache keys so they can be served as an HTTP header.\n *\n * @param {Array} keys An array of cache keys.\n *\n * @returns {string}\n */\nconst responseCacheKeys = keys => {\n  return Array.isArray(keys) ? keys.join(' ') : '';\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQ0NzkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi91dGlsL2NhY2hlLmpzPzUxMTUiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///14479\n")},96923:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Qk: () => (/* binding */ loadIntlPolyfills),\n/* harmony export */   dG: () => (/* binding */ cleanServerStyles),\n/* harmony export */   tW: () => (/* binding */ getClientRoutes),\n/* harmony export */   xV: () => (/* binding */ maybeLoadStylesheet)\n/* harmony export */ });\n/* harmony import */ var _routes_getfeedback__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(7311);\n/* harmony import */ var _routes_momentive__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(35395);\n/* harmony import */ var _routes_helpcenter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(3845);\n/* harmony import */ var _routes_surveymonkey__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(14798);\n/* harmony import */ var _routes_whitelabel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(38611);\n/* harmony import */ var _util_config__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(39894);\n/* harmony import */ var _util_locale__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(41533);\n/* harmony import */ var _util_properties__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(29311);\n/* harmony import */ var _util_hosts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(73711);\n\n\n\n\n\n\n\n\n\n\n/**\n * Retrieve the React Router config for the client.\n *\n * @returns {object}\n */\nconst getClientRoutes = () => {\n  const hostname = window.location.hostname;\n  let routes = _routes_surveymonkey__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z;\n  if ((0,_util_hosts__WEBPACK_IMPORTED_MODULE_1__/* .isMomentiveHost */ .BX)(hostname)) {\n    routes = _routes_momentive__WEBPACK_IMPORTED_MODULE_2__/* [\"default\"] */ .Z;\n  } else if ((0,_util_hosts__WEBPACK_IMPORTED_MODULE_1__/* .isGetFeedbackHost */ .YM)(hostname)) {\n    routes = _routes_getfeedback__WEBPACK_IMPORTED_MODULE_3__/* [\"default\"] */ .Z;\n  } else if ((0,_util_hosts__WEBPACK_IMPORTED_MODULE_1__/* .isSMHelpCenterHost */ .NC)(hostname)) {\n    routes = _routes_helpcenter__WEBPACK_IMPORTED_MODULE_4__/* [\"default\"] */ .Z;\n  } else if ((0,_util_hosts__WEBPACK_IMPORTED_MODULE_1__/* .isWhitelabelHost */ .tn)(hostname)) {\n    routes = _routes_whitelabel__WEBPACK_IMPORTED_MODULE_5__/* [\"default\"] */ .Z;\n  }\n  return routes;\n};\n\n/**\n * Load polyfills for various Intl utilities required for localization in browsers that need the support.\n *\n * @param {string} locale The current locale.\n */\nconst loadIntlPolyfills = locale => {\n  // Add polyfill for browsers that do not have PluralRules support.\n  if (!Intl.PluralRules) {\n    __webpack_require__(30181); // eslint-disable-line global-require\n  }\n\n  // Add polyfill for browsers that do not have RelativeTimeFormat support.\n  if (!Intl.RelativeTimeFormat) {\n    __webpack_require__(60772); // eslint-disable-line global-require\n\n    // Add locale data for the current locale, if not English.\n    if (!(0,_util_locale__WEBPACK_IMPORTED_MODULE_6__/* .isEnglish */ .vO)(locale)) {\n      (0,_util_locale__WEBPACK_IMPORTED_MODULE_6__/* .getLocaleData */ .k4)(locale);\n    }\n  }\n};\n\n/**\n * Determine if a stylesheet with the given name is already loaded.\n *\n * @param {String} name The stylesheet filename.\n *\n * @returns {boolean}\n */\nconst findStylesheetElement = name => {\n  const re = new RegExp(`/${name}.css$`, 'gmi');\n  const links = [...document.getElementsByTagName('link')];\n  return links.some(element => element.getAttribute('href').match(re));\n};\n\n/**\n * Append a stylesheet for the current property if it does not already exist in the DOM.\n *\n * @param {object} location The location object from `history`.\n *\n * @return {void}\n */\nconst maybeLoadStylesheet = location => {\n  const stylesheet = (0,_util_properties__WEBPACK_IMPORTED_MODULE_7__/* .getPropertyStylesheet */ .K0)((0,_util_properties__WEBPACK_IMPORTED_MODULE_7__/* .getProperty */ .$s)(location.pathname, window.location.hostname));\n  // If there is no stylesheet or it is already loaded, bail.\n  if (!stylesheet.length || findStylesheetElement(stylesheet)) {\n    return;\n  }\n  const link = document.createElement('link');\n  link.rel = 'stylesheet';\n  link.href = `${(0,_util_config__WEBPACK_IMPORTED_MODULE_8__/* .getAssetsUrl */ .I)()}/${stylesheet}.css`;\n  document.head.appendChild(link);\n};\n\n/**\n * Once JS is loaded on the client, it is time to remove pre-generated style tags to avoid side-effects.\n * @see https://cssinjs.org/server-side-rendering?v=v10.4.0\n */\nconst cleanServerStyles = () => {\n  const serverStyles = document.getElementById('ssr-page-styles');\n  serverStyles?.parentNode && serverStyles.parentNode.removeChild(serverStyles);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTY5MjMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3V0aWwvY2xpZW50LmpzPzg5ZTgiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///96923\n")},39894:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   I: () => (/* binding */ getAssetsUrl),\n/* harmony export */   i: () => (/* binding */ getConfig)\n/* harmony export */ });\n/**\n * Gets a particular config value, regardless of whether on the server- or client-side.\n *\n * @param {String} key          The config key to get.\n * @param {mixed}  defaultValue The default value to provide if config is not set.\n *\n * @returns {mixed} The value retrieved from config, or the defaultValue.\n */\nconst getConfig = function (key) {\n  let defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  const windowKey = `__${key}__`;\n  let value = defaultValue;\n\n  // Using TypeOf here because this runs in the server and asking for window will break Node\n  if (typeof window !== 'undefined' && window?.[windowKey]) {\n    value = window[windowKey];\n  } else if (typeof process !== 'undefined' && process?.env?.[key]) {\n    value = process.env[key];\n  }\n  return value;\n};\n\n/**\n * Generates the base URL for assets for the current host and tag.\n *\n * @returns {String}\n */\nconst getAssetsUrl = () => {\n  const cdnHost = getConfig('CDN_HOST');\n  const dockerTag = getConfig('DOCKER_TAG');\n  const schema = 'https';\n  let path = `/assets/website/${dockerTag}`;\n\n  // Allow Storybook to source assets from its own bundle rather than the CDN.\n  if (dockerTag === 'storybook') {\n    path = '/pages/cms/web';\n  } else if (dockerTag === 'storybookLocal' || dockerTag === 'devstack') {\n    // Source storybookLocal or devstack to use devstack's asset path\n    path = '/assets/website/devstack';\n  }\n  return `${schema}://${cdnHost}${path}`;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzk4OTQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3V0aWwvY29uZmlnLmpzPzY2MzQiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///39894\n")},40668:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Ui: () => (/* binding */ TrackingContext),\n/* harmony export */   X0: () => (/* binding */ GatedResourceContext),\n/* harmony export */   fb: () => (/* binding */ SignUpFlowModalContext),\n/* harmony export */   it: () => (/* binding */ BrandingContext),\n/* harmony export */   l2: () => (/* binding */ ImageContext),\n/* harmony export */   pQ: () => (/* binding */ SPAContext),\n/* harmony export */   w6: () => (/* binding */ ScrollingContext)\n/* harmony export */ });\n/* unused harmony export MenuTypeContext */\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(27378);\n/* harmony import */ var _gfpApp_components_SignUpFlowModal_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(50329);\n\n\n\n/**\n * Context used to determine what property branding to use.\n *\n * @returns {Object}\n */\nconst BrandingContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({\n  brand: 'surveymonkey'\n});\n\n/**\n * Context used to switch nested image components between block and inline formats.\n *\n * @returns {Object}\n */\nconst ImageContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({\n  imageType: 'block'\n});\n\n/**\n * Context used to determine if whether the menu should be rendered as a Menu or an Accordion.\n *\n * @returns {Object}\n */\nconst MenuTypeContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({\n  type: 'menu'\n});\n\n/**\n * Context used to manage tracking state.\n *\n * @returns {Object}\n */\nconst TrackingContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);\n\n/**\n * Context used to enable or disable Router Links within a component.\n *\n * @returns {Object}\n */\nconst SPAContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(true);\n\n/**\n * Determines whether or not the current set of components are scrolled past their origin on the page.\n *\n * @returns {Object}\n */\nconst ScrollingContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(false);\n\n/**\n * Controls whether the GetFeedback signup flow modal is open.\n *\n * @returns {Object}\n */\nconst SignUpFlowModalContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({\n  email: ['', () => {}],\n  formVariant: [_gfpApp_components_SignUpFlowModal_constants__WEBPACK_IMPORTED_MODULE_1__/* .GFP_SIGN_UP_FORM_VARIANT_VALUES */ .n7.demoRequest, () => {}],\n  modalState: [false, () => {}],\n  showLegalText: [false, () => {}]\n});\n\n/**\n * Context used to determine if a gated resource post is locked.\n *\n * @returns {Object}\n */\nconst GatedResourceContext = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({\n  state: {}\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDA2NjguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3V0aWwvY29udGV4dHMuanM/NTQzOCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///40668\n")},31905:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  q: () => (/* binding */ debugLog)\n});\n\n// UNUSED EXPORTS: isDebugEnabled\n\n// EXTERNAL MODULE: ./constants/index.js\nvar constants = __webpack_require__(26933);\n// EXTERNAL MODULE: ./util/config.js\nvar config = __webpack_require__(39894);\n// EXTERNAL MODULE: ../node_modules/date-fns/esm/format/index.js + 34 modules\nvar format = __webpack_require__(9178);\n;// CONCATENATED MODULE: ./util/time-util.js\n\n\n/**\n * Log timestamp format\n *\n * @type {string}\n */\nconst TIME_FORMAT = 'yyyy-MM-dd HH:mm:ss';\nconst timeFormat = time => {\n  return (0,format/* default */.Z)(new Date(time), TIME_FORMAT);\n};\n;// CONCATENATED MODULE: ./util/debug-logging.js\n\n\n\n\n/**\n * Determines whether debug logging is enabled.\n *\n * @returns {Boolean}\n */\nfunction isDebugEnabled() {\n  return (0,config/* getConfig */.i)('SM_SCRIPT_DEBUG', '0') === '1';\n}\n\n/**\n * Provide a safe way to log messages only if debug logging is enabled.\n *\n * @param {string} message The message or data to log.\n * @param {mixed}  data    Additional data to log with a message.\n */\nfunction debugLog(message) {\n  let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : constants/* EMPTY_STRING */.v;\n  const appType = (0,config/* getConfig */.i)('APP_TYPE', 'cmsweb');\n  const timestamp = timeFormat(Date.now());\n  if (isDebugEnabled()) {\n    /* eslint-disable-next-line no-console */\n    console.log(`[${appType}] ðŸ”µ  ${timestamp}  ${message}`, data);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzE5MDUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNWQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3V0aWwvdGltZS11dGlsLmpzPzU4YTciLCJ3ZWJwYWNrOi8vLy4vdXRpbC9kZWJ1Zy1sb2dnaW5nLmpzPzQxMzIiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///31905\n")},14788:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   l: () => (/* binding */ Error404)\n/* harmony export */ });\n/**\n * Create a custom 404 error class.\n *\n * @param {String} url The URL that encountered the 404 error.\n */\nclass Error404 extends Error {\n  constructor(url) {\n    super(url);\n    this.name = 'Error404';\n\n    // Maintains proper stack trace for where our error was thrown, only in modern environments.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, Error404);\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQ3ODguanMiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi91dGlsL2Vycm9ycy5qcz81ODA3Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///14788\n")},38662:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bi: () => (/* binding */ getUserExperimentAssignments)\n/* harmony export */ });\n/* unused harmony exports fetchExperiment, updatePersistentExperimentsCookie */\n/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(31655);\n/* harmony import */ var _util_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(36274);\n/* harmony import */ var _constants_properties__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(78961);\n/* harmony import */ var _util_observability__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(55126);\n\n\n\n\n\n\n\n/**\n * Fetch experiment treatment from our public API endpoint.\n *\n * @param {String} experiment The experiment name to fetch a treatment for.\n * @param {String} referrer   The current page referrer.\n *\n * @return {String} The assigned treatment.\n */\nconst fetchExperiment = async _ref => {\n  let {\n    experiment = '',\n    referrer = ''\n  } = _ref;\n  let foundTreatment = '';\n\n  // Bail if there is no experiment provided.\n  if (experiment === '') {\n    return foundTreatment;\n  }\n  try {\n    // Build the request body with params needed for pricing experience.\n    const params = {\n      experiment,\n      referrer\n    };\n    const config = {\n      headers: {\n        'Content-type': 'application/x-www-form-urlencoded'\n      },\n      withCredentials: true\n    };\n\n    // Fetch the data from our public API and save it.\n    const {\n      data: {\n        treatment = ''\n      } = {},\n      status\n    } = await apiFetchService({\n      config,\n      payload: new URLSearchParams(params).toString(),\n      uri: `${PATHS.experiments}/`\n    });\n    if (status === 200 && treatment) {\n      foundTreatment = treatment;\n    }\n  } catch (error) {\n    reportError({\n      error,\n      severity: 'info'\n    });\n  }\n  return foundTreatment;\n};\n\n/**\n * Fetch a logged-in user's active experiment assignments.\n *\n * @returns {string} The concatenated assignments.\n */\nconst getUserExperimentAssignments = async () => {\n  let foundAssignments = '';\n  const config = {\n    headers: {\n      'Content-type': 'application/x-www-form-urlencoded'\n    },\n    withCredentials: true\n  };\n  try {\n    const {\n      data: {\n        assignments = ''\n      },\n      status\n    } = await (0,_util_api__WEBPACK_IMPORTED_MODULE_1__/* .apiFetchService */ .wK)({\n      config,\n      payload: {},\n      uri: `${_constants_properties__WEBPACK_IMPORTED_MODULE_2__/* .PATHS */ .yy.experiments}/`\n    }); // We define payload here to ensure a POST.\n\n    if (status === 200 && assignments) {\n      foundAssignments = assignments;\n    }\n  } catch (error) {\n    (0,_util_observability__WEBPACK_IMPORTED_MODULE_3__/* .reportError */ .eK)({\n      error,\n      severity: 'info'\n    });\n  }\n  return foundAssignments;\n};\n\n/**\n * Merges a new cookie from experimentsvc with the client's current cookie.\n *\n * NOTE: This utility is currently unused, but will be used in the future.\n * In order to avoid needing to re-write it and its unit tests later,\n * we are keeping it in code.\n *\n * @param {string} cookie The cookie fetched from experimentsvc.\n *\n * @return {undefined}\n */\nconst updatePersistentExperimentsCookie = cookie => {\n  // Split the new cookie into individual assignments and pluck off the experiment IDs.\n  const newAssignments = cookie.split('|');\n  const newExperimentIds = newAssignments.map(cookie => cookie.split('.')[0]);\n\n  // Split the current cookie into individual assignments and pluck off the experiment IDs.\n  const currentCookie = Cookies.get(PERSISTENT_EXPERIMENTS_COOKIE) || '';\n  const currentAssignments = currentCookie.split('|').filter(Boolean);\n  const currentExperimentIds = currentAssignments.map(cookie => cookie.split('.')[0]);\n\n  // Does the current cookie value already account for every experiment in the new cookie value?\n  const experimentsAlreadyPresent = newExperimentIds.every((expId, index) => {\n    if (currentExperimentIds.includes(expId)) {\n      // Remove already-known experiments from the original array.\n      newAssignments[index] = '';\n      return true;\n    }\n    return false;\n  });\n\n  // If we already have assignments for all given experiments, bail.\n  if (experimentsAlreadyPresent) {\n    return;\n  }\n  const newCookie = [...currentAssignments, ...newAssignments.filter(Boolean)].filter(Boolean).sort().join('|');\n  Cookies.set(PERSISTENT_EXPERIMENTS_COOKIE, newCookie, {\n    domain: getCookieDomain(window.location.hostname),\n    expires: PERSISTENT_EXPERIMENTS_COOKIE_EXPIRY,\n    path: '/',\n    sameSite: 'none',\n    secure: true\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzg2NjIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vdXRpbC9leHBlcmltZW50cy1jbGllbnQuanM/ZmEwMSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///38662\n")},24474:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   q0: () => (/* binding */ getExperimentIdentifiers)\n/* harmony export */ });\n/* unused harmony exports setExperimentCookie, getAssignment, getAssignments */\n/* harmony import */ var _mds_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(74689);\n/* harmony import */ var _util_hosts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(73711);\n/* harmony import */ var _constants_experiments__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(49853);\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n\n\n\n\n\n\n\n\n\n/**\n * Retrieve the site_id for the given hostname.\n *\n * TODO: Update to support more site_ids as they are added (i.e., MOMENTIVE_PROPERTIES, see experimentsvc sites for guidance https://code.corp.surveymonkey.com/devmonkeys/experimentadminweb/blob/5d1a66671e9d74c70c4fdccbcabbfdfe49223081/experimentadminweb/lib/utils.py#L39-L45)\n *\n * @param   {string}  hostname  The current hostname.\n * @returns {number} Returns the ID for a given host\n */\nconst getSiteId = hostname => {\n  if (isGetFeedbackHost(hostname)) {\n    return GETFEEDBACK_SITE_ID;\n  }\n  if (isMomentiveHost(hostname)) {\n    return MOMENTIVE_SITE_ID;\n  }\n  return SURVEYMONKEY_SITE_ID;\n};\n\n/**\n * Retrieve the current experiment identifiers for the given hostname.\n *\n * @param   {string}  hostname  The current hostname.\n * @param   {string}  pathname  The current pathname.\n *\n * @return {Array} The experiment identifiers array\n */\nconst getExperimentIdentifiers = function (hostname) {\n  let pathname = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _mds_constants__WEBPACK_IMPORTED_MODULE_0__/* .EMPTY_STRING */ .v6;\n  // Handle SurveyMonkey experiments identifiers\n  let experimentIdentifiers = {};\n  if ((0,_util_hosts__WEBPACK_IMPORTED_MODULE_1__/* .isSurveyMonkeyHost */ .$5)(hostname)) {\n    experimentIdentifiers = _constants_experiments__WEBPACK_IMPORTED_MODULE_2__.SM_EXPERIMENTS_IDENTIFIERS;\n  }\n\n  // Handle GetFeedback experiments identifiers\n  if ((0,_util_hosts__WEBPACK_IMPORTED_MODULE_1__/* .isGetFeedbackHost */ .YM)(hostname)) {\n    experimentIdentifiers = _constants_experiments__WEBPACK_IMPORTED_MODULE_2__/* .GFP_EXPERIMENTS_IDENTIFIERS */ .Wd;\n  }\n\n  // Handle Momentive experiments identifiers\n  if ((0,_util_hosts__WEBPACK_IMPORTED_MODULE_1__/* .isMomentiveHost */ .BX)(hostname)) {\n    experimentIdentifiers = _constants_experiments__WEBPACK_IMPORTED_MODULE_2__/* .MNTV_EXPERIMENTS_IDENTIFIERS */ .$7;\n  }\n\n  // Handle SM HelpCenter experiments identifiers\n  if ((0,_util_hosts__WEBPACK_IMPORTED_MODULE_1__/* .isSMHelpCenterHost */ .NC)(hostname)) {\n    experimentIdentifiers = _constants_experiments__WEBPACK_IMPORTED_MODULE_2__/* .HC_EXPERIMENTS_IDENTIFIERS */ .eL;\n  }\n\n  // Filter experiment identifiers which matches the path regex and return array of identifier strings\n  const filteredExperiments = Object.keys(experimentIdentifiers).filter(identifierKey => {\n    return experimentIdentifiers[identifierKey]?.path.some(regex => new RegExp(regex).test(pathname));\n  });\n  return filteredExperiments.reduce((newExperimentIdentifier, idKey) => {\n    newExperimentIdentifier.push(experimentIdentifiers[idKey].identifier);\n    return newExperimentIdentifier;\n  }, []);\n};\n\n/**\n * Sets a provided cookie.\n *\n * @param {array}  cookie     The cookie to set.\n * @param {string} hostname   The current hostname.\n * @param {object} res        The Express response.\n *\n * @return {undefined}\n */\nconst setExperimentCookie = _ref => {\n  let {\n    cookie: {\n      age = 0,\n      name,\n      value\n    },\n    hostname,\n    res\n  } = _ref;\n  if (!name || typeof value === 'undefined') {\n    return;\n  }\n\n  // Generate the cookie host based on the current host.\n  const cookieHost = getCookieDomain(hostname);\n\n  // Preserve the original formatting supplied by the service.\n  const cookieEncoder = value => value;\n\n  // Set each cookie defined with its value and expiry age.\n  res.cookie(name, value, {\n    domain: cookieHost,\n    encode: cookieEncoder,\n    maxAge: age * 1000,\n    path: '/'\n  });\n};\n\n/**\n * Retrieve the current user's experiment assignment.\n *\n * @param {object} context    Additional context params to be sent for the assignment.\n * @param {string} experiment The experiment experiment to get an assignment for.\n * @param {object} req        The request object of the current page.\n * @param {object} res        Express response object.\n * @param {object} user       The user to get the treatment for.\n *\n * @return {string} The experiment treatment, empty if no treatment assigned.\n */\nconst getAssignment = async _ref2 => {\n  let {\n    context = {},\n    experiment_names = [],\n    req: {\n      cookies = {},\n      hostname = '',\n      ip = '',\n      referrer = '',\n      url = '',\n      user_agent = ''\n    } = {},\n    res,\n    user: {\n      core: {\n        user_id = '',\n        date_joined = '',\n        email = '',\n        package: {\n          is_pro: is_paid = false,\n          package_canonical_name = '',\n          package_id = DEFAULT_PACKAGE_ID\n        } = {}\n      } = {},\n      group_membership: {\n        group_id = '',\n        group_member_type = '',\n        is_admin: is_group_admin = false,\n        is_in_group = false\n      } = {},\n      session: {\n        is_admin_impersonation = false\n      } = {}\n    } = {},\n    country = ''\n  } = _ref2;\n  const assignments = {};\n  const pathname = getPathFromAbsoluteUrl(url, hostname);\n  // Determine the locale of the current site, then convert to a short locale to send to experimentsvc.\n  // We only send the short version to ensure parity with how other apps handle things.\n  const language = getShortLocale(getCurrentLocale(hostname, pathname));\n  const payload = _objectSpread(_objectSpread({\n    // User details.\n    country,\n    date_joined,\n    email,\n    experiment_names,\n    group_id,\n    is_admin_impersonation,\n    is_group_admin,\n    is_group_owner: group_member_type === 'account_owner',\n    is_in_group,\n    is_paid,\n    package_id,\n    package: package_canonical_name,\n    // `package` is a reserved word, so we need to alter it in usage until this point.\n    user_id,\n    // Request details.\n    referrer,\n    url,\n    user_agent,\n    ip_address: ip,\n    language\n  }, Object.keys(cookies).length ? {\n    cookies\n  } : {}), Object.keys(context).length ? {\n    context\n  } : {});\n  const host = process.env.SM_EXPERIMENTSVC_VIP;\n  const timeout = parseInt(process.env.SM_EXPERIMENTSVC_FAST_TIMEOUT, 10);\n  const requestUri = `http://${host}/v1/assignments/__batch`;\n  const config = {\n    timeout,\n    headers: {\n      'User-Agent': process.env.APP_TYPE\n    }\n  };\n  try {\n    const {\n      data: {\n        data = {}\n      } = {}\n    } = await apiFetchService({\n      config,\n      payload,\n      uri: requestUri\n    });\n\n    // Find any actions and perform them.\n    if ('_actions' in data) {\n      const actions = data._actions;\n      if ('set_cookie' in actions) {\n        const setCookie = actions.set_cookie;\n        if (!Array.isArray(setCookie)) {\n          return;\n        }\n        setCookie.forEach(cookie => {\n          setExperimentCookie({\n            cookie,\n            hostname,\n            res\n          });\n        });\n      }\n    }\n    // Trim and filter assignment identifiers with associated treatment names\n    Object.entries(data.assignments ?? {}).forEach(_ref3 => {\n      let [identifier, treatmentValue] = _ref3;\n      return assignments[identifier] = treatmentValue.treatment_name;\n    });\n  } catch (error) {\n    reportError({\n      error,\n      severity: 'info'\n    });\n  }\n  return assignments;\n};\n\n/**\n * Turn an array of assignments into a string.\n *\n * @param {string} accumulator The accumulator to combine the callback's return values.\n * @param {object} assignment  The assignment object.\n *\n * @returns {string} All experiment assignments in the following format: experimentName1:treatmentName1|experimentName2:treatmentName2|...\n */\nconst formatAssignments = (accumulator, assignment) => {\n  const {\n    experiment: {\n      name: experimentName = ''\n    },\n    is_disabled = false,\n    treatment: {\n      status = 1,\n      name: treatmentName = ''\n    }\n  } = assignment;\n  if (!is_disabled && status === 1) {\n    const separator = accumulator.length ? '|' : '';\n    accumulator = `${accumulator}${separator}${experimentName}:${treatmentName}`;\n  }\n  return accumulator;\n};\n\n/**\n * Retrieve all assigned experiments, and set the\n * string representation of these experiments as a cookie.\n *\n * @param {string} hostname The current hostname.\n * @param {object} res      The Express response.\n * @param {object} user     The user to get the assignments for.\n *\n * @return {string} All experiment assignments, empty if no assignments or after encountering a service/network error.\n */\nconst getAssignments = async _ref4 => {\n  let {\n    hostname,\n    res,\n    user: {\n      authenticated = false,\n      core: {\n        user_id = ''\n      }\n    }\n  } = _ref4;\n  // Bail if user is not authenticated.\n  if (!authenticated || user_id === '') {\n    return '';\n  }\n  const params = new URLSearchParams({\n    user_id,\n    site_id: getSiteId(hostname),\n    experiment_status: '2,3' // Active assignments, and active no new assignments.\n  }).toString();\n  const host = process.env.SM_EXPERIMENTSVC_VIP;\n  const timeout = parseInt(process.env.SM_EXPERIMENTSVC_SLOW_TIMEOUT, 10);\n  const requestUri = `http://${host}/v1/assignments/${PERSISTENT_EXPERIMENTS_COOKIE}?${params}`;\n  let assignments = '';\n  try {\n    const {\n      data: {\n        data: {\n          assignments: userAssignments = [],\n          _actions: {\n            set_cookie = []\n          } = {}\n        } = {}\n      } = {},\n      status\n    } = await apiFetchService({\n      config: {\n        timeout\n      },\n      uri: requestUri\n    });\n    if (status === 200) {\n      assignments = userAssignments.reduce(formatAssignments, '');\n      if (Array.isArray(set_cookie)) {\n        set_cookie.forEach(cookie => {\n          setExperimentCookie({\n            cookie,\n            hostname,\n            res\n          });\n        });\n      }\n    }\n  } catch (error) {\n    reportError({\n      error,\n      severity: 'info'\n    });\n  }\n  return assignments;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjQ0NzQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3V0aWwvZXhwZXJpbWVudHMuanM/NjA0OCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///24474\n")},91262:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Ad: () => (/* binding */ getImageSize),\n/* harmony export */   CV: () => (/* binding */ sortObject),\n/* harmony export */   aq: () => (/* binding */ mapFlexValueToLegacyValue),\n/* harmony export */   dv: () => (/* binding */ getSocialLinks),\n/* harmony export */   ku: () => (/* binding */ getImageDetails),\n/* harmony export */   rx: () => (/* binding */ getRange)\n/* harmony export */ });\n/* unused harmony export getCleanIP */\n/**\n * Cleans off junk data from the given IP address.\n *\n * @param {String} ip The IP address to clean.\n *\n * @returns {String}\n */\nconst getCleanIP = ip => {\n  return ip.substr(0, 7) === '::ffff:' ? ip.substr(7) : ip;\n};\n\n/**\n * Simple helper to retrieve a specific image size URL from the given image object.\n *\n * @param {Object} image The image object to retrieve the size from.\n * @param {String} size  The requested iamge size, defaults to `full`.\n *\n * @returns {String}\n */\nconst getImageSize = _ref => {\n  let {\n    image = {},\n    size = 'full'\n  } = _ref;\n  const imageSize = Object.keys(image).includes(size) ? image[size] : '';\n  return typeof imageSize === 'string' ? imageSize : imageSize.src;\n};\n\n/**\n * Simple helper to retrieve a specific image size object from the given image object.\n *\n * @param {Object} image The image object to retrieve the size from.\n * @param {String} size  The requested iamge size, defaults to `full`.\n *\n * @returns {Object}\n */\nconst getImageDetails = _ref2 => {\n  let {\n    image = {},\n    size = 'full'\n  } = _ref2;\n  return Object.keys(image).includes(size) ? image[size] : {};\n};\n\n/**\n * Creates an array of numbers from the first argument to the second argument, inclusive.\n * Useful for creating dummy arrays of a specific length for mapping purposes.\n *\n * @param {Number} start The start point of the array.\n * @param {Number} end   The end point of the array.\n *\n * @return {Array} The array of numbers from the start param to the end param, inclusive.\n */\nconst getRange = (start, end) => {\n  return Array(end - start + 1).fill().map((_, index) => start + index);\n};\n\n/**\n * A simple utility to sort a given object by its keys.\n *\n * @param   {object}  original  The object to sort.\n *\n * @return  {object}            The sorted object.\n */\nconst sortObject = original => {\n  return Object.keys(original).sort().reduce((result, key) => {\n    result[key] = original[key];\n    return result;\n  }, {});\n};\n\n/**\n * Generates an object of social share links for the given link.\n *\n * @param {String} link The link to generate social share links for.\n *\n * @returns {Object}\n */\nconst getSocialLinks = link => {\n  const encodedURL = encodeURIComponent(link);\n  return {\n    fbLink: `https://www.facebook.com/sharer/sharer.php?u=${encodedURL}`,\n    twitterLink: `https://twitter.com/intent/tweet?url=${encodedURL}`,\n    linkedInLink: `https://www.linkedin.com/shareArticle?mini=true&url=${encodedURL}`\n  };\n};\n\n/**\n * To align closer to CSS flex, the contentVerticalAlign's values use `flex-end` and `flex-start`.\n * This helper should only be used by components that rely on the old values of `end` and `start` to set css className.\n * The helper reverts `flex-end` to `end` and `flex-start` to `start`.\n *\n * @param {string} contentVerticalAlign Vertical alignment value\n *\n * @returns {string} Remapped to start or end if flex-start or flex-end\n */\nfunction mapFlexValueToLegacyValue(contentVerticalAlign) {\n  if (contentVerticalAlign === 'flex-end') {\n    return 'end';\n  }\n  if (contentVerticalAlign === 'flex-start') {\n    return 'start';\n  }\n  return contentVerticalAlign;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTEyNjIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vdXRpbC9oZWxwZXJzLmpzPzkxNzUiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///91262\n")},73711:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   $5: () => (/* binding */ isSurveyMonkeyHost),\n/* harmony export */   BX: () => (/* binding */ isMomentiveHost),\n/* harmony export */   CS: () => (/* binding */ isInternalGetFeedbackUrl),\n/* harmony export */   NC: () => (/* binding */ isSMHelpCenterHost),\n/* harmony export */   YM: () => (/* binding */ isGetFeedbackHost),\n/* harmony export */   tn: () => (/* binding */ isWhitelabelHost),\n/* harmony export */   xq: () => (/* binding */ getBaseDomain),\n/* harmony export */   yT: () => (/* binding */ getCookieDomain),\n/* harmony export */   yV: () => (/* binding */ getHostnamePrefix)\n/* harmony export */ });\n/* unused harmony exports getRequestHostname, isEUSurveyMonkeyHost */\n/* harmony import */ var _util_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(39894);\n/* harmony import */ var _gfpApp_constants_paths__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(8614);\n/* harmony import */ var _util_identify_url_locale__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(13785);\n\n\n\n\n/**\n * Pulls the base domain name from config, depending on if we are client or server-side.\n *\n * @returns {String}\n */\nfunction getBaseDomain() {\n  return (0,_util_config__WEBPACK_IMPORTED_MODULE_0__/* .getConfig */ .i)('APP_SURVEYMONKEY_HOST');\n}\n\n/**\n * Grab the hostname and extract first (prefix) part from name (delimited by first `.`).\n * If there is no prefix, return the hostname.\n * Intended to be used with enterprise hostname that has custom subdomain form google.*.com.\n *\n * @param {String} hostname The hostname to work with.\n *\n * @return {string}\n */\nfunction getHostnamePrefix(hostname) {\n  return hostname ? hostname.split('.')[0] : '';\n}\n\n/**\n * Determines the appropriate request hostname for the given request.\n * We use this to provide a simple way to use the `x-sm-host` header when possible.\n *\n * @param {Object} request The express request object.\n * @returns {String} The request hostname.\n */\nfunction getRequestHostname(request) {\n  return request.get('x-sm-host') || request.hostname;\n}\n\n/**\n * Determine whether the given hostname is a Momentive host.\n *\n * @param {String} hostname The hostname to check.\n *\n * @returns {Boolean}\n */\nfunction isMomentiveHost() {\n  let hostname = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return hostname === (0,_util_config__WEBPACK_IMPORTED_MODULE_0__/* .getConfig */ .i)('APP_MOMENTIVE_HOST');\n}\n\n/**\n * Determine whether the given hostname is a GFP host.\n *\n * @param {String} hostname The hostname to check.\n *\n * @returns {Boolean}\n */\nfunction isGetFeedbackHost() {\n  let hostname = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return hostname === (0,_util_config__WEBPACK_IMPORTED_MODULE_0__/* .getConfig */ .i)('APP_GETFEEDBACK_HOST');\n}\n\n/**\n * Determine if the given URL is hosted in CMS web\n *\n * @param {String} hostname The URLs hostname.\n * @param {string} path     The URLs path\n * @returns {Boolean}\n */\nfunction isInternalGetFeedbackUrl() {\n  let hostname = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (0,_util_config__WEBPACK_IMPORTED_MODULE_0__/* .getConfig */ .i)('APP_GETFEEDBACK_HOST');\n  let path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  if (!isGetFeedbackHost(hostname)) {\n    return false;\n  }\n  const nonLangPath = (0,_util_identify_url_locale__WEBPACK_IMPORTED_MODULE_1__/* .removeUrlLocale */ .v)(path);\n\n  // Check if any of our internal paths are a match for the path we have.\n  for (const pathRegex of _gfpApp_constants_paths__WEBPACK_IMPORTED_MODULE_2__/* .internalGetFeedbackPaths */ .U) {\n    if (nonLangPath.match(pathRegex)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Determine whether the given hostname is a SM HelpCenter host.\n *\n * @param {String} hostname The hostname to check.\n *\n * @returns {Boolean}\n */\nfunction isSMHelpCenterHost() {\n  let hostname = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return hostname === (0,_util_config__WEBPACK_IMPORTED_MODULE_0__/* .getConfig */ .i)('APP_HELP_HOST');\n}\n\n/**\n * Determine whether the given hostname is a SurveyMonkey host.\n *\n * @param {String} hostname The hostname to check.\n *\n * @returns {Boolean}\n */\nfunction isSurveyMonkeyHost() {\n  let hostname = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  const isSM = hostname.indexOf((0,_util_config__WEBPACK_IMPORTED_MODULE_0__/* .getConfig */ .i)('APP_SURVEYMONKEY_BASE_HOST')) !== -1;\n\n  // Since SM Help Center uses an SM subdomain, explictly avoid matching it.\n  return isSM && !isSMHelpCenterHost(hostname);\n}\n\n/**\n * Determine whether the given hostname is the EU SurveyMonkey host.\n *\n * @param {String} hostname The hostname to check.\n *\n * @returns {Boolean}\n */\nfunction isEUSurveyMonkeyHost() {\n  let hostname = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  const smBase = getConfig('APP_SURVEYMONKEY_COOKIE_HOST');\n  const euHost = `eu${smBase}`;\n  return hostname === euHost;\n}\n\n/**\n * Determine whether the given hostname is our whitelabel host.\n *\n * @param {String} hostname The hostname to check.\n *\n * @returns {Boolean}\n */\nfunction isWhitelabelHost() {\n  let hostname = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return hostname.indexOf((0,_util_config__WEBPACK_IMPORTED_MODULE_0__/* .getConfig */ .i)('APP_RESEARCH_BASE_HOST')) !== -1;\n}\n\n/**\n * Returns the pre-determined cookie host depending on what the primary host is.\n *\n * @param {String} hostname The hostname to check.\n *\n * @return {string}\n */\nfunction getCookieDomain(hostname) {\n  if (isMomentiveHost(hostname)) {\n    return (0,_util_config__WEBPACK_IMPORTED_MODULE_0__/* .getConfig */ .i)('APP_MOMENTIVE_COOKIE_HOST');\n  }\n  if (isGetFeedbackHost(hostname)) {\n    return (0,_util_config__WEBPACK_IMPORTED_MODULE_0__/* .getConfig */ .i)('APP_GETFEEDBACK_COOKIE_HOST');\n  }\n  if (isSMHelpCenterHost(hostname)) {\n    return (0,_util_config__WEBPACK_IMPORTED_MODULE_0__/* .getConfig */ .i)('APP_HELP_COOKIE_HOST');\n  }\n  if (isWhitelabelHost(hostname)) {\n    // We do not have a pre-determined cookie host for Research.net, so just trim `www` from the base host.\n    return (0,_util_config__WEBPACK_IMPORTED_MODULE_0__/* .getConfig */ .i)('APP_RESEARCH_HOST').replace('www', '');\n  }\n  if (isSurveyMonkeyHost(hostname)) {\n    // Ensure that we match the cookie TLD to a ccTLD if we are on one.\n    const currentTLD = ['.co.uk', '.de'].find(tld => hostname.endsWith(tld)) ?? '.com';\n    const smBase = (0,_util_config__WEBPACK_IMPORTED_MODULE_0__/* .getConfig */ .i)('APP_SURVEYMONKEY_BASE_HOST');\n    return `.${smBase}${currentTLD}`;\n  }\n  return (0,_util_config__WEBPACK_IMPORTED_MODULE_0__/* .getConfig */ .i)('APP_SURVEYMONKEY_COOKIE_HOST');\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzM3MTEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3V0aWwvaG9zdHMuanM/NTFhMSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///73711\n")},13785:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   v: () => (/* binding */ removeUrlLocale)\n/* harmony export */ });\n/* unused harmony export identifyUrlLocale */\n/**\n * If possible return object with the language path and non-language path of a URL\n *\n * @param {string} path   URL which contains language path\n * @returns {object}      Object containing `groups`, which contains `langPath` and `nonLangPath`, or an empty object\n */\nfunction identifyUrlLocale(path) {\n  const pattern = /^(?<langPath>\\/(de|en-gb|en|es-la|fr|it|ja|ko|nl|pt-br|ru|tr|zh))(?<nonLangPath>.*)$/i;\n  return pattern.exec(path) || {};\n}\n\n/**\n * Return the non-language path of a URL's path\n *\n * @param {string} path   URL which contains language path\n * @returns {object}      Object containing `groups`, which contains `langPath` and `nonLangPath`, or an empty object\n */\nfunction removeUrlLocale(path) {\n  const {\n    groups: {\n      nonLangPath = path\n    } = {}\n  } = identifyUrlLocale(path);\n  return nonLangPath;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTM3ODUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vdXRpbC9pZGVudGlmeS11cmwtbG9jYWxlLmpzPzY2MGMiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///13785\n")},75025:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   N: () => (/* binding */ inlineAnchorToSMLink),\n/* harmony export */   d: () => (/* binding */ parseHtml)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(25773);\n/* harmony import */ var _babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(53782);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(27378);\n/* harmony import */ var html_react_parser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(70090);\n/* harmony import */ var _shared_components_SMLink__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(82395);\n/* harmony import */ var _mds_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(74689);\n/* harmony import */ var _mds_constants_tracking__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(3568);\n/* harmony import */ var _debug_logging__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(31905);\n\n\nconst _excluded = ["href"];\n\n\n\n\n\n\n\n// @todo add unit tests for these functions\n// @see https://momentiveai.atlassian.net/browse/CMS-7536\n/**\n * A transform function passed to the `options` parameter of `reactHtmlParser`\n * to replace inline `<a />` links with our `SMLink` React component,\n * which uses SPA when possible and adds tracking params.\n *\n * @param {Node}          node              The DOM node to transform in object form, provided by `reactHtmlParser`.\n * @param {Object}        node.attribs      All attributes on the provided DOM node.\n * @param {String}        node.attribs.href The `href` attribute of the node.\n * @param {Array}         node.children     The children of the provided node.\n * @param {String}        node.name         The HTML element of the provided node.\n * @param {String}        node.type         The type of the provided node.\n * @param {String|number} index             A unique index for the mapped children.\n * @param {boolean}       isChildOfAnchor   Whether this is a recursion within an anchor or the top-level.\n *\n * @returns {Node|undefined} The `SMLink` component if applicable, otherwise `undefined`, leaving the original node untransformed.\n */\nfunction inlineAnchorToSMLink(_ref, index) {\n  let isChildOfAnchor = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  let {\n      attribs: {\n        href\n      } = _mds_constants__WEBPACK_IMPORTED_MODULE_2__/* .EMPTY_OBJECT */ .Nu,\n      children = _mds_constants__WEBPACK_IMPORTED_MODULE_2__/* .EMPTY_ARRAY */ .LZ,\n      name: Name,\n      type\n    } = _ref,\n    attribs = (0,_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__/* ["default"] */ .Z)(_ref.attribs, _excluded);\n  try {\n    /* Recursively evaluate any children */\n    const Children = children.length ? children.map((child, index) => {\n      if (child?.type === \'tag\') {\n        return inlineAnchorToSMLink(child, index, true);\n      }\n      return child.data || null;\n    }) : null;\n\n    // On recursions, evaluate any tag, not just anchors.\n    if (isChildOfAnchor) {\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Name, (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)({\n        key: index\n      }, attribs), Children);\n    }\n\n    /**\n     * At the top level before any recursions, return `undefined` if the element is not an anchor or has no children\n     * in order to skip the transformation altogether, per reactHtmlParser docs.\n     *\n     * @see https://github.com/remarkablemark/html-react-parser#replace\n     */\n    if (Name !== \'a\' || type !== \'tag\' || !children.length) {\n      return undefined;\n    }\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_shared_components_SMLink__WEBPACK_IMPORTED_MODULE_5__/* ["default"] */ .Z, (0,_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_4__/* ["default"] */ .Z)({\n      to: href,\n      key: index,\n      withTracking: _mds_constants_tracking__WEBPACK_IMPORTED_MODULE_6__/* .WITH_TRACKING_VALUES */ .G0.inline\n    }, attribs), Children);\n  } catch (e) {\n    // There is logging-coverage elsewhere.\n    return undefined;\n  }\n}\n\n/**\n * A wrapper around `reactHtmlParser` that transforms `a` elements\n * to `SMLink` components by default.\n *\n * @param {String}   html            The original HTML string.\n * @param {Object}   options         Options passed to `reactHtmlParser`.\n * @param {Function} options.replace The transform function applied to each element.\n *\n * @returns The result of the `reactHtmlParser` function.\n */\nfunction parseHtml(html) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    replace: inlineAnchorToSMLink\n  };\n  // Ensure we ONLY pass strings to the parser else we receive an error.\n  if (typeof html === \'string\' || html instanceof String) {\n    return (0,html_react_parser__WEBPACK_IMPORTED_MODULE_1__/* ["default"] */ .ZP)(html, options);\n  }\n  const debugData = {\n    htmlType: typeof html,\n    html\n  };\n  (0,_debug_logging__WEBPACK_IMPORTED_MODULE_7__/* .debugLog */ .q)(\'Argument passed to parseHtml was not a string\', debugData);\n  return html;\n}\ninlineAnchorToSMLink.__docgenInfo = {\n  "description": "A transform function passed to the `options` parameter of `reactHtmlParser`\\nto replace inline `<a />` links with our `SMLink` React component,\\nwhich uses SPA when possible and adds tracking params.\\n\\n@param {Node}          node              The DOM node to transform in object form, provided by `reactHtmlParser`.\\n@param {Object}        node.attribs      All attributes on the provided DOM node.\\n@param {String}        node.attribs.href The `href` attribute of the node.\\n@param {Array}         node.children     The children of the provided node.\\n@param {String}        node.name         The HTML element of the provided node.\\n@param {String}        node.type         The type of the provided node.\\n@param {String|number} index             A unique index for the mapped children.\\n@param {boolean}       isChildOfAnchor   Whether this is a recursion within an anchor or the top-level.\\n\\n@returns {Node|undefined} The `SMLink` component if applicable, otherwise `undefined`, leaving the original node untransformed.",\n  "methods": [],\n  "displayName": "inlineAnchorToSMLink",\n  "props": {\n    "attribs": {\n      "defaultValue": {\n        "value": "EMPTY_OBJECT",\n        "computed": true\n      },\n      "required": false\n    },\n    "children": {\n      "defaultValue": {\n        "value": "EMPTY_ARRAY",\n        "computed": true\n      },\n      "required": false\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzUwMjUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi91dGlsL2lubGluZS1saW5rcy5qcz9lOGQwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///75025\n')},9002:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   D: () => (/* binding */ isInternalService),\n/* harmony export */   L: () => (/* binding */ getHostnameFromUri)\n/* harmony export */ });\n/* harmony import */ var _util_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(39894);\n\n\n/**\n * Returns the hostname or an empty string if uri is a relative link (meaning SM-owned)\n *\n * @param {string} uri The URI to derive hostname from\n * @returns {string|null}\n */\nfunction getHostnameFromUri(uri) {\n  try {\n    return new URL(uri).host;\n  } catch (error) {\n    // If it throws an error it means a local path is being used.\n    return null;\n  }\n}\n\n/**\n * Returns a boolean based on if the given uri is an internal service\n *\n * @param {string} uri The uri to check\n * @returns {boolean}\n */\nfunction isInternalService(uri) {\n  const hostname = getHostnameFromUri(uri);\n  if (!hostname) {\n    // If getHostnameFromUri returns null then uri is local so return true\n    return true;\n  }\n  const vip = [(0,_util_config__WEBPACK_IMPORTED_MODULE_0__/* .getConfig */ .i)('APP_SERVICE_VIP'), (0,_util_config__WEBPACK_IMPORTED_MODULE_0__/* .getConfig */ .i)('SM_EXPERIMENTSVC_VIP'), (0,_util_config__WEBPACK_IMPORTED_MODULE_0__/* .getConfig */ .i)('SM_PRICINGSVC_VIP'), (0,_util_config__WEBPACK_IMPORTED_MODULE_0__/* .getConfig */ .i)('SM_USERSVC_VIP')];\n  return vip.includes(hostname) || /jungle\\.tech$/i.test(hostname);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTAwMi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi91dGlsL2lzLWludGVybmFsLXNlcnZpY2UuanM/N2M2OCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///9002\n")},41462:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  Cw: () => (/* binding */ generateLink),\n  R: () => (/* binding */ getPathFromAbsoluteUrl),\n  Bi: () => (/* binding */ getUrlObject)\n});\n\n// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/defineProperty.js\nvar defineProperty = __webpack_require__(64649);\n// EXTERNAL MODULE: ./util/tracking.js\nvar tracking = __webpack_require__(39527);\n// EXTERNAL MODULE: ./util/config.js\nvar config = __webpack_require__(39894);\n// EXTERNAL MODULE: ./util/properties.js\nvar properties = __webpack_require__(29311);\n;// CONCATENATED MODULE: ./util/redirects.js\n\n\n\n\n\n/**\n * Find the destination URL based on the request params.\n *\n * @param {string} host                        The current hostname.\n * @param {string} path                        The path part of the request URL.\n * @param {Object} redirects.staticRedirects   Known static redirects and their destinations.\n * @param {Object} redirects.wildcardRedirects Wildcard redirects and their destinations.\n * @param {Object} redirects.regexRedirects    Regex redirects\n *\n * @returns {string}\n */\nfunction getRedirectDestination(host, path, _ref) {\n  let {\n    staticRedirects = {},\n    wildcardRedirects = {},\n    regexRedirects = {}\n  } = _ref;\n  let destination = '';\n\n  // Try to find a static redirect using the full URL.\n  const source = `https://${host}${path}`;\n  if (Object.prototype.hasOwnProperty.call(staticRedirects, source)) {\n    destination = staticRedirects[source];\n  } else if (Object.prototype.hasOwnProperty.call(staticRedirects, path)) {\n    // Try to find a static redirect using the page path.\n    destination = staticRedirects[path];\n  } else {\n    // If we do not have a redirect yet, try our set of wildcard redirects.\n    const wildcardKey = Object.keys(wildcardRedirects).find(key => path.startsWith(key));\n    if (typeof wildcardKey !== 'undefined') {\n      destination = wildcardRedirects[wildcardKey];\n    }\n  }\n  const regexKeys = Object.keys(regexRedirects);\n  if (regexKeys.length > 0) {\n    const regexKey = regexKeys.find(key => path.match(new RegExp(key)));\n    if (typeof regexKey !== 'undefined') {\n      destination = path.replace(new RegExp(regexKey), regexRedirects[regexKey]);\n    }\n  }\n  const momentiveHost = (0,config/* getConfig */.i)('APP_MOMENTIVE_HOST');\n  const primaryHost = (0,config/* getConfig */.i)('APP_SURVEYMONKEY_HOST');\n\n  // Replace any placeholders that might be in the destination.\n  if (destination !== '') {\n    destination = destination.replace('{momentiveHostname}', `https://${momentiveHost}`).replace('{currentHostname}', `https://${host}`).replace('{primaryHostname}', `https://${primaryHost}`);\n  }\n  return destination;\n}\n\n/**\n * Replace language in path with `locale` param and redirect destination.\n *\n * @param {Object}   req    Express Request object.\n * @param {Object}   res    Express Response object.\n * @param {string}   locale Redirect to locale.\n *\n */\nfunction redirectLocaleDirectories(req, res, locale) {\n  const hostname = getRequestHostname(req);\n  if (!hasLocaleDirectories(hostname)) {\n    return;\n  }\n  const language = getLocalePath(getLocaleFromPath(req.path));\n  const path = req.path.replace(`${language}/`, '/');\n  const destination = `https://${hostname}${locale}${path}`;\n  debugLog('Redirecting path', {\n    destination\n  });\n  return res.redirect(301, destination);\n}\n// EXTERNAL MODULE: ./util/hosts.js\nvar hosts = __webpack_require__(73711);\n// EXTERNAL MODULE: ../packages/apps/SurveyMonkey/src/constants/redirects.js\nvar redirects = __webpack_require__(20047);\n// EXTERNAL MODULE: ./constants/properties.js\nvar constants_properties = __webpack_require__(78961);\n;// CONCATENATED MODULE: ./util/is-spa-valid-link.js\n\n\n/**\n * Determine if the hostname and path being navigated to can be reached via SPA.\n *\n * @param {string} hostname The hostname being used in the link.\n * @param {string} path     The link's URL path.\n *\n * @return {boolean} Whether or not the link can use SPA.\n */\nfunction isSPAValidLink(hostname, path) {\n  return (0,hosts/* isInternalGetFeedbackUrl */.CS)(hostname, path) || (0,hosts/* isMomentiveHost */.BX)(hostname) || (0,hosts/* isSurveyMonkeyHost */.$5)(hostname) || (0,hosts/* isSMHelpCenterHost */.NC)(hostname) || (0,hosts/* isWhitelabelHost */.tn)(hostname);\n}\n;// CONCATENATED MODULE: ./util/links.js\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0,defineProperty/* default */.Z)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n\n\n\n\n\n\n\n\n\n/**\n * Converts an absolute URL to a valid internal path if it remains on the current host, if possible.\n *\n * @param {String} absoluteUrl     The absolute URL to match.\n * @param {String} currentHostname The hostname for the current page.\n *\n * @returns {String|Boolean} The matched path, the original URL if it was not converted.\n */\nconst getPathFromAbsoluteUrl = (absoluteUrl, currentHostname) => {\n  let url;\n  try {\n    url = new URL(absoluteUrl);\n  } catch (error) {\n    return absoluteUrl;\n  }\n  const {\n    hostname,\n    pathname\n  } = url;\n\n  // If the link crosses hostnames, bail.\n  if (hostname !== currentHostname) {\n    return absoluteUrl;\n  }\n\n  // If we are on the whitelabel site but the destination path is not the homepage, bail.\n  if ((0,hosts/* isWhitelabelHost */.tn)(hostname) && pathname !== '/') {\n    return absoluteUrl;\n  }\n  return pathname;\n};\n\n/**\n * There are a number of instances where we need a URL object from a string,\n * so this handles error catching in a neatly re-usable utility.\n *\n * @param   {string|object}  link     The link to transform.\n * @param   {string}         hostname The current hostname, used to parse relative URL paths.\n *\n * @return  {object}               The URL object if successful, an empty object otherwise.\n */\nconst getUrlObject = (link, hostname) => {\n  // If the link provided is already an object, we do not need to process it.\n  if (typeof link === 'object') {\n    return link;\n  }\n\n  // If hostname doesn't have a value, default to SM.\n  if (!hostname) {\n    hostname = (0,config/* getConfig */.i)('APP_SURVEYMONKEY_HOST');\n  }\n  try {\n    return new URL(link, `https://${hostname}`);\n  } catch (error) {\n    return {};\n  }\n};\n\n/*\n * WordPress block attributes are 'sanitized' against script injection. As part of the sanitization, WordPress will\n * replace all `&` with `&amp;`. Since this sanitization breaks urls, convert `&amp;` back to `& before link generation.\n *\n * @param {String|Object} to  Either the target path string or an object containing the target path\n *\n * @return  {String|Object}   Returns either a converted object or a string (whichever was passed in). The path will\n *                            have &amp; converted to &.\n *\n */\nfunction convertAmp(to) {\n  const pathString = to?.pathname || to;\n  const unsanitizedUrl = typeof pathString === 'string' ? pathString.replace(/&amp;/g, '&') : pathString;\n  let toCopy = to;\n  if (to?.pathname) {\n    toCopy.pathname = unsanitizedUrl;\n  } else {\n    toCopy = unsanitizedUrl;\n  }\n  return toCopy;\n}\n\n/**\n * Our app processes every link rendered to achieve a number of goals:\n *  - Add tracking params to any internal link\n *  - Identify links to other CMS pages and use SPA navigation\n *  - Pre-evaluate known redirects to transform links from outdated destinations to the new one seamlessly\n *\n * Given the heavy amount of logic, it helps to centralize to a utility function that performs the\n * entire suite of checks consistently and in an easier-to-test format than a React component.\n *\n * @param   {string}          currentHostname  The current hostname of the page.\n * @param   {string}          currentPath      The path of the current page.\n * @param   {string}          currentSearch    Any query params on the current page.\n * @param   {boolean}         isTargetedLink   Whether or not the link element has a \"target\" defined.\n * @param   {string}          linkText         The text content of the link element (for tracking purposes).\n * @param   {object|string}   to               The destination, either an object (for React Router Link usage) or a URL string.\n * @param   {boolean}         useSPA\n * @param   {boolean|string}  withTracking     Whether to add tracking params to the URL,\n *                                             boolean for generic param or a string containing the desired `placement` param value.\n *\n * @return  {object|string}                    If the link is safe to use SPA, returns React Router link props as an object.\n *                                             Otherwise the url string.\n */\nconst generateLink = _ref => {\n  let {\n    currentHostname,\n    currentPath,\n    currentSearch,\n    isTargetedLink,\n    linkText,\n    to,\n    useSPA,\n    withTracking\n  } = _ref;\n  const originalDestination = to?.pathname || to;\n  to = convertAmp(to);\n  const currentUrl = `${currentPath}${currentSearch}`;\n  const destination = getUrlObject(to, currentHostname);\n  const {\n    hash: linkHash = '',\n    hostname: linkHostname = '',\n    protocol: linkProtocol = 'https:',\n    search: linkSearch = ''\n  } = destination;\n  let {\n    pathname: linkTo = ''\n  } = destination;\n  // If our destination is purely an anchor link or an email link, return original string.\n  if (originalDestination.startsWith('#') || originalDestination.startsWith('mailto:')) {\n    return to;\n  }\n  let isAbsoluteLink = originalDestination.replace(`https://${currentHostname}`, '').startsWith('http');\n  let destinationProperty = isAbsoluteLink ? '' : (0,properties/* getProperty */.$s)(linkTo, currentHostname);\n\n  // If this is an absolute link outside of the current hostname, re-attach the protocol and hostname to the link path.\n  if (isAbsoluteLink) {\n    linkTo = `${linkProtocol}//${linkHostname}${linkTo}`;\n  }\n\n  // If SPA is allowed and this is an internal (CMS) link, then force trailing-slash.\n  if (useSPA && destinationProperty.length) {\n    linkTo.replace(/\\/?(\\?|#|$)/, '/$1');\n  }\n\n  // Attempt to reduce absolute links to a path to simplify things.\n  if (isAbsoluteLink) {\n    const webPath = getPathFromAbsoluteUrl(linkTo, currentHostname);\n    if (linkTo !== webPath) {\n      linkTo = webPath;\n\n      // If we converted to a path, do not consider it an absolute link anymore.\n      isAbsoluteLink = false;\n    }\n  }\n\n  // Attempt to pre-resolve known redirects if we're on SurveyMonkey.\n  if ((0,hosts/* isSurveyMonkeyHost */.$5)(currentHostname) || (0,hosts/* isWhitelabelHost */.tn)(currentHostname)) {\n    const newDestination = getRedirectDestination(currentHostname, linkTo, {\n      staticRedirects: redirects/* KNOWN_STATIC_REDIRECTS */.ts,\n      wildcardRedirects: redirects/* KNOWN_WILDCARD_REDIRECTS */.Cr\n    });\n    if (newDestination.length) {\n      linkTo = newDestination;\n\n      // Attempt to convert absolute links to relative ones if it stays on the current hostname.\n      if (useSPA) {\n        linkTo = linkTo.replace(`https://${currentHostname}`, '');\n      }\n    }\n  }\n\n  // Re-evaluate the absolute link status and property in case our destination changed in the filtering above.\n  isAbsoluteLink = linkTo.indexOf('http') === 0;\n  destinationProperty = isAbsoluteLink ? '' : (0,properties/* getProperty */.$s)(linkTo, currentHostname);\n\n  /**\n   * It is safe to use SPA for this if the link is:\n   *  - allowed to use SPA in this context\n   *  - not destined for a specific \"target\" (ie. `_blank`)\n   *  - not absolute (includes the protocol & host)\n   *  - to a valid CMS property\n   *  - not to the root of the domain (see below)\n   *\n   * The root URL check is a temporary workaround to navigate to SurveyMonkey homepage rather than\n   * whitelabel homepage (i.e., research.net) for '/'.\n   *\n   * @TODO Remove homepage check once it is migrated to Web from AnonWeb in all environments.\n   *\n   * @type {Boolean}\n   */\n  const safeForSPA = useSPA && !isTargetedLink && !isAbsoluteLink && destinationProperty.length && linkTo !== constants_properties/* PATHS */.yy.homepage && isSPAValidLink(linkHostname, linkTo);\n  const {\n    base,\n    fullUrl,\n    hash,\n    hrefSearch,\n    stateSearch\n  } = (0,tracking/* buildTrackingUrl */.dH)({\n    currentHostname,\n    currentUrl,\n    href: `${linkTo}${linkSearch}${linkHash}`,\n    // Re-construct the destination from its parts.\n    placement: withTracking,\n    returnWithParts: true,\n    text: linkText\n  });\n\n  // Return RouterLink props if the link is safe for SPA, otherwise return the full url.\n  return safeForSPA ? _objectSpread(_objectSpread({}, typeof to === 'string' ? {} : to), {}, {\n    hash,\n    pathname: base,\n    search: hrefSearch,\n    state: _objectSpread(_objectSpread({}, stateSearch), {}, {\n      prevPathname: currentPath,\n      prevSearch: currentSearch\n    })\n  }) : fullUrl;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDE0NjIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7QUMzRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDWkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi91dGlsL3JlZGlyZWN0cy5qcz8xNGM0Iiwid2VicGFjazovLy8uL3V0aWwvaXMtc3BhLXZhbGlkLWxpbmsuanM/M2Q2MSIsIndlYnBhY2s6Ly8vLi91dGlsL2xpbmtzLmpzPzQ1NWYiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///41462\n")},41533:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BH: () => (/* binding */ getCurrentLocale),\n/* harmony export */   Er: () => (/* binding */ wufooUrl),\n/* harmony export */   HR: () => (/* binding */ hasWufoo),\n/* harmony export */   JM: () => (/* binding */ hasCX),\n/* harmony export */   PH: () => (/* binding */ hasCuriosityBlog),\n/* harmony export */   PS: () => (/* binding */ getLangURL),\n/* harmony export */   Pm: () => (/* binding */ getSMHelpCenterLang),\n/* harmony export */   WU: () => (/* binding */ getLocalePath),\n/* harmony export */   cQ: () => (/* binding */ hasEngage),\n/* harmony export */   iE: () => (/* binding */ getTranslatedTextLink),\n/* harmony export */   j3: () => (/* binding */ isUSEnglish),\n/* harmony export */   k4: () => (/* binding */ getLocaleData),\n/* harmony export */   kH: () => (/* binding */ formattedNumber),\n/* harmony export */   kj: () => (/* binding */ hasApply),\n/* harmony export */   lp: () => (/* binding */ getSMLangHostBase),\n/* harmony export */   pW: () => (/* binding */ getTranslatedMessages),\n/* harmony export */   vO: () => (/* binding */ isEnglish),\n/* harmony export */   xH: () => (/* binding */ getShortLocale),\n/* harmony export */   yV: () => (/* binding */ hasTechValidate)\n/* harmony export */ });\n/* unused harmony exports getCountryCode, hasLocaleDirectories, getFullLocale, getLanguageFromLocale, getLanguageFromHostname, getLocaleFromHostname, getLocaleFromPath, getLangPath, getSMProperties */\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(64649);\n/* harmony import */ var _sm_intl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(8239);\n/* harmony import */ var _mds_constants_products__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(95335);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(26933);\n/* harmony import */ var _mds_utils_config__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(39894);\n/* harmony import */ var _util_network__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(43705);\n/* harmony import */ var _util_hosts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(73711);\n/* harmony import */ var _constants_locales__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(45804);\n/* harmony import */ var _constants_languages__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(89752);\n/* harmony import */ var _debug_logging__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(31905);\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Language sensitive number formatting.\n *\n * @param {Integer} value  The number to format.\n * @param {String}  locale The locale string for the user e.g. 'en-US'.\n * @param {Object}  props  The options for the number formatting.\n *\n * @returns {String}\n */\nfunction formattedNumber(value, locale) {\n  let props = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return new Intl.NumberFormat(locale, _objectSpread({}, props)).format(value);\n}\n\n/**\n * Gets the country code from the header passed from our frontdoor routing.\n *\n * @param {Object} req Request object.\n *\n * @returns {String}\n */\nfunction getCountryCode(req) {\n  return req.get('X-Origin-Country') || 'US';\n}\n\n/**\n * Determine whether or not the current hostname has locale directories.\n *\n * @param {String} hostname The current hostname.\n * @returns  {Boolean}\n */\nfunction hasLocaleDirectories(hostname) {\n  return (0,_util_hosts__WEBPACK_IMPORTED_MODULE_2__/* .isGetFeedbackHost */ .YM)(hostname) || (0,_util_hosts__WEBPACK_IMPORTED_MODULE_2__/* .isMomentiveHost */ .BX)(hostname) || (0,_util_hosts__WEBPACK_IMPORTED_MODULE_2__/* .isSMHelpCenterHost */ .NC)(hostname);\n}\n\n/**\n * Retrieves the full language code for the given locale.\n * If the locale given is not found, defaults to en-US.\n *\n * @param {String} locale The language to get locale code for, can be short or long.\n *\n * @returns {String}\n */\nfunction getFullLocale(language) {\n  // Normalize the locale to be safe.\n  const searchLang = language.toLowerCase();\n  let fullLocale = _constants_languages__WEBPACK_IMPORTED_MODULE_3__/* .SHORT_LANGUAGE_CODES */ .wV[searchLang] || false;\n  if (!fullLocale) {\n    const foundLocale = Object.keys(_constants_languages__WEBPACK_IMPORTED_MODULE_3__/* .SM_LANGUAGES */ ._L).find(key => key.toLowerCase() === searchLang);\n    fullLocale = foundLocale || _constants_locales__WEBPACK_IMPORTED_MODULE_4__/* .LANG_EN_US */ .Lg;\n  }\n  return fullLocale;\n}\n\n/**\n * Retrieves the language name for the given locale code.\n *\n * @param {String} locale The locale to lookup.\n *\n * @returns {String}\n */\nfunction getLanguageFromLocale(locale) {\n  return SM_LANGUAGES[locale].language || SM_LANGUAGES[LANG_EN_US].language;\n}\n\n/**\n * Retrieves local data for the given locale, used client-side.\n *\n * @param {String} locale The locale to get messages for.\n *\n * @returns {Object}\n */\nfunction getLocaleData(locale) {\n  // Find and require context for locale data, only for locales we support.\n  const localeData = __webpack_require__(96937);\n  localeData(`./${locale}.js`);\n}\n\n/**\n * Parses the request hostname and determines the language we should use.\n * Check the ccTLD first for simplicity.\n *\n * @param {String} hostname Request hostname.\n *\n * @returns {String}\n */\nfunction getLanguageFromHostname(hostname) {\n  let currentLang = _constants__WEBPACK_IMPORTED_MODULE_5__/* .EMPTY_STRING */ .v;\n\n  // Check for a matching ccTLD first to keep it simple.\n  const foundTld = Object.keys(_constants_locales__WEBPACK_IMPORTED_MODULE_4__/* .SM_CC_TLDS */ .Wg).find(tld => hostname.endsWith(tld));\n  if (foundTld) {\n    currentLang = _constants_locales__WEBPACK_IMPORTED_MODULE_4__/* .SM_CC_TLDS */ .Wg[foundTld];\n  } else {\n    // If we did not match a ccTLD, check the subdomain.\n    const hostParts = hostname.split('.');\n\n    // We need at least three parts for a valid subdomain (ie. fr.surveymonkey.com).\n    currentLang = hostParts.length > 2 ? hostParts[0] : _constants_locales__WEBPACK_IMPORTED_MODULE_4__/* .LANG_EN_US */ .Lg;\n  }\n  return currentLang;\n}\n\n/**\n * Parses the request hostname and determines the full locale we should use.\n *\n * @param {String} hostname Request hostname.\n *\n * @returns {String}\n */\nfunction getLocaleFromHostname(hostname) {\n  const currentLang = getLanguageFromHostname(hostname);\n  // Make sure we end up with a full language code at the end.\n  return getFullLocale(currentLang);\n}\n\n/**\n * Parses the current path and determines the language we should use.\n *\n * Passing `null` as the `defaultLocale` value will perform a pure check of the locale\n * from the path without assuming a default, and will return `null` if one cannot be matched.\n *\n * @param {String} path           Request path.\n * @param {String} defaultLocale  The locale to assume if one cannot be derived.\n *\n * @returns {String}\n */\nfunction getLocaleFromPath(path) {\n  let defaultLocale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _constants_locales__WEBPACK_IMPORTED_MODULE_4__/* .LANG_EN_US */ .Lg;\n  /**\n   * A pattern to extract the language directory prefix from the URL.\n   * i.e., it will match `/de` from `/de/about/`.\n   */\n  const langPattern = /^(?<langPath>\\/[^/]+)\\/(?:.*)$/i;\n  const {\n    groups: {\n      langPath = defaultLocale\n    } = {}\n  } = langPattern.exec(path) || {};\n  if (!langPath && !defaultLocale) {\n    // Undefined, return that as an indication\n    return langPath;\n  }\n\n  // Loop through our local directories mapping to find one that matches the language path.\n  return Object.keys(_constants_languages__WEBPACK_IMPORTED_MODULE_3__/* .LOCALE_DIRECTORIES */ .Jk).find(locale => _constants_languages__WEBPACK_IMPORTED_MODULE_3__/* .LOCALE_DIRECTORIES */ .Jk[locale] === langPath) || defaultLocale;\n}\n\n/**\n * Determine the locale for the current request based on either the hostname or path,\n * which is determined by which network (hostname) we're on.\n *\n * @param {String} hostname The current hostname.\n * @param {String} path     The current path.\n *\n * @returns {String} The current locale, or en-US if indeterminate.\n */\nfunction getCurrentLocale(hostname, path) {\n  // Handle networks that use path-based languages.\n  if (hasLocaleDirectories(hostname)) {\n    return getLocaleFromPath(path);\n  }\n\n  // Assume all others use domain-based languages.\n  return getLocaleFromHostname(hostname);\n}\n\n/**\n * Retrieve the locale path base for the given locale.\n *\n * @param {String} locale The locale to get a path for.\n * @returns {String}\n */\nfunction getLocalePath(locale) {\n  return _constants_languages__WEBPACK_IMPORTED_MODULE_3__/* .LOCALE_DIRECTORIES */ .Jk[locale];\n}\n\n/**\n * Retrieves the short language code for the given full locale.\n *\n * @param {String} locale The full locale to get the short language for.\n *\n * @returns {String}\n */\nfunction getShortLocale(locale) {\n  return locale in _constants_languages__WEBPACK_IMPORTED_MODULE_3__/* .SM_LANGUAGES */ ._L ? _constants_languages__WEBPACK_IMPORTED_MODULE_3__/* .SM_LANGUAGES */ ._L[locale].shortCode : _constants_languages__WEBPACK_IMPORTED_MODULE_3__/* .SM_LANGUAGES */ ._L[_constants_locales__WEBPACK_IMPORTED_MODULE_4__/* .LANG_EN_US */ .Lg].shortCode;\n}\n\n/**\n * Returns the appropriate help center language given for the given language.\n *\n * @param {String} lang The language code.\n * @returns {String}\n */\nfunction getSMHelpCenterLang() {\n  let lang = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _constants_locales__WEBPACK_IMPORTED_MODULE_4__/* .LANG_EN_US */ .Lg;\n  return _constants_languages__WEBPACK_IMPORTED_MODULE_3__/* .SM_LANGUAGES */ ._L[lang].helplink;\n}\n\n/**\n * Generate a language-based hostname based on the base host env configuration.\n *\n * @param {String} currentLocale The current language locale.\n *\n * @returns {String}\n */\nfunction getSMLangHostBase(currentLocale) {\n  const hostBase = _constants_languages__WEBPACK_IMPORTED_MODULE_3__/* .SM_LANGUAGES */ ._L[currentLocale].hostBase;\n  const host = (0,_mds_utils_config__WEBPACK_IMPORTED_MODULE_6__/* .getConfig */ .i)('APP_SURVEYMONKEY_BASE_HOST');\n  return hostBase.replace('{{HOSTNAME}}', host);\n}\n\n/**\n * Retrieves translated messages for the given locale.\n *\n * @param {String} locale The locale to get messages for.\n *\n * @returns {Object}\n */\nfunction getTranslatedMessages(locale) {\n  if (locale === 'en-US') {\n    return null;\n  }\n  (0,_debug_logging__WEBPACK_IMPORTED_MODULE_7__/* .debugLog */ .q)(` Loading translations for ${locale} from ./${locale}.json`);\n  const translationFiles = __webpack_require__(74873);\n  return translationFiles(`./${locale}.json`) || {};\n}\n\n/**\n * Retrieves translated messages for the given locale.\n *\n * @param {Object} links Set of text links in default english.\n * @param {String} entry Key prop into links object.\n *\n * @returns {Object}\n */\nfunction getTranslatedTextLink(links) {\n  const copyMessage = links.copyMessage;\n  const copyMessageAddon = links.copyMessageAddon;\n  if (!copyMessage) {\n    // OneTrust handles such cases but needs BLANK_STRING\n    return _constants__WEBPACK_IMPORTED_MODULE_5__/* .BLANK_STRING */ .s;\n  }\n  if (typeof copyMessage === 'string') {\n    // straight out text that will not be translated - company names for logos\n    return copyMessage;\n  }\n  if (!copyMessageAddon) {\n    return (0,_sm_intl__WEBPACK_IMPORTED_MODULE_1__.t)(copyMessage);\n  }\n  return (0,_sm_intl__WEBPACK_IMPORTED_MODULE_1__.t)(copyMessage, copyMessageAddon);\n}\n\n/**\n * Checks if the given language is English (either US or GB).\n *\n * @param {String} lang The language code.\n * @returns {Boolean}\n */\nfunction isEnglish(lang) {\n  return [_constants_locales__WEBPACK_IMPORTED_MODULE_4__/* .LANG_EN_US */ .Lg, _constants_locales__WEBPACK_IMPORTED_MODULE_4__/* .LANG_EN_GB */ .AY].includes(lang);\n}\n\n/**\n * Checks if the given language is US English.\n *\n * @param {String} lang The language code.\n * @returns {Boolean}\n */\nfunction isUSEnglish(lang) {\n  return lang === _constants_locales__WEBPACK_IMPORTED_MODULE_4__/* .LANG_EN_US */ .Lg;\n}\n\n/**\n * Checks if Apply is offered in the given language.\n *\n * @param {String} lang The language code.\n * @returns {Boolean}\n */\nfunction hasApply(lang) {\n  return [_constants_locales__WEBPACK_IMPORTED_MODULE_4__/* .LANG_EN_US */ .Lg, _constants_locales__WEBPACK_IMPORTED_MODULE_4__/* .LANG_FR_FR */ .BL, _constants_locales__WEBPACK_IMPORTED_MODULE_4__/* .LANG_EN_GB */ .AY].includes(lang);\n}\n\n/**\n * Checks if the given language has the Curiosity blog enabled.\n *\n * @param {String} lang The language code.\n * @returns {Boolean}\n */\nfunction hasCuriosityBlog(lang) {\n  return [_constants_locales__WEBPACK_IMPORTED_MODULE_4__/* .LANG_DE_DE */ ._H, _constants_locales__WEBPACK_IMPORTED_MODULE_4__/* .LANG_EN_GB */ .AY, _constants_locales__WEBPACK_IMPORTED_MODULE_4__/* .LANG_EN_US */ .Lg, _constants_locales__WEBPACK_IMPORTED_MODULE_4__/* .LANG_ES_LA */ .tG, _constants_locales__WEBPACK_IMPORTED_MODULE_4__/* .LANG_FR_FR */ .BL, _constants_locales__WEBPACK_IMPORTED_MODULE_4__/* .LANG_JA_JP */ .DC, _constants_locales__WEBPACK_IMPORTED_MODULE_4__/* .LANG_NL_NL */ .ST, _constants_locales__WEBPACK_IMPORTED_MODULE_4__/* .LANG_PT_BR */ .Ed].includes(lang);\n}\n\n/**\n * Checks if CX is offered in the given language.\n *\n * @param {String} lang The language code.\n * @returns {Boolean}\n */\nfunction hasCX(lang) {\n  return isEnglish(lang);\n}\n\n/**\n * Checks if Engage is offered in the given language.\n *\n * @param {String} lang The language code.\n * @returns {Boolean}\n */\nfunction hasEngage(lang) {\n  return isEnglish(lang);\n}\n\n/**\n * Checks if TechValidate is offered in the given language.\n *\n * @param {String} lang The language code.\n * @returns {Boolean}\n */\nfunction hasTechValidate(lang) {\n  return isEnglish(lang);\n}\n\n/**\n * Checks if Wufoo is offered in the given language.\n *\n * @param {String} lang The language code.\n * @returns {Boolean}\n */\nfunction hasWufoo(lang) {\n  return [_constants_locales__WEBPACK_IMPORTED_MODULE_4__/* .LANG_EN_US */ .Lg, _constants_locales__WEBPACK_IMPORTED_MODULE_4__/* .LANG_ES_LA */ .tG, _constants_locales__WEBPACK_IMPORTED_MODULE_4__/* .LANG_EN_GB */ .AY].includes(lang);\n}\n\n/**\n * Generate the Wufoo URL for intl.\n *\n * @param {String} lang        The language to get the URL for.\n * @param {String} queryParams Query params to append to the URL.\n *\n * @returns {String}\n */\nfunction wufooUrl(_ref) {\n  let {\n    lang,\n    queryParams = _constants__WEBPACK_IMPORTED_MODULE_5__/* .EMPTY_STRING */ .v\n  } = _ref;\n  const base = 'https://www.wufoo';\n  let url = _constants__WEBPACK_IMPORTED_MODULE_5__/* .EMPTY_STRING */ .v;\n  switch (lang) {\n    case _constants_locales__WEBPACK_IMPORTED_MODULE_4__/* .LANG_EN_GB */ .AY:\n      url = `${base}.co.uk/`;\n      break;\n    case _constants_locales__WEBPACK_IMPORTED_MODULE_4__/* .LANG_ES_LA */ .tG:\n      url = `${base}.mx/`;\n      break;\n    default:\n      url = `${base}.com/`;\n      break;\n  }\n\n  // If we have query params, append them.\n  url += queryParams.length ? `?${queryParams}` : _constants__WEBPACK_IMPORTED_MODULE_5__/* .EMPTY_STRING */ .v;\n  return url;\n}\n\n/**\n * Converts a given path to a language and product specific path\n * i.e. '/about' -> '/fr/about' (Momentive, fr-FR)\n *\n * @param {String} product The target product. Use constants from PRODUCT_VALUES.\n * @param {String} path The target path under the product's host.\n * @param {String} locale The target locale.\n * @returns {String}\n */\nfunction getLangPath() {\n  let product = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _mds_constants_products__WEBPACK_IMPORTED_MODULE_8__/* .PRODUCT_VALUES */ .pO.sm;\n  let path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '/';\n  let locale = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _constants_locales__WEBPACK_IMPORTED_MODULE_4__/* .LANG_EN_US */ .Lg;\n  if (product === _mds_constants_products__WEBPACK_IMPORTED_MODULE_8__/* .PRODUCT_VALUES */ .pO.sm || !_mds_constants_products__WEBPACK_IMPORTED_MODULE_8__/* .PRODUCT_VALUES */ .pO[product]) {\n    return path;\n  }\n  const SUPPORTED_LOCALES = _constants_languages__WEBPACK_IMPORTED_MODULE_3__/* .PRODUCT_LOCALES */ .bK[product];\n  // Always default to english if the target locale isn't available for the target product.\n  const localePath = SUPPORTED_LOCALES.includes(locale) ? getLocalePath(locale) : getLocalePath(_constants_locales__WEBPACK_IMPORTED_MODULE_4__/* .LANG_EN_US */ .Lg);\n  return `${localePath}${path}`;\n}\n\n/**\n * Returns a language specific url for a specified product, path, and locale\n *\n * @param {String} product The target product. Use constants from PRODUCT_VALUES.\n * @param {String} path The target path under the product's host.\n * @param {String} locale The target locale.\n * @returns {String}\n */\nfunction getLangURL() {\n  let product = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _mds_constants_products__WEBPACK_IMPORTED_MODULE_8__/* .PRODUCT_VALUES */ .pO.sm;\n  let path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '/';\n  let locale = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _constants_locales__WEBPACK_IMPORTED_MODULE_4__/* .LANG_EN_US */ .Lg;\n  if (product === _mds_constants_products__WEBPACK_IMPORTED_MODULE_8__/* .PRODUCT_VALUES */ .pO.sm) {\n    // SM does not have a deterministic pattern to build the host string, so we need to use custom lookup tooling.\n    return `${getSMLangHostBase(locale)}${path}`;\n  }\n  const host = (0,_util_network__WEBPACK_IMPORTED_MODULE_9__/* .getHostname */ .F)(product);\n  const langPath = getLangPath(product, path, locale);\n  return `https://${host}${langPath}`;\n}\n\n/**\n * Returns whether the host is a Whitelabel, normalized host, property and if the locale is valid or not\n *\n * @param {String} path Request path.\n * @param {String} hostname Request hostname.\n * @returns {String}\n */\nfunction getSMProperties(path, hostname) {\n  const property = getProperty(path, hostname);\n  const isWhitelabel = WHITELABEL_PROPERTIES.includes(property) && isWhitelabelHost(hostname);\n  const expectedHost = isWhitelabel ? process.env.APP_RESEARCH_BASE_HOST : process.env.APP_SURVEYMONKEY_BASE_HOST;\n  const normalizedHost = hostname.replace(expectedHost, '');\n  const propertyHosts = Object.prototype.hasOwnProperty.call(PROPERTY_HOSTS, property) ? PROPERTY_HOSTS[property] : [];\n  const isValidSMLocale = property === EMPTY_STRING || propertyHosts.includes(normalizedHost);\n  return {\n    isWhitelabel,\n    normalizedHost,\n    property,\n    propertyHosts,\n    isValidSMLocale\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDE1MzMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3V0aWwvbG9jYWxlLmpzP2ZiZTMiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///41533\n")},43705:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   F: () => (/* binding */ getHostname),\n/* harmony export */   H: () => (/* binding */ getNetwork)\n/* harmony export */ });\n/* harmony import */ var _mds_utils_config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(39894);\n/* harmony import */ var _util_hosts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(73711);\n/* harmony import */ var _mds_constants_products__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(95335);\n\n\n\n\n/**\n * Retrieve the network for the given hostname.\n *\n * @param   {string}  hostname  The current hostname.\n *\n * @return  {string}            The network identifier.\n */\nconst getNetwork = hostname => {\n  if ((0,_util_hosts__WEBPACK_IMPORTED_MODULE_0__/* .isMomentiveHost */ .BX)(hostname)) {\n    return _mds_constants_products__WEBPACK_IMPORTED_MODULE_1__/* .PRODUCT_VALUES */ .pO.mntv;\n  }\n  if ((0,_util_hosts__WEBPACK_IMPORTED_MODULE_0__/* .isGetFeedbackHost */ .YM)(hostname)) {\n    return _mds_constants_products__WEBPACK_IMPORTED_MODULE_1__/* .PRODUCT_VALUES */ .pO.gf;\n  }\n  if ((0,_util_hosts__WEBPACK_IMPORTED_MODULE_0__/* .isSMHelpCenterHost */ .NC)(hostname)) {\n    return _mds_constants_products__WEBPACK_IMPORTED_MODULE_1__/* .PRODUCT_VALUES */ .pO.smHelp;\n  }\n  return _mds_constants_products__WEBPACK_IMPORTED_MODULE_1__/* .PRODUCT_VALUES */ .pO.sm;\n};\n\n/**\n * Retrieve the hostname for the given network.\n *\n * TODO: Update to support more networks as they are added.\n *\n * @param   {string}  network   The network identifier.\n *\n * @return  {string}            The current hostname.\n */\nfunction getHostname(network) {\n  if (network === _mds_constants_products__WEBPACK_IMPORTED_MODULE_1__/* .PRODUCT_VALUES */ .pO.gf) {\n    return (0,_mds_utils_config__WEBPACK_IMPORTED_MODULE_2__/* .getConfig */ .i)('APP_GETFEEDBACK_HOST');\n  }\n  if (network === _mds_constants_products__WEBPACK_IMPORTED_MODULE_1__/* .PRODUCT_VALUES */ .pO.mntv) {\n    return (0,_mds_utils_config__WEBPACK_IMPORTED_MODULE_2__/* .getConfig */ .i)('APP_MOMENTIVE_HOST');\n  }\n  if (network === _mds_constants_products__WEBPACK_IMPORTED_MODULE_1__/* .PRODUCT_VALUES */ .pO.smHelp) {\n    return (0,_mds_utils_config__WEBPACK_IMPORTED_MODULE_2__/* .getConfig */ .i)('APP_HELP_HOST');\n  }\n  return (0,_mds_utils_config__WEBPACK_IMPORTED_MODULE_2__/* .getConfig */ .i)('APP_SURVEYMONKEY_HOST');\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDM3MDUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3V0aWwvbmV0d29yay5qcz8wN2MwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///43705\n")},55126:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   eK: () => (/* binding */ reportError)\n/* harmony export */ });\n/* unused harmony exports getErrorSeverity, sendCustomEvent */\n/* harmony import */ var _opentelemetry_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(68235);\n/* harmony import */ var _constants_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(74375);\n/* harmony import */ var _mds_utils_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(39894);\n\n\n\n\n/**\n * Logs to the console.\n *\n * @param {String}  error         The error to log\n * @param {String}  severity      The severity of the error\n * @param {Boolean} forceConsole  Output the error even if debug is disabled\n *\n * @returns {undefined}\n */\nfunction logToConsole(error, severity, forceConsole) {\n  // Log the error to console if we have debugging on or need to force a console log.\n  if (forceConsole || (0,_mds_utils_config__WEBPACK_IMPORTED_MODULE_0__/* .getConfig */ .i)('SM_SCRIPT_DEBUG')) {\n    const methods = Object.freeze({\n      info: 'info',\n      warning: 'warn'\n    });\n    const method = methods[severity] || 'error';\n    // eslint-disable-next-line no-console\n    console[method](error);\n  }\n}\n\n/**\n * Determine the severity of the error based on its class and a global mapping of overrides.\n *\n * @param {String} defaultSeverity The default severity to assign to the error if there are no overrides.\n * @param {String} errorClass      The name of the error to report.\n *\n * @returns {String} The assigned severity.\n */\nfunction getErrorSeverity(_ref) {\n  let {\n    defaultSeverity = 'error',\n    errorClass = 'Error'\n  } = _ref;\n  let severity = defaultSeverity;\n\n  // Map specific errors to specific severities.\n  if (typeof _constants_errors__WEBPACK_IMPORTED_MODULE_1__/* .errorMappings */ .U[errorClass] !== 'undefined') {\n    severity = _constants_errors__WEBPACK_IMPORTED_MODULE_1__/* .errorMappings */ .U[errorClass];\n  }\n  return severity;\n}\n\n/**\n * Sends the error through the RUM api.\n *\n * @param {String}  error         The error to log\n * @param {String}  severity      The severity of the error\n *\n * @returns {undefined}\n */\nfunction sendRUMError(error, severity) {\n  if ((0,_mds_utils_config__WEBPACK_IMPORTED_MODULE_0__/* .getConfig */ .i)('OTEL_RUM_ENABLED') !== 'true') {\n    return;\n  }\n  // Try to send to splunk, but catch any errors as we don't want to break any functionality\n  // just because there's a issue sending to splunk.\n  let forceConsole = false;\n  const reportSeverity = getErrorSeverity({\n    defaultSeverity: severity,\n    errorClass: typeof error\n  });\n  Promise.resolve(/* import() */).then(__webpack_require__.bind(__webpack_require__, 24093)).then(_ref2 => {\n    let {\n      SplunkRum\n    } = _ref2;\n    if (typeof SplunkRum?.error !== 'undefined') {\n      /**\n       * Safari and IE will not include stack traces for errors that are not \"thrown\".\n       * We can get around that by manually throwing it.\n       */\n      if (error.stack) {\n        SplunkRum.error(error);\n      } else {\n        try {\n          throw error;\n        } catch (err) {\n          SplunkRum.error(err);\n        }\n      }\n    } else {\n      forceConsole = true;\n    }\n    logToConsole(error, reportSeverity, forceConsole);\n  });\n}\n\n/**\n * Sends events through the custom api.\n *\n * @param {String}    eventName         The name of the event\n * @param {Boolean}   isError           Set the event to an error\n * @param {String}    eventDetails      The description/more information about the event\n * @param {String}    error             The error to log\n *\n * @returns {undefined}\n */\nasync function sendCustomEvent(eventName, isError, eventDetails) {\n  let error = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : undefined;\n  const startTime = Date.now();\n  _opentelemetry_api__WEBPACK_IMPORTED_MODULE_2__/* .trace */ .g.getTracer('appModuleLoader').startSpan('cms.event', {\n    startTime\n  }).setAttributes({\n    'workflow.name': eventName,\n    'workflow.message': isError ? undefined : eventDetails,\n    error: isError,\n    'error.message': isError ? eventDetails : undefined,\n    'error.stack': error && isError ? error.stack : undefined\n  }).end(Date.now());\n}\n\n/**\n * Log and/or report the given error.\n *\n * @param {Error}  error    The error to report.\n * @param {String} severity The severity of the error to report, defaults to `error`.\n *\n * @returns {undefined}\n */\nfunction reportError(_ref3) {\n  let {\n    error,\n    severity = 'error'\n  } = _ref3;\n  try {\n    // Try to send to splunk, but catch any errors as we don't want to break any functionality\n    // just because there's a issue sending to splunk.\n    // Only log to SignalFx if it is defined and properly initialized, otherwise force logging via console.\n    if (typeof window !== 'undefined') {\n      // This is a front-end error. Try sending through RUM.\n      sendRUMError(error, severity);\n      // This is an error trace sent as a custom RUM event.\n      sendCustomEvent('Client error.', true, error.message, error);\n    } else {\n      // This is a back-end error. Log error to be visible within APM dashboard.\n      sendCustomEvent('Server error.', true, error.message, error);\n    }\n  } catch (e) {\n    // There was a problem sending to splunk.\n    // eslint-disable-next-line no-console\n    console.error('Could not send handled error \\n', e);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTUxMjYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vdXRpbC9vYnNlcnZhYmlsaXR5LmpzPzA4ZWQiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///55126\n")},17591:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IJ: () => (/* binding */ loadOneTrustAndGoogleTagManager),\n/* harmony export */   UV: () => (/* binding */ useOneTrustLink),\n/* harmony export */   dH: () => (/* binding */ getOneTrustConsent)\n/* harmony export */ });\n/* unused harmony export parseOneTrustCookie */\n/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(31655);\n/* harmony import */ var loadjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(96051);\n/* harmony import */ var loadjs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(loadjs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(27378);\n/* harmony import */ var _util_config__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(39894);\n/* harmony import */ var _util_tracking__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(39527);\n/* harmony import */ var _constants_onetrust__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(98676);\n/* harmony import */ var _util_query_string__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(92381);\n/* harmony import */ var _util_observability__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(55126);\n\n\n\n\n\n\n\n\n\n/**\n * The element ID for the OneTrust link.\n * @type {String}\n */\nconst ONETRUST_ELEMENT_ID = 'ot-element';\n\n/**\n * OneTrust Cookies are explained at:\n *\n * https://my.onetrust.com/s/article/UUID-1e75fb0d-bb79-2af8-cb85-f905d16f1220\n *\n * Please refer to it for details for these cookies.\n *\n * OptanonConsent looks like:\n *   isIABGlobal=false&datestamp=Tue+Feb+25+2020+12:17:39+GMT-0500+(Eastern+Standard+Time)&version=5.12.0&landingPath=NotLandingPage&groups=C0001:1,C0002:1,C0003:1,C0004:0&hosts=H2:1,H9:1,H11:1,H12:1,H7:1&consentId=3ca3da17-dafe-4a3b-af91-7e54b3ceb21d&interactionCount=2&geolocation=;&AwaitingReconsent=false\n *\n * This function parses this cookie and transform groups value to Object for easy access.\n *\n * @param {String} cookie The value of OptanonConsent cookie.\n *\n * @return {Object} The parse result after replacing group with Object.\n *\n */\nfunction parseOneTrustCookie(cookie) {\n  if (!cookie) return {};\n  const result = (0,_util_query_string__WEBPACK_IMPORTED_MODULE_3__/* .parseQueryString */ .d)(cookie);\n  if (result.groups) {\n    const groups = new Map(result.groups.split(',').map(group => {\n      const [key, value] = group.split(':');\n      return [key, parseInt(value, 10)];\n    }));\n    result.groups = Object.fromEntries(groups);\n  }\n  return result;\n}\n\n/**\n * Gets a series of conditions related to OneTrust consent.\n *\n * @return {object}  onetrustState.consentedCategories  The consented categories.\n * @return {boolean} onetrustState.showOneTrustBanner   Whether to show the OneTrust consent banner.\n *\n */\nfunction getOneTrustConsent() {\n  // collecting cookies and config value to determine OneTrust is enabled.\n  const onetrustConsentCookie = js_cookie__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z.get(_constants_onetrust__WEBPACK_IMPORTED_MODULE_4__/* .ONETRUST_CONSENT_COOKIE */ .ho);\n  const onetrustBannerCookieEnabled = !!js_cookie__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z.get(_constants_onetrust__WEBPACK_IMPORTED_MODULE_4__/* .ONETRUST_BANNER_ENABLED_COOKIE */ .QT) && js_cookie__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z.get(_constants_onetrust__WEBPACK_IMPORTED_MODULE_4__/* .ONETRUST_BANNER_ENABLED_COOKIE */ .QT) === '1';\n  const onetrustBannerEnabled = !!(0,_util_config__WEBPACK_IMPORTED_MODULE_5__/* .getConfig */ .i)(_constants_onetrust__WEBPACK_IMPORTED_MODULE_4__/* .ONETRUST_BANNER_ENABLED */ .sy) && (0,_util_config__WEBPACK_IMPORTED_MODULE_5__/* .getConfig */ .i)(_constants_onetrust__WEBPACK_IMPORTED_MODULE_4__/* .ONETRUST_BANNER_ENABLED */ .sy).toLowerCase() === 'true';\n  /**\n   * OneTrust Banner should be shown if one of the following is true.\n   * - OneTrust Consent Cookie is set.\n   * - OneTrust banner enabled cookie is set to 1.\n   * - OneTrust banner enabled is set to true in config.\n   */\n  const showOneTrustBanner = !!onetrustConsentCookie || onetrustBannerCookieEnabled || onetrustBannerEnabled;\n\n  /**\n   * Consented Categories should be found as \"groups\" in OneTrust consent cookie value.\n   */\n  const consentedCategories = parseOneTrustCookie(onetrustConsentCookie).groups || {};\n  return {\n    consentedCategories,\n    showOneTrustBanner\n  };\n}\n\n/**\n * Dynamically retrieve link details for the OneTrust cookie preferences link.\n *\n * OneTrust is not fully compatible with SPA rendering, and under normal circumstances the link it injects into the DOM gets wiped\n * out the first time its parent React component re-renders. OneTrust does not attempt to re-insert the link if the original is removed.\n *\n * To get around this, we instruct OneTrust to inject the \"link\" into a hidden element outside of the React root\n * so that it is safe from React mutations. Since OneTrust can take a variable amount of time to load client-side,\n * we need a MutationObserver to efficiently monitor the element and only return link details once\n * the textContent of the OneTrust element has a value.\n *\n * @returns {Object} The link configuration.\n */\nfunction useOneTrustLink() {\n  const otElement = typeof document === 'undefined' ? undefined : document.getElementById(ONETRUST_ELEMENT_ID);\n  const [otLoaded, setOTLoaded] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(!!otElement?.textContent);\n  (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(() => {\n    // If we already have textContent or otElement is invalid, bail now.\n    if (!otElement || otElement.textContent) {\n      return;\n    }\n\n    /**\n     * Our Mutation Observer is simple.\n     * As soon as the target element has textContent, update state, and disconnect the observer.\n     */\n    function observeOneTrust(mutations, observer) {\n      for (const mutation of mutations) {\n        if (mutation.target.textContent) {\n          setOTLoaded(true);\n          observer.disconnect();\n          return;\n        }\n      }\n    }\n    const otObserver = new MutationObserver(observeOneTrust);\n\n    // Start observing the target node for configured mutations\n    otObserver.observe(otElement, {\n      childList: true\n    });\n\n    // Stop observing if we unmount.\n    return () => otObserver.disconnect();\n  }, [otElement]);\n  return otLoaded ? {\n    to: '#!',\n    text: otElement.textContent,\n    // The onClick handler needs to use a \"fresh\" element instance each time.\n    onClick: () => {\n      document.getElementById(ONETRUST_ELEMENT_ID).click();\n    }\n  } : {};\n}\n\n/**\n * Loads OneTrust cookie banner onto the page.\n *\n * @param {object}  gtmLoaded      A react ref that tracks whether GTM has been loaded.\n * @param {boolean} isLegalCenter  Whether the current page is part of the Legal Center.\n * @param {object}  oneTrustLoaded A react ref that tracks whether OneTrust has been loaded.\n *\n * @return {undefined}\n */\nfunction loadOneTrustAndGoogleTagManager(_ref) {\n  let {\n    gtmLoaded,\n    isLegalCenter,\n    oneTrustLoaded\n  } = _ref;\n  if (isLegalCenter && !gtmLoaded.current) {\n    (0,_util_tracking__WEBPACK_IMPORTED_MODULE_6__/* .loadGoogleTagManager */ .dl)();\n    gtmLoaded.current = true;\n    return;\n  }\n  if (!loadjs__WEBPACK_IMPORTED_MODULE_1___default().isDefined('onetrust')) {\n    loadjs__WEBPACK_IMPORTED_MODULE_1___default()((0,_util_config__WEBPACK_IMPORTED_MODULE_5__/* .getConfig */ .i)('ONETRUST_URL'), 'onetrust', {\n      error: () => {\n        const error = new Error('Error loading OneTrust SDK');\n        (0,_util_observability__WEBPACK_IMPORTED_MODULE_7__/* .reportError */ .eK)({\n          error\n        });\n      },\n      before: (path, script) => {\n        script.async = true;\n        script.setAttribute('data-document-language', 'true');\n        script.setAttribute('charset', 'UTF-8');\n        script.setAttribute('data-domain-script', (0,_util_config__WEBPACK_IMPORTED_MODULE_5__/* .getConfig */ .i)('ONETRUST_KEY'));\n      },\n      // As GTM tag firing depends on OneTrust data layer variables, defer loading it until OneTrust has loaded.\n      success: () => {\n        oneTrustLoaded.current = true;\n        if (!gtmLoaded.current) {\n          (0,_util_tracking__WEBPACK_IMPORTED_MODULE_6__/* .loadGoogleTagManager */ .dl)();\n          gtmLoaded.current = true;\n        }\n      }\n    });\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTc1OTEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi91dGlsL29uZXRydXN0LmpzP2ZiY2UiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///17591\n")},50946:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   J: () => (/* binding */ getPosts),\n/* harmony export */   x: () => (/* binding */ getPost)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(64649);\n/* harmony import */ var _util_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(36274);\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n\n\n/**\n * Dispatch an request to get data for the given post.\n *\n * @param {String} endpoint      The endpoint base to fetch against.\n * @param {String} hostname      The hostname to make the request to.\n * @param {String} parent        The slug of the post's parent, if necessary.\n * @param {String} previewKey    A key used to verify a request for a preview.\n * @param {Object} requestConfig Optional axios request config to pass.\n * @param {String} slug          The slug of the post to fetch.\n *\n * @return {Object} An object containing response data.\n */\nconst getPost = async _ref => {\n  let {\n    dispatch,\n    endpoint,\n    hostname,\n    locale,\n    parent = '',\n    previewKey = '',\n    queryParams,\n    requestConfig,\n    slug = ''\n  } = _ref;\n  const args = _objectSpread(_objectSpread({}, previewKey.length > 0 ? {\n    preview: previewKey\n  } : {}), queryParams);\n  const parentSlug = parent.length ? `${parent}/` : '';\n  const path = `${endpoint}/${parentSlug}${slug}`;\n\n  // Fetch the data for the given post, then extarct and return only the pieces we need.\n  const {\n    data = {},\n    headers = {},\n    status = 200\n  } = await (0,_util_api__WEBPACK_IMPORTED_MODULE_1__/* .apiFetch */ .SC)({\n    args,\n    dispatch,\n    hostname,\n    locale,\n    path,\n    requestConfig\n  });\n  return {\n    data,\n    headers,\n    status\n  };\n};\n\n/**\n * Retrieves posts from the given endpoint.\n *\n * @param {Object} args          Query args object to append to the request URL.\n * @param {String} endpoint      The endpoint base to fetch against.\n * @param {String} hostname      The hostname to make the request to.\n * @param {Object} requestConfig Optional axios request config to pass.\n *\n * @return {Object} An object containing response data.\n */\nconst getPosts = async _ref2 => {\n  let {\n    args = {},\n    endpoint = '',\n    hostname,\n    locale,\n    requestConfig\n  } = _ref2;\n  const {\n    data: posts = [],\n    headers = {},\n    status = 200\n  } = await (0,_util_api__WEBPACK_IMPORTED_MODULE_1__/* .apiFetch */ .SC)({\n    args,\n    hostname,\n    locale,\n    path: endpoint,\n    requestConfig\n  });\n  const {\n    page = 1\n  } = args;\n  const totalPages = parseInt(headers['x-wp-totalpages'] || 1, 10);\n  const currentPage = parseInt(page, 10);\n  return {\n    data: {\n      currentPage,\n      posts,\n      totalPages\n    },\n    headers,\n    status\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTA5NDYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vdXRpbC9wb3N0cy5qcz9mMmEzIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///50946\n")},29311:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   $s: () => (/* binding */ getProperty),\n/* harmony export */   K0: () => (/* binding */ getPropertyStylesheet),\n/* harmony export */   N_: () => (/* binding */ getPropertyHome),\n/* harmony export */   Pf: () => (/* binding */ getResourceEndpoint),\n/* harmony export */   Yt: () => (/* binding */ propertySupportsSlimnav),\n/* harmony export */   dH: () => (/* binding */ getPropertyEndpoint),\n/* harmony export */   rJ: () => (/* binding */ propertySupportsSubnav)\n/* harmony export */ });\n/* harmony import */ var _constants_properties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(78961);\n/* harmony import */ var _mds_constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(74689);\n/* harmony import */ var _util_hosts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(73711);\n\n\n\n\n/**\n * Perform general pattern matching against a path to determine the property.\n *\n * @param {String} path            The current path.\n * @param {String} propertyPattern The regex pattern to match the path against.\n * @param {Object} paths           Object of property paths to lookup with.\n * @param {String} defaultProperty The default property to return if one can't otherwise be found.\n * @returns\n */\nfunction matchProperty(path, propertyPattern) {\n  let paths = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let defaultProperty = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : _mds_constants__WEBPACK_IMPORTED_MODULE_0__/* .EMPTY_STRING */ .v6;\n  const {\n    groups: {\n      propertyPath = _mds_constants__WEBPACK_IMPORTED_MODULE_0__/* .EMPTY_STRING */ .v6\n    } = {}\n  } = propertyPattern?.exec(path) || {};\n  // Trim any trailing slash from the propertyPath.\n  const safePropertyPath = propertyPath.replace(/\\/$/, _mds_constants__WEBPACK_IMPORTED_MODULE_0__/* .EMPTY_STRING */ .v6);\n  const property = Object.keys(paths).find(key => paths[key] === safePropertyPath) || defaultProperty;\n  return property;\n}\n\n/**\n * Obtain the property for a given path on GetFeedback.\n *\n * @param {String} path The current page path.\n * @returns {String}\n */\nfunction getGetFeedbackProperty(path) {\n  /**\n  * Split the given path into two named groups:\n  * From `/en/lp/customer-experience/` this will generate:\n  *   - langpath = `/en`\n  *   - propertyPath = `/lp/`\n  */\n  const propertyPattern = /^(?<langPath>\\/[^/]+)(?<propertyPath>\\/(lp)\\/)(?:.*)$/i;\n  return matchProperty(path, propertyPattern, _constants_properties__WEBPACK_IMPORTED_MODULE_1__/* .GETFEEDBACK_PATHS */ .aQ, _constants_properties__WEBPACK_IMPORTED_MODULE_1__/* .GETFEEDBACK_PROPERTIES */ .ci.getfeedback);\n}\n\n/**\n * Obtain the property for a given path on HelpCenter.\n *\n * @param {String} path The current page path.\n * @returns {String}\n */\nfunction getHelpCenterProperty(path) {\n  /**\n  * Split the given path into two named groups:\n  * From `/en/surveymonkey` this will generate:\n  *   - langpath = `/en`\n  *   - propertyPath = `/surveymonkey/`\n  */\n  const propertyPattern = /^(?<langPath>\\/[^/]+)(?<propertyPath>\\/(getfeedback|robots.txt|apply|surveymonkey|techvalidate|wufoo))(?:.*)$/i;\n  return matchProperty(path, propertyPattern, _constants_properties__WEBPACK_IMPORTED_MODULE_1__/* .HELP_PATHS */ .Bj, _constants_properties__WEBPACK_IMPORTED_MODULE_1__/* .HELP_PROPERTIES */ .Nk.helpsurveymonkey);\n}\n\n/**\n * Obtain the property for a given path on Momentive.\n *\n * @param {String} path The current page path.\n * @returns {String}\n */\nfunction getMomentiveProperty(path) {\n  /**\n  * Split the given path into two named groups:\n  * From `/en/solutions/enterprise-feedback-management/` this will generate:\n  *   - langpath = `/en`\n  *   - propertyPath = `/solutions/`\n  */\n  const propertyPattern = /^(?<langPath>\\/[^/]+)(?<propertyPath>\\/(blog\\/category|blog\\/collection|blog\\/topic|blog|careers|industries|legal|newsroom|resources|robots.txt|solutions|welcome)\\/)(?:.*)$/i;\n  return matchProperty(path, propertyPattern, _constants_properties__WEBPACK_IMPORTED_MODULE_1__/* .MOMENTIVE_PATHS */ .Nu, _constants_properties__WEBPACK_IMPORTED_MODULE_1__/* .MOMENTIVE_PROPERTIES */ .Rr.mmpages);\n}\n\n/**\n * Obtain the property for a given path/domain pair on SurveyMonkey/Research.net.\n *\n * @param {String} path   The current path.\n * @param {String} domain The current domain.\n * @returns {String}\n */\nfunction getSurveyMonkeyProperty(path, domain) {\n  // One-off to support homepages for Research.net and SurveyMonkey.\n  if (path === _constants_properties__WEBPACK_IMPORTED_MODULE_1__/* .SURVEYMONKEY_PATHS */ .hX.homepage) {\n    return (0,_util_hosts__WEBPACK_IMPORTED_MODULE_2__/* .isWhitelabelHost */ .tn)(domain) ? _constants_properties__WEBPACK_IMPORTED_MODULE_1__/* .SURVEYMONKEY_PROPERTIES */ .yG.whitelabel : _constants_properties__WEBPACK_IMPORTED_MODULE_1__/* .SURVEYMONKEY_PROPERTIES */ .yG.homepage;\n  }\n\n  /**\n  * Split the given path into named group:\n  * From `/blog` this will generate:\n  *   - propertyPath = `/blog`\n  */\n  const propertyPattern = /(?<propertyPath>^\\/(about|blog|careers|curiosity\\/mediahub|curiosity|customers|cx|engage|feed|industries|market-research|mp\\/legal|mp|newsroom|resources|robots.txt|roles|techvalidate|templates|toolkit|use-cases|welcome))/i;\n  const property = matchProperty(path, propertyPattern, _constants_properties__WEBPACK_IMPORTED_MODULE_1__/* .SURVEYMONKEY_PATHS */ .hX, _mds_constants__WEBPACK_IMPORTED_MODULE_0__/* .EMPTY_STRING */ .v6);\n  return property === _constants_properties__WEBPACK_IMPORTED_MODULE_1__/* .SURVEYMONKEY_PROPERTIES */ .yG.whitelabel ? _mds_constants__WEBPACK_IMPORTED_MODULE_0__/* .EMPTY_STRING */ .v6 : property;\n}\n\n/**\n * Obtain the property for the given location by matching a Regex of known property roots.\n *\n * @param {String} urlPath A path and possible query string to identify.\n * @param {String} domain  The domain the URL is on.\n *\n * @returns {String}\n */\nfunction getProperty(urlPath) {\n  let domain = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _mds_constants__WEBPACK_IMPORTED_MODULE_0__/* .EMPTY_STRING */ .v6;\n  // Detect and strip off any query strings on the given URL.\n  const path = urlPath?.split('?')[0] || _mds_constants__WEBPACK_IMPORTED_MODULE_0__/* .EMPTY_STRING */ .v6;\n  if ((0,_util_hosts__WEBPACK_IMPORTED_MODULE_2__/* .isMomentiveHost */ .BX)(domain)) {\n    return getMomentiveProperty(path);\n  }\n  if ((0,_util_hosts__WEBPACK_IMPORTED_MODULE_2__/* .isGetFeedbackHost */ .YM)(domain)) {\n    return getGetFeedbackProperty(path);\n  }\n  if ((0,_util_hosts__WEBPACK_IMPORTED_MODULE_2__/* .isSMHelpCenterHost */ .NC)(domain)) {\n    return getHelpCenterProperty(path);\n  }\n  return getSurveyMonkeyProperty(path, domain);\n}\n\n/**\n * Maps properties to their appropriate API endpoint.\n *\n * @param {String} property Current property.\n *\n * @returns {String}\n */\nfunction getPropertyEndpoint(property) {\n  return Object.prototype.hasOwnProperty.call(_constants_properties__WEBPACK_IMPORTED_MODULE_1__/* .PROPERTY_ENDPOINTS */ .xP, property) ? _constants_properties__WEBPACK_IMPORTED_MODULE_1__/* .PROPERTY_ENDPOINTS */ .xP[property] : property;\n}\n\n/**\n * Get the homepage link for the given property.\n *\n * @param {String} property The property to get a link for.\n *\n * @returns {String} The path to the given property's homepage.\n */\nfunction getPropertyHome(property) {\n  const path = _constants_properties__WEBPACK_IMPORTED_MODULE_1__/* .PATHS */ .yy[property] || '';\n  return `${path}/`;\n}\n\n/**\n * Lookup stylesheet for a given url.\n *\n * @param {String} property Current property.\n *\n * @returns {String}\n */\nfunction getPropertyStylesheet(property) {\n  return Object.prototype.hasOwnProperty.call(_constants_properties__WEBPACK_IMPORTED_MODULE_1__/* .APP_STYLESHEETS */ .$p, property) ? _constants_properties__WEBPACK_IMPORTED_MODULE_1__/* .APP_STYLESHEETS */ .$p[property] : '';\n}\n\n/**\n * Obtains the type of Resource content for a given location by matching against known sub-type URL bases.\n * This assumes the base URL has already been linked to the Resource property.\n *\n * @param {String} path A resources path to identify.\n *\n * @returns {String}\n */\nfunction getResourceEndpoint(path) {\n  let type = _constants_properties__WEBPACK_IMPORTED_MODULE_1__/* .PROPERTY_ENDPOINTS */ .xP.resource;\n  if (path.indexOf(`${_constants_properties__WEBPACK_IMPORTED_MODULE_1__/* .SURVEYMONKEY_PATHS */ .hX.resources}/lp/`) === 0) {\n    type = _constants_properties__WEBPACK_IMPORTED_MODULE_1__/* .PROPERTY_ENDPOINTS */ .xP.resourcelp;\n  } else if (path.indexOf(`${_constants_properties__WEBPACK_IMPORTED_MODULE_1__/* .SURVEYMONKEY_PATHS */ .hX.resources}/premium/`) === 0) {\n    type = _constants_properties__WEBPACK_IMPORTED_MODULE_1__/* .PROPERTY_ENDPOINTS */ .xP.premiumresource;\n  }\n  return type;\n}\n\n/**\n * Determines if the given property has slim nav.\n *\n * @param {String} property The property to check.\n *\n * @returns {Boolean}\n */\nfunction propertySupportsSlimnav(property) {\n  return _constants_properties__WEBPACK_IMPORTED_MODULE_1__/* .SLIMNAV_PROPERTIES */ .Kt.includes(property);\n}\n\n/**\n * Determines if the given property supports a subnav.\n *\n * @param {String} property The property to check.\n *\n * @returns {Boolean}\n */\nfunction propertySupportsSubnav(property) {\n  return _constants_properties__WEBPACK_IMPORTED_MODULE_1__/* .SUBNAV_PROPERTIES */ .NC.includes(property);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjkzMTEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vdXRpbC9wcm9wZXJ0aWVzLmpzPzJjNTYiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///29311\n")},92381:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   d: () => (/* binding */ parseQueryString)\n/* harmony export */ });\n/**\n * Parses the given querystring and returns the queryparams\n * Returns empty object if any params is malformed and querystring throws an error\n *\n * @param {String} searchString URL search string that needs to be parsed\n *\n * @returns {Object}\n */\nconst parseQueryString = searchString => {\n  const search = searchString.replace('?', '');\n  let result = {};\n  try {\n    const params = new URLSearchParams(search);\n    result = Object.fromEntries(params);\n  } catch (error) {\n    // Ignore any error thrown by queryString and return empty object\n  }\n  return result;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTIzODEuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi91dGlsL3F1ZXJ5LXN0cmluZy5qcz8yMmI4Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///92381\n")},822:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Aj: () => (/* binding */ getDomainValidationTags),\n/* harmony export */   DM: () => (/* binding */ getCanonicalHostname),\n/* harmony export */   cV: () => (/* binding */ getHreflangsFromLocaleLinks),\n/* harmony export */   t0: () => (/* binding */ getHreflangsFromHosts)\n/* harmony export */ });\n/* harmony import */ var _util_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(39894);\n/* harmony import */ var _constants_properties__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(78961);\n/* harmony import */ var _constants_seo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(97877);\n/* harmony import */ var _util_hosts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(73711);\n\n\n\n\n\n/**\n * Parse the request hostname and determine the canonical hostname we should use.\n *\n * @param {string} hostname Request hostname.\n *\n * @returns {string} The canonical hostname.\n */\nconst getCanonicalHostname = hostname => {\n  // GetFeedback, all Help Centers, and Momentive have no alternate domains, so assume we already have the canonical.\n  if ((0,_util_hosts__WEBPACK_IMPORTED_MODULE_0__/* .isGetFeedbackHost */ .YM)(hostname) || (0,_util_hosts__WEBPACK_IMPORTED_MODULE_0__/* .isSMHelpCenterHost */ .NC)(hostname) || (0,_util_hosts__WEBPACK_IMPORTED_MODULE_0__/* .isMomentiveHost */ .BX)(hostname)) {\n    return hostname;\n  }\n  const base = (0,_util_config__WEBPACK_IMPORTED_MODULE_1__/* .getConfig */ .i)('APP_SURVEYMONKEY_BASE_HOST');\n  const host = hostname.replace(base, '');\n  const canonical = Object.prototype.hasOwnProperty.call(_constants_seo__WEBPACK_IMPORTED_MODULE_2__/* .SEO_HOSTS */ .xr, host) ? _constants_seo__WEBPACK_IMPORTED_MODULE_2__/* .SEO_HOSTS */ .xr[host].canonical : _constants_seo__WEBPACK_IMPORTED_MODULE_2__/* .SM_DEFAULT_CANONICAL_HOST */ .ml;\n  return canonical.replace('..', `.${base}.`);\n};\n\n/**\n * Normalize hreflangs object by turning it into an array, injecting x-default (when applicable) and removing duplicate entries.\n *\n * @param {object} hreflangs Hreflangs object.\n *\n * @returns {Array} Normalized array of hreflangs.\n */\nconst normalizeHreflangs = hreflangs => {\n  // Inject x-default when en-US is in the dataset AND there is more than one hreflang.\n  if (Object.keys(hreflangs).length > 1 && Object.prototype.hasOwnProperty.call(hreflangs, 'en-US')) {\n    hreflangs['x-default'] = {\n      href: hreflangs['en-US'].href,\n      hreflang: 'x-default'\n    };\n  }\n\n  // Strip out unnecessary keys and duplicate entries.\n  const data = Object.values(hreflangs);\n\n  // Ignore cases when the page links to itself and no other pages.\n  return data.length > 1 ? data : [];\n};\n\n/**\n * Generate hreflangs based on the supported host names.\n * This is a temporary band-aid until we have proper SEO support for \"hub\" pages (/curiosity/, etc).\n *\n * @param {Array}  hosts All supported host names.\n * @param {string} path  Relative path.\n *\n * @returns {Array} Array of hreflangs.\n */\nconst getHreflangsFromHosts = (hosts, path) => {\n  const hreflangs = {};\n  hosts.forEach(hostname => {\n    const canonical = _constants_seo__WEBPACK_IMPORTED_MODULE_2__/* .SEO_HOSTS */ .xr[hostname].canonical;\n    const code = _constants_seo__WEBPACK_IMPORTED_MODULE_2__/* .SEO_HOSTS */ .xr[hostname].hreflangCode;\n    hreflangs[code] = {\n      href: `https://${getCanonicalHostname(canonical)}${path}`,\n      hreflang: code\n    };\n  });\n  return normalizeHreflangs(hreflangs);\n};\n\n/**\n * Generate hreflangs based on the provided localeLinks object.\n * This can be used for any individual posts.\n *\n * @param {object} localeLinks The locale links object.\n *\n * @returns {Array} Array of hreflangs.\n */\nconst getHreflangsFromLocaleLinks = localeLinks => {\n  const hreflangs = {};\n  const seoHosts = Object.values(_constants_seo__WEBPACK_IMPORTED_MODULE_2__/* .SEO_HOSTS */ .xr);\n  Object.keys(localeLinks).forEach(langCode => {\n    const canonical = seoHosts.filter(host => host.langCode === langCode);\n    canonical.length && (hreflangs[langCode] = {\n      href: localeLinks[langCode].permalink,\n      hreflang: canonical[0].hreflangCode\n    });\n  });\n  return normalizeHreflangs(hreflangs);\n};\n\n/**\n * Get the domain validation meta tags for the given property and locale pair.\n *\n * @param {string} property The property to get tags for.\n * @param {string} locale   The locale to get tags for.\n *\n * @return {array} The array of domain validation tags.\n */\nconst getDomainValidationTags = (property, locale) => {\n  const domainValidation = [];\n\n  // Inject domain validation tags on the SM homepage.\n  if (property === _constants_properties__WEBPACK_IMPORTED_MODULE_3__/* .SURVEYMONKEY_PROPERTIES */ .yG.homepage) {\n    domainValidation.push(..._constants_seo__WEBPACK_IMPORTED_MODULE_2__/* .SM_DOMAIN_VALIDATION_TAGS */ .d1.all);\n    if (Object.prototype.hasOwnProperty.call(_constants_seo__WEBPACK_IMPORTED_MODULE_2__/* .SM_DOMAIN_VALIDATION_TAGS */ .d1, locale)) {\n      domainValidation.push(..._constants_seo__WEBPACK_IMPORTED_MODULE_2__/* .SM_DOMAIN_VALIDATION_TAGS */ .d1[locale]);\n    }\n  }\n\n  // Inject domain validation tags on GFP pages.\n  if (property === _constants_properties__WEBPACK_IMPORTED_MODULE_3__/* .GETFEEDBACK_PROPERTIES */ .ci.getfeedback) {\n    domainValidation.push(..._constants_seo__WEBPACK_IMPORTED_MODULE_2__/* .GFP_DOMAIN_VALIDATION_TAGS */ .oM.all);\n  }\n  return domainValidation;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODIyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi91dGlsL3Nlby5qcz80ZjczIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///822\n")},566:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BM: () => (/* binding */ getTaxonomyFromPath),\n/* harmony export */   Mj: () => (/* binding */ getTermWithPosts)\n/* harmony export */ });\n/* unused harmony exports getTerm, getTermPostsPath */\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(64649);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(14206);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _util_api__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(36274);\n/* harmony import */ var _mds_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(74689);\n/* harmony import */ var _util_posts__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(50946);\n/* harmony import */ var _constants_taxonomies__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(58224);\n/* harmony import */ var _hosts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(73711);\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n\n\n\n\n\n\n\n// Keep our cancel reference global since it needs to be preserved across actions.\nlet cancelPosts = () => undefined;\nlet cancelData = () => undefined;\n\n/**\n * Obtain the taxonomy for a given taxonomy path on Momentive.\n *\n * @param {string} path The current page path.\n *\n * @returns {string}\n */\nconst getMomentiveTaxonomy = path => {\n  /**\n   * Split the given path into two parts, effectively removing the language prefix.\n   * From `/en/careers/dept/engineering/` this will generate:\n   *   - langpath = `/en`\n   *   - taxonomyPath = `/careers/dept/engineering/`\n   */\n  const pathPattern = /^(?<langPath>\\/[^/]+)(?<taxonomyPath>(?:.*))$/i;\n  const {\n    groups: {\n      taxonomyPath = '/'\n    } = {}\n  } = pathPattern.exec(path) || {};\n\n  // Loop through MNTV taxonomy paths to find one that matches.\n  const taxonomyKey = Object.keys(_constants_taxonomies__WEBPACK_IMPORTED_MODULE_2__/* .MNTV_TAXONOMY_PATHS */ .b0).find(maybePath => {\n    return taxonomyPath.startsWith(maybePath);\n  }) || '';\n  return _constants_taxonomies__WEBPACK_IMPORTED_MODULE_2__/* .MNTV_TAXONOMY_PATHS */ .b0[taxonomyKey] || '';\n};\n\n/**\n * Obtain the taxonomy for a given taxonomy path on Help Center.\n *\n * @param {string} path The current page path.\n *\n * @returns {string}\n */\nconst getHelpCenterTaxonomy = path => {\n  if (path.includes('/getfeedback/')) {\n    return _constants_taxonomies__WEBPACK_IMPORTED_MODULE_2__/* .TAXONOMY_SLUGS */ .CS.gfpHelp;\n  }\n  if (path.includes('/apply/')) {\n    return _constants_taxonomies__WEBPACK_IMPORTED_MODULE_2__/* .TAXONOMY_SLUGS */ .CS.smApplyHelp;\n  }\n  if (path.includes('/techvalidate/')) {\n    return _constants_taxonomies__WEBPACK_IMPORTED_MODULE_2__/* .TAXONOMY_SLUGS */ .CS.techvalidateHelp;\n  }\n  if (path.includes('/wufoo/')) {\n    return _constants_taxonomies__WEBPACK_IMPORTED_MODULE_2__/* .TAXONOMY_SLUGS */ .CS.wufooHelp;\n  }\n  return _constants_taxonomies__WEBPACK_IMPORTED_MODULE_2__/* .TAXONOMY_SLUGS */ .CS.smHelp;\n};\n\n/**\n * Determines the taxonomy endpoint associated with the given path.\n *\n * @param {string} path   The path to get the taxonomy for.\n * @param {string} domain The current domain.\n *\n * @returns {string} The taxonomy that matches the given path.\n */\nconst getTaxonomyFromPath = (path, domain) => {\n  // Handle Momentive taxonomies.\n  if ((0,_hosts__WEBPACK_IMPORTED_MODULE_3__/* .isMomentiveHost */ .BX)(domain)) {\n    return getMomentiveTaxonomy(path);\n  }\n\n  // SM Help Center only has a single taxonomy.\n  if ((0,_hosts__WEBPACK_IMPORTED_MODULE_3__/* .isSMHelpCenterHost */ .NC)(domain)) {\n    return getHelpCenterTaxonomy(path);\n  }\n\n  // Loop through SM taxonomy paths to find one that matches.\n  const taxonomyKey = Object.keys(_constants_taxonomies__WEBPACK_IMPORTED_MODULE_2__/* .SM_TAXONOMY_PATHS */ .kr).find(maybePath => path.startsWith(maybePath)) || '';\n  return _constants_taxonomies__WEBPACK_IMPORTED_MODULE_2__/* .SM_TAXONOMY_PATHS */ .kr[taxonomyKey] || '';\n};\n\n/**\n * Dispatch an request to get data for the given taxonomy term.\n *\n * @param {object}   props               The function props.\n * @param {Function} props.dispatch      A Redux dispatch function.\n * @param {String}   props.hostname      The hostname to make the request to.\n * @param {Object}   props.requestConfig Any custom axios request config to pass.\n * @param {String}   props.taxonomy      The taxonomy of the term to retrieve.\n * @param {String}   props.term          The term name to retrieve.\n *\n * @return {Object} An object containing response data.\n */\nconst getTerm = async _ref => {\n  let {\n    dispatch,\n    hostname,\n    locale,\n    requestConfig,\n    taxonomy = _mds_constants__WEBPACK_IMPORTED_MODULE_4__/* .EMPTY_STRING */ .v6,\n    term = _mds_constants__WEBPACK_IMPORTED_MODULE_4__/* .EMPTY_STRING */ .v6\n  } = _ref;\n  return (0,_util_api__WEBPACK_IMPORTED_MODULE_5__/* .apiFetch */ .SC)({\n    dispatch,\n    hostname,\n    locale,\n    path: `${taxonomy}/${term}`,\n    requestConfig\n  });\n};\n\n/**\n * Retrieves posts with the given taxonomy term.\n *\n * @param {Object} args     Query args for the request.\n * @param {String} hostname The hostname requests are made against.\n * @param {String} property The property the results are for.\n */\nconst getTermPosts = async _ref2 => {\n  let {\n    args = {},\n    hostname,\n    locale,\n    skipCancel,\n    endpoint = _mds_constants__WEBPACK_IMPORTED_MODULE_4__/* .EMPTY_STRING */ .v6\n  } = _ref2;\n  // Cancel previous term posts request, if there is one.\n  // Then generate a cancellation token for the request so we can cancel it later if necessary.\n  if (!skipCancel) {\n    cancelPosts();\n  }\n  const requestConfig = {\n    cancelToken: new (axios__WEBPACK_IMPORTED_MODULE_1___default().CancelToken)(c => cancelPosts = c)\n  };\n\n  // Unset any query args set to 'all' so the API will exclude it from consideration.\n  if (Object.keys(args).length) {\n    Object.keys(args).forEach(key => {\n      const value = args[key];\n      if (value === 'all') {\n        delete args[key];\n      }\n    });\n  }\n  return (0,_util_posts__WEBPACK_IMPORTED_MODULE_6__/* .getPosts */ .J)({\n    args,\n    endpoint,\n    locale,\n    hostname,\n    requestConfig\n  });\n};\n\n/**\n * Dispatch an request to get data for the given taxonomy term.\n *\n * @param {object}   props               The function props.\n * @param {Function} props.dispatch      A Redux dispatch function.\n * @param {String}   props.hostname      The hostname to make the request to.\n * @param {Object}   props.requestConfig Any custom axios request config to pass.\n * @param {String}   props.taxonomy      The taxonomy of the term to retrieve.\n * @param {String}   props.term          The term name to retrieve.\n *\n * @return {Object} An object containing response data.\n */\nconst getTermDataFromPath = async _ref3 => {\n  let {\n    hostname,\n    locale,\n    postsPerPage,\n    requestConfig,\n    skipCancel,\n    taxonomy,\n    term\n  } = _ref3;\n  const args = {\n    per_page: postsPerPage\n  };\n  const {\n    data: {\n      termData,\n      posts: postsData\n    },\n    headers: termHeaders\n  } = await getTermPosts({\n    args,\n    hostname,\n    locale,\n    requestConfig,\n    skipCancel,\n    endpoint: `${taxonomy}/${term}`\n  });\n  return {\n    termData,\n    termHeaders,\n    postsData\n  };\n};\n\n/**\n * Retrieve the \"search\" endpoint used to get all posts for a given taxonomy.\n *\n * @param {String} taxonomy The taxonomy to get the \"posts\" path for.\n *\n * @return {String} The string path to use.\n */\nconst getTermPostsPath = _ref4 => {\n  let {\n    taxonomy\n  } = _ref4;\n  // The API \"search\" paths for each taxonomy.\n  // @todo: This should be updated to reflect other taxonomies as they migrate to the new terms Redux structure.\n  const postPaths = Object.freeze({\n    career_department: 'careers',\n    career_location: 'careers'\n  });\n  return postPaths[taxonomy] || '';\n};\n\n/**\n * Fetch both data and posts for the given taxonomy term.\n *\n * @param {Function} props.postsPerPage  How many posts to fetch.\n * @param {Object}   props.requestConfig Any custom axios request config to pass.\n * @param {String}   props.hostname      The hostname to make the request to.\n * @param {String}   props.taxonomy      The taxonomy of the term to retrieve.\n * @param {String}   props.term          The term name to retrieve.\n *\n * @return {Object} An object containing response data.\n */\nconst getTermWithPosts = async _ref5 => {\n  let {\n    hostname,\n    locale,\n    postsPerPage = 100,\n    requestConfig,\n    skipCancel = false,\n    taxonomy = _mds_constants__WEBPACK_IMPORTED_MODULE_4__/* .EMPTY_STRING */ .v6,\n    term = _mds_constants__WEBPACK_IMPORTED_MODULE_4__/* .EMPTY_STRING */ .v6\n  } = _ref5;\n  // By default assume no posts.\n  let postsData = [];\n  let postsHeaders = {};\n\n  // Cancel previous term data and posts request, if there are any.\n  // Then generate a cancellation token for the data request so we can cancel it later if necessary.\n  if (!skipCancel) {\n    cancelData();\n    cancelPosts();\n  }\n  const termRequestConfig = _objectSpread(_objectSpread({}, requestConfig), {}, {\n    cancelToken: new (axios__WEBPACK_IMPORTED_MODULE_1___default().CancelToken)(c => cancelData = c)\n  });\n  // category, collection data (including posts) will be retrieved in a single API fetch. Therefore, no need to make 2 seperate network calls\n  const hasTaxonomy = [_constants_taxonomies__WEBPACK_IMPORTED_MODULE_2__/* .TAXONOMY_SLUGS */ .CS.mntvCategory, _constants_taxonomies__WEBPACK_IMPORTED_MODULE_2__/* .TAXONOMY_SLUGS */ .CS.mntvCollection, _constants_taxonomies__WEBPACK_IMPORTED_MODULE_2__/* .TAXONOMY_SLUGS */ .CS.mntvTopic].some(taxonomyName => taxonomy.includes(taxonomyName));\n  if (hasTaxonomy) {\n    return getTermDataFromPath({\n      hostname,\n      locale,\n      postsPerPage,\n      requestConfig,\n      skipCancel,\n      taxonomy,\n      term\n    });\n  }\n  const {\n    data: termData,\n    headers: termHeaders,\n    status\n  } = (await getTerm({\n    hostname,\n    locale,\n    requestConfig: termRequestConfig,\n    taxonomy,\n    term\n  })) || {};\n\n  // Only fetch posts if we got valid term data back and we want posts at all.\n  if (status === 200 && postsPerPage > 0) {\n    const postsRequestConfig = {\n      cancelToken: new (axios__WEBPACK_IMPORTED_MODULE_1___default().CancelToken)(c => cancelPosts = c)\n    };\n    const args = {\n      [taxonomy]: term,\n      per_page: postsPerPage\n    };\n    const response = await getTermPosts({\n      args,\n      hostname,\n      locale,\n      requestConfig: postsRequestConfig,\n      endpoint: getTermPostsPath({\n        taxonomy\n      }),\n      term\n    });\n    postsData = response.data ?? [];\n    postsHeaders = response.headers ?? {};\n  }\n\n  // Return data and headers for both the term and its posts.\n  return {\n    postsData,\n    postsHeaders,\n    termData,\n    termHeaders\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTY2LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vdXRpbC90ZXJtcy5qcz81Nzk0Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///566\n")},39527:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   U$: () => (/* binding */ getDocumentTitle),\n/* harmony export */   _k: () => (/* binding */ trackMarketingPages),\n/* harmony export */   dH: () => (/* binding */ buildTrackingUrl),\n/* harmony export */   dl: () => (/* binding */ loadGoogleTagManager),\n/* harmony export */   lQ: () => (/* binding */ dataLayerPush),\n/* harmony export */   lo: () => (/* binding */ getDeviceSpecificTrackingParam)\n/* harmony export */ });\n/* unused harmony export determineHelpCenterSlug */\n/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(64649);\n/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(31655);\n/* harmony import */ var _util_debug_logging__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(31905);\n/* harmony import */ var _mds_constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(74689);\n/* harmony import */ var _constants_time__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(10835);\n/* harmony import */ var _util_config__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(39894);\n/* harmony import */ var _util_hosts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(73711);\n/* harmony import */ var _util_properties__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(29311);\n/* harmony import */ var _util_query_string__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(92381);\n/* harmony import */ var _constants_properties__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(78961);\n/* harmony import */ var _util_identify_url_locale__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(13785);\n/* harmony import */ var _util_helpers__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(91262);\n/* harmony import */ var _constants_tracking__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(48214);\n/* harmony import */ var _mds_constants_tracking__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(3568);\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0,_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Determine if the current link is eligible to have tracking params auto-generated.\n *\n * @param {Object} params                 Function arguments.\n * @param {String} params.currentHostname The current hostname of the URL.\n * @param {String} params.hostname        The hostname of the destination URL.\n * @param {String} params.href            The original link href being parsed.\n * @param {String} params.pathname        The pathname of the linkdestination.\n *\n * @returns {bool} Whether or not the current link is eligible for tracking.\n */\nfunction isTrackingEligible(_ref) {\n  let {\n    currentHostname,\n    hostname,\n    href,\n    pathname\n  } = _ref;\n  const isInternalGetFeedbackLink = (0,_util_hosts__WEBPACK_IMPORTED_MODULE_2__/* .isGetFeedbackHost */ .YM)(hostname) && (0,_util_hosts__WEBPACK_IMPORTED_MODULE_2__/* .isGetFeedbackHost */ .YM)(currentHostname);\n  const isInternalMomentiveLink = (0,_util_hosts__WEBPACK_IMPORTED_MODULE_2__/* .isMomentiveHost */ .BX)(hostname) && (0,_util_hosts__WEBPACK_IMPORTED_MODULE_2__/* .isMomentiveHost */ .BX)(currentHostname);\n  const isInternalSurveyMonkeyLink = (0,_util_hosts__WEBPACK_IMPORTED_MODULE_2__/* .isSurveyMonkeyHost */ .$5)(hostname) && (0,_util_hosts__WEBPACK_IMPORTED_MODULE_2__/* .isSurveyMonkeyHost */ .$5)(currentHostname);\n  const isInternalSMHelpCenterLink = (0,_util_hosts__WEBPACK_IMPORTED_MODULE_2__/* .isSMHelpCenterHost */ .NC)(hostname) && (0,_util_hosts__WEBPACK_IMPORTED_MODULE_2__/* .isSMHelpCenterHost */ .NC)(currentHostname);\n  const isInternalResearchLink = (0,_util_hosts__WEBPACK_IMPORTED_MODULE_2__/* .isWhitelabelHost */ .tn)(hostname) && (0,_util_hosts__WEBPACK_IMPORTED_MODULE_2__/* .isWhitelabelHost */ .tn)(currentHostname);\n  const isExternalDomain = !isInternalGetFeedbackLink && !isInternalMomentiveLink && !isInternalSurveyMonkeyLink && !isInternalResearchLink && !isInternalSMHelpCenterLink;\n  const isSurveyLink = isInternalSurveyMonkeyLink && (pathname.indexOf('/r/') === 0 || pathname.indexOf('/s/') === 0);\n  const isAnchorLink = href.indexOf('#') === 0;\n  return !(isExternalDomain || isSurveyLink || isAnchorLink);\n}\n\n/**\n * Identify and build tracking params from the current page that should be included in Router state.\n *\n * @param {Object} params               The function params.\n * @param {String} params.ctaText       The text of the link being clicked.\n * @param {String} params.engagestate   The engagestate URL query param.\n * @param {Object} params.existingQuery The existing Router state object.\n * @param {String} params.utSource1     The value of the `ut_source` param.\n * @param {String} params.utSource2     The value of the `ut_source2` param.\n * @param {String} params.utSource3     The value of the `ut_source3` param.\n *\n * @returns {Object} The query params to be tracked in Router state.\n */\nfunction getStateQuery(_ref2) {\n  let {\n    ctaText,\n    engagestate,\n    existingQuery,\n    utSource1,\n    utSource2,\n    utSource3\n  } = _ref2;\n  const existingStateQuery = Object.fromEntries(Object.entries(existingQuery).filter(_ref3 => {\n    let [key] = _ref3;\n    return _constants_tracking__WEBPACK_IMPORTED_MODULE_3__/* .STATEFUL_TRACKING_PARAMS */ .Zw.includes(key);\n  }));\n  return _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, utSource1 !== '' ? {\n    ut_source: utSource1\n  } : {}), utSource2 !== '' ? {\n    ut_source2: utSource2\n  } : {}), utSource3 !== '' ? {\n    ut_source3: utSource3\n  } : {}), ctaText !== '' ? {\n    ut_ctatext: ctaText\n  } : {}), engagestate !== '' ? {\n    ut_engagestate: engagestate\n  } : {}), existingStateQuery);\n}\n\n/**\n * Identify and build tracking params from the current page that should be included in the URL href.\n *\n * @param {Object} params               The function params.\n * @param {Object} params.existingQuery The existing URL query params object.\n * @param {String} params.usecase       The usecase URL query param.\n *\n * @returns {Object} The query params to be tracked in Router state.\n */\nfunction getHrefSearch(_ref4) {\n  let {\n    existingQuery,\n    usecase\n  } = _ref4;\n  const existingHrefQuery = Object.fromEntries(Object.entries(existingQuery).filter(_ref5 => {\n    let [key] = _ref5;\n    return !_constants_tracking__WEBPACK_IMPORTED_MODULE_3__/* .STATEFUL_TRACKING_PARAMS */ .Zw.includes(key);\n  }));\n  return _objectSpread(_objectSpread({}, usecase !== '' ? {\n    usecase\n  } : {}), existingHrefQuery);\n}\n\n/**\n * Returns the correct `ut_source2` value for Help Centers.\n * We want to specify specific `ut_source2` values for GA Tracking based on the slug.\n *\n * @param {String} path The link path (i.e. /blog/ or /creating-surveys/how-to-create...)\n *\n * @returns {string} Returns a string depending on the slug to use for tracking.\n */\nfunction determineHelpCenterSlug(path) {\n  const slug = (0,_util_identify_url_locale__WEBPACK_IMPORTED_MODULE_4__/* .removeUrlLocale */ .v)(path);\n  const segmentCount = slug.split('/').filter(ele => ele !== _mds_constants__WEBPACK_IMPORTED_MODULE_5__/* .EMPTY_STRING */ .v6).length;\n  for (const key of Object.keys(_constants_properties__WEBPACK_IMPORTED_MODULE_6__/* .SMHELP_URL_SLUGS */ .mG)) {\n    // For search pages, it should return 'results'.\n    if (slug.includes(key)) {\n      return _constants_properties__WEBPACK_IMPORTED_MODULE_6__/* .SMHELP_URL_SLUGS */ .mG[key];\n    }\n  }\n\n  // For home page, it should return 'home'.\n  if (slug === _mds_constants__WEBPACK_IMPORTED_MODULE_5__/* .EMPTY_STRING */ .v6) {\n    return _constants_properties__WEBPACK_IMPORTED_MODULE_6__/* .SMHELP_URL_SLUGS */ .mG.home;\n  }\n\n  // For article pages, it should return the original slug (i.e. '/create/quizzes').\n  if (segmentCount >= 2) {\n    return slug;\n  }\n\n  // For category pages, it should return 'category'.\n  if (segmentCount === 1) {\n    return _constants_properties__WEBPACK_IMPORTED_MODULE_6__/* .SMHELP_URL_SLUGS */ .mG.categories;\n  }\n  return slug;\n}\n\n/**\n * Generate the slug used in tracking for `ut_source2` values.\n *\n * @param {Object} params                 The function params.\n * @param {String} params.currentHostname The current hostname of the URL.\n * @param {String} params.currentPath     The current pathname of the URL.\n * @param {String} params.property        The current property of the URL.\n *\n * @returns {String} The slug to use for tracking.\n */\nfunction generateTrackingSlug(_ref6) {\n  let {\n    currentHostname,\n    currentPath,\n    property\n  } = _ref6;\n  const propertyPath = _constants_properties__WEBPACK_IMPORTED_MODULE_6__/* .PATHS */ .yy[property] || '';\n\n  // Generate the `ut_source2` param based on the current page's slug.\n  // On GetFeedback, remove locale from path.\n  let strippedUrl = (0,_util_hosts__WEBPACK_IMPORTED_MODULE_2__/* .isGetFeedbackHost */ .YM)(currentHostname) ? (0,_util_identify_url_locale__WEBPACK_IMPORTED_MODULE_4__/* .removeUrlLocale */ .v)(currentPath) : currentPath;\n  strippedUrl = strippedUrl.replace(`${propertyPath}/`, '');\n  strippedUrl = strippedUrl.substring(0, strippedUrl.lastIndexOf('/'));\n  return (0,_util_hosts__WEBPACK_IMPORTED_MODULE_2__/* .isSMHelpCenterHost */ .NC)(currentHostname) ? determineHelpCenterSlug(strippedUrl) : strippedUrl;\n}\n\n/**\n * Safely build and append tracking params to the given URL.\n *\n * @param {String}        currentHostname The current hostname.\n * @param {String}        currentUrl      The query string from the current URI.\n * @param {String}        href            The link URL, fully qualified or relative.\n * @param {String}        placement       The link placement.\n * @param {Boolean}       returnWithParts Whether to return the constituent parts of the URL in addition to the full URL.\n * @param {String|Object} text            The button or link text if a string, or a Component if an object.\n *\n * @returns {Object|String} The input `url` with tracking params either appended, or an object containing the url and its constituent parts.\n */\nfunction buildTrackingUrl(_ref7) {\n  let {\n    currentHostname = (0,_util_config__WEBPACK_IMPORTED_MODULE_7__/* .getConfig */ .i)('APP_SURVEYMONKEY_HOST'),\n    currentUrl = '',\n    href = '',\n    placement: utSource3 = '',\n    returnWithParts = false,\n    text = ''\n  } = _ref7;\n  let currentUrlObj;\n  let destinationUrlObj;\n\n  // When parsing URLs to objects we need to provide a safe fallback domain in case the URL is just a pathname.\n  // In these cases, assume the URL is relative to the current domain.\n  const webHost = `https://${currentHostname}`;\n\n  // Attempt to parse the destination URL into an object, if it fails we can't safely generat tracking so return immediately.\n  try {\n    destinationUrlObj = new URL(href, webHost);\n  } catch (error) {\n    return returnWithParts ? {\n      fullUrl: href\n    } : href;\n  }\n\n  // Get the engagestate query param from the current URL, whether it is from the location object or the currentUrl prop.\n  try {\n    currentUrlObj = new URL(currentUrl, webHost);\n  } catch (error) {\n    currentUrlObj = {};\n  }\n  const {\n    hash = '',\n    hostname = '',\n    pathname = '',\n    search = ''\n  } = destinationUrlObj;\n\n  // Determine if we even should be generating tracking params for this link.\n  if (!isTrackingEligible({\n    currentHostname,\n    hostname,\n    href,\n    pathname\n  })) {\n    return returnWithParts ? {\n      fullUrl: href\n    } : href;\n  }\n\n  /**\n   * Per note above, if text is not a string, empty it out to avoid things like:\n   * ut_ctatext=%255Bobject%2520Object%255D\n   *\n   * And if it is a string, trim any leftover whitespace.\n   */\n  const ctaText = typeof text !== 'string' ? '' : text.trim();\n  const {\n    pathname: currentPath = '',\n    search: currentQuery = ''\n  } = currentUrlObj;\n  const {\n    engagestate = '',\n    usecase = ''\n  } = (0,_util_query_string__WEBPACK_IMPORTED_MODULE_8__/* .parseQueryString */ .d)(currentQuery);\n  const property = (0,_util_properties__WEBPACK_IMPORTED_MODULE_9__/* .getProperty */ .$s)(currentPath, currentHostname);\n  const utSource1 = _constants_properties__WEBPACK_IMPORTED_MODULE_6__/* .UT_SOURCES */ .Zw[property] || '';\n  const utSource2 = generateTrackingSlug({\n    currentHostname,\n    currentPath,\n    property\n  });\n  const existingQuery = (0,_util_query_string__WEBPACK_IMPORTED_MODULE_8__/* .parseQueryString */ .d)(search);\n  const stateSearch = getStateQuery({\n    ctaText,\n    engagestate,\n    existingQuery,\n    utSource1,\n    utSource2,\n    utSource3\n  });\n  const hrefSearch = getHrefSearch({\n    existingQuery,\n    usecase\n  });\n\n  // Build a combined query string.\n  const trackingQuery = new URLSearchParams((0,_util_helpers__WEBPACK_IMPORTED_MODULE_10__/* .sortObject */ .CV)(_objectSpread(_objectSpread({}, stateSearch), hrefSearch))).toString();\n\n  // Reconstruct the URL with the new query params, and conditionally re-add the ? separator.\n  const base = href.replace(search, '').replace(hash, '');\n  const hasQuery = trackingQuery.length !== 0 ? '?' : '';\n  const finalUrl = `${base}${hasQuery}${trackingQuery}${hash}`;\n  return returnWithParts ? {\n    base,\n    hash,\n    hrefSearch: new URLSearchParams(hrefSearch).toString(),\n    stateSearch,\n    fullUrl: finalUrl\n  } : finalUrl;\n}\n\n/**\n * Returns the document title for GTM.\n *\n * @returns {string}\n */\nfunction getDocumentTitle() {\n  const title = document.getElementsByTagName('title')[0].innerText;\n  return title.replace('| SurveyMonkey', '').trim();\n}\n\n/**\n * Loads Google Tag Manager onto the page.\n *\n * @returns {undefined}\n */\nfunction loadGoogleTagManager() {\n  const {\n    SMConfig: {\n      GOOGLE_GTM_ID = ''\n    } = {}\n  } = window;\n\n  // Bail if we do not have a GTM ID.\n  if (!GOOGLE_GTM_ID.length) {\n    return;\n  }\n\n  /* eslint-disable */\n  (function (w, d, s, l, i) {\n    w[l] = w[l] || [];\n    w[l].push({\n      'gtm.start': new Date().getTime(),\n      event: 'gtm.js'\n    });\n    var f = d.getElementsByTagName(s)[0],\n      j = d.createElement(s),\n      dl = l != 'dataLayer' ? '&l=' + l : '';\n    j.async = true;\n    j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;\n    f.parentNode.insertBefore(j, f);\n  })(window, document, 'script', 'dataLayer', GOOGLE_GTM_ID);\n  /* eslint-enable */\n}\n\n/**\n * Appends /mp/ pages the user has viewed to the attr_mp cookie.\n *\n * @returns {undefined}\n */\nfunction trackMarketingPages() {\n  const {\n    hostname,\n    pathname\n  } = window.location;\n  const domain = (0,_util_hosts__WEBPACK_IMPORTED_MODULE_2__/* .getCookieDomain */ .yT)(hostname);\n  const expires = new Date();\n  const maxLength = 8;\n  const mpPages = {};\n  const pageStamps = {};\n  let cookie = '';\n  let cookieParts = [];\n  let page = '';\n\n  // Bail if this is not a SurveyMonkey MP.\n  if ((0,_util_properties__WEBPACK_IMPORTED_MODULE_9__/* .getProperty */ .$s)(pathname, hostname) !== _constants_properties__WEBPACK_IMPORTED_MODULE_6__/* .SURVEYMONKEY_PROPERTIES */ .yG.marketing) {\n    return;\n  }\n  page = pathname.substring(pathname.search(/\\/mp\\//) + 4, pathname.lastIndexOf('/'));\n  page = page.toLowerCase();\n\n  // fetching the attr_mp cookie and decoding it\n  cookie = js_cookie__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .Z.get(_constants_tracking__WEBPACK_IMPORTED_MODULE_3__/* .TRACK_MP_PAGES_COOKIE */ .J8) || '';\n  cookieParts = cookie.split(',');\n  for (const combinedParts of cookieParts) {\n    const parts = combinedParts.split(':');\n    // 'mpPages' obj has pagenames as the key\n    // 'pageStamps' obj has timestamps as the key\n    if (parts && parts.length > 1) {\n      mpPages[parts[0]] = parts[1];\n      pageStamps[parseInt(parts[1], 10)] = parts[0];\n    }\n  }\n\n  // update timestamp for current page\n  mpPages[page] = Math.floor(Date.now() / 1000);\n\n  // purge the oldest views if we have more pages than maxLength pages\n  if (Object.keys(mpPages).length > maxLength) {\n    const keys = Object.keys(pageStamps).sort();\n    for (let i = 0; i < keys.length - maxLength; i += 1) {\n      delete mpPages[pageStamps[keys[i]]];\n    }\n  }\n\n  // resetting the cookie string with updated timestamp\n  cookie = '';\n  for (const mp in mpPages) {\n    if (mpPages[mp]) {\n      cookie += (cookie.length ? ',' : '') + mp + ':' + mpPages[mp];\n    }\n  }\n\n  // setting the cookie\n  expires.setTime(expires.getTime() + _constants_time__WEBPACK_IMPORTED_MODULE_11__/* .FOUR_MONTHS_IN_MS */ .xA);\n  js_cookie__WEBPACK_IMPORTED_MODULE_1__/* [\"default\"] */ .Z.set(_constants_tracking__WEBPACK_IMPORTED_MODULE_3__/* .TRACK_MP_PAGES_COOKIE */ .J8, encodeURIComponent(cookie), {\n    domain,\n    expires,\n    path: '/',\n    sameSite: 'none',\n    secure: true\n  });\n}\n\n/**\n * Given the deviceSize (to be fetched by a hook and passed in),\n * concatenate it with the location param and return the full tracking value.\n *\n * @deviceSize {Object} The screen resolution at which the user is viewing.\n * @location {string} The location-specific part of the param.\n * @fallback {string} The fallback to use if the screen resolution is undefined or the location is incorrect.\n */\nfunction getDeviceSpecificTrackingParam(deviceSize, location, fallback) {\n  const {\n    isDesktop,\n    isMobile,\n    isTablet\n  } = deviceSize;\n  let breakpoint = _mds_constants__WEBPACK_IMPORTED_MODULE_5__/* .EMPTY_STRING */ .v6;\n  if (isDesktop) {\n    breakpoint = 'desktop';\n  } else if (isMobile) {\n    breakpoint = 'mobile';\n  } else if (isTablet) {\n    breakpoint = 'tablet';\n  }\n  const trackingParamKey = breakpoint.concat(location);\n  if (_mds_constants_tracking__WEBPACK_IMPORTED_MODULE_12__/* .TRACKING_OPTIONS */ .r6.includes(trackingParamKey)) {\n    return _mds_constants_tracking__WEBPACK_IMPORTED_MODULE_12__/* .WITH_TRACKING_VALUES */ .G0[trackingParamKey];\n  }\n  // fallback option if it cannot match trackingParamKey\n  return fallback;\n}\n\n/**\n * Pushes a provided object to the Google Tag Manager data layer.\n *\n * @param {Object} pushObj The key-value pairs to push.\n *\n * @returns {undefined}\n */\nfunction dataLayerPush() {\n  let pushObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  if (!pushObj || Object.getPrototypeOf(pushObj) !== Object.prototype || Object.keys(pushObj).length === 0) {\n    return;\n  }\n  (0,_util_debug_logging__WEBPACK_IMPORTED_MODULE_13__/* .debugLog */ .q)('GTM dataLayer updated.', pushObj);\n  window.dataLayer = window.dataLayer || [];\n  window.dataLayer.push(pushObj);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzk1MjcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3V0aWwvdHJhY2tpbmcuanM/ZTZjNyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///39527\n")},98172:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   L: () => (/* binding */ getOperatingSystem)\n/* harmony export */ });\n/**\n* Categorizing user agent strings to identify operating system\n* Operating system is currently added to data_layer\n*/\nconst getOperatingSystem = () => {\n  const ua = navigator.userAgent.toLowerCase();\n  let operating_system = 'desktop_other';\n  if (ua.includes('iphone')) {\n    operating_system = 'mobile_iphone';\n  } else if (ua.includes('ipad')) {\n    operating_system = 'mobile_ipad';\n  } else if (ua.includes('android')) {\n    operating_system = 'mobile_android';\n  } else if (ua.includes('windows')) {\n    operating_system = 'desktop_windows';\n  } else if (ua.includes('mac')) {\n    operating_system = 'desktop_mac';\n  } else if (ua.includes('mobile')) {\n    operating_system = 'mobile_other';\n  } else if (ua.startsWith('python')) {\n    operating_system = 'script_python';\n  } else if (!ua) {\n    operating_system = 'no_agent';\n  }\n  return operating_system;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTgxNzIuanMiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3V0aWwvdXNlci1hZ2VudC5qcz9iZTgyIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///98172\n")}}]);