"use strict";(self.__LOADABLE_LOADED_CHUNKS__=self.__LOADABLE_LOADED_CHUNKS__||[]).push([[7472],{38604:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ZT: () => (/* binding */ Typography)\n/* harmony export */ });\n/* unused harmony exports ALIGNMENTS, COMPONENTS, TYPOGRAPHY_COLORS, VARIANTS */\n/* harmony import */ var _wds_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(73675);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(27378);\n/* harmony import */ var _wds_styles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(30251);\n\n\n\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\n\nvar isNotLink = function (t) {\n    return t !== 'link';\n};\nvar hasFontWeight = function (t) {\n    return typeof t.fontWeight === 'string' || typeof t.fontWeight === 'number';\n};\nvar useStyles = (0,_wds_utils__WEBPACK_IMPORTED_MODULE_0__/* .createMemoStyles */ .Im)(function (_a) {\n    var _b = _a.type, fontFamily = _b.fontFamily, fontSize = _b.fontSize, fontWeight = _b.fontWeight, palette = _a.palette;\n    return {\n        wrenchTypography: function (_a) {\n            var align = _a.align, color = _a.color, variant = _a.variant, component = _a.component, weight = _a.weight;\n            var chosenColor = (0,_wds_styles__WEBPACK_IMPORTED_MODULE_2__/* .getColor */ .Lq)(palette, color, {\n                fallback: palette.text.dark,\n            });\n            var variantStyle = {};\n            if (variant) {\n                if (isNotLink(variant)) {\n                    variantStyle = {\n                        fontSize: fontSize[variant],\n                        fontWeight: {\n                            hero1: fontWeight.regular,\n                            hero2: fontWeight.regular,\n                            title: fontWeight.regular,\n                            sectionTitle: fontWeight.regular,\n                            sectionTitleSm: fontWeight.regular,\n                            pageTitle: fontWeight.regular,\n                            cardTitle: fontWeight.regular,\n                            body: fontWeight.regular,\n                            bodySm: fontWeight.regular,\n                            caption: fontWeight.regular,\n                        }[variant],\n                    };\n                }\n                else {\n                    variantStyle = {\n                        color: palette.link.main,\n                        textDecoration: 'none',\n                        border: 'none',\n                        background: 'none',\n                        outline: 'none',\n                        cursor: 'pointer',\n                        fontWeight: 'inherit',\n                        fontSize: 'inherit',\n                        '&:hover, &:focus': {\n                            textDecoration: 'underline',\n                        },\n                    };\n                }\n            }\n            var computedWeight = 'inherit';\n            if (weight) {\n                computedWeight = fontWeight[weight];\n            }\n            else if (component === 'strong') {\n                computedWeight = fontWeight.medium;\n            }\n            else if (hasFontWeight(variantStyle)) {\n                computedWeight = variantStyle.fontWeight;\n            }\n            return __assign(__assign(__assign({ fontFamily: fontFamily.base, fontSize: fontSize.body, boxSizing: 'border-box', '-webkit-font-smoothing': 'antialiased', color: chosenColor, textAlign: align, lineHeight: 1.5, margin: 0, padding: 0 }, variantStyle), (variant &&\n                (variant === 'hero1' || variant === 'hero2') && {\n                fontFamily: fontFamily === null || fontFamily === void 0 ? void 0 : fontFamily.headings,\n            })), { fontWeight: computedWeight, '& > strong, & > b': {\n                    fontWeight: fontWeight.medium,\n                } });\n        },\n    };\n});\n\nvar Typography = (0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)(function (_a, ref) {\n    var _b = _a.align, align = _b === void 0 ? 'left' : _b, _c = _a.color, color = _c === void 0 ? 'dark' : _c, _d = _a.component, component = _d === void 0 ? 'div' : _d, _e = _a.variant, variant = _e === void 0 ? 'body' : _e, weight = _a.weight, children = _a.children, rest = __rest(_a, [\"align\", \"color\", \"component\", \"variant\", \"weight\", \"children\"]);\n    var wrenchTypography = useStyles({\n        align: align,\n        color: color,\n        variant: variant,\n        component: component,\n        weight: weight,\n    }).wrenchTypography;\n    var Component = component;\n    return (react__WEBPACK_IMPORTED_MODULE_1__.createElement(Component, __assign({ className: wrenchTypography }, (0,_wds_utils__WEBPACK_IMPORTED_MODULE_0__/* .safeRest */ .Q6)(rest), { ref: ref }), children));\n});\n\nvar ALIGNMENTS = (/* unused pure expression or super */ null && (['center', 'left', 'right']));\nvar VARIANTS = __spreadArray(__spreadArray([], _wds_styles__WEBPACK_IMPORTED_MODULE_2__/* .FONT_SIZES */ .um, true), ['link'], false);\nvar TYPOGRAPHY_COLORS = __spreadArray(__spreadArray(__spreadArray([], _wds_styles__WEBPACK_IMPORTED_MODULE_2__/* .SEMANTIC_COLORS */ .kg, true), _wds_styles__WEBPACK_IMPORTED_MODULE_2__/* .LINK_COLORS */ .u5, true), _wds_styles__WEBPACK_IMPORTED_MODULE_2__/* .TYPE_COLORS */ .nk, true);\nvar COMPONENTS = (/* unused pure expression or super */ null && ([\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'a',\n    'p',\n    'span',\n    'div',\n    'article',\n    'section',\n    'em',\n    'strong',\n]));\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzg2MDQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL0B3ZHMvdHlwb2dyYXBoeS9kaXN0L2luZGV4LmVzLmpzPzYyNGMiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///38604\n")},67472:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  Z: () => (/* binding */ HeroPlain)\n});\n\n// EXTERNAL MODULE: ../node_modules/react/index.js\nvar react = __webpack_require__(27378);\n// EXTERNAL MODULE: ../packages/mds/src/components/FlexContainer/index.js\nvar FlexContainer = __webpack_require__(25834);\n// EXTERNAL MODULE: ../packages/mds/src/components/GridPlus/index.js + 1 modules\nvar GridPlus = __webpack_require__(51585);\n// EXTERNAL MODULE: ../packages/mds/src/components/GridPlus/GridPlusItem.js + 1 modules\nvar GridPlusItem = __webpack_require__(47414);\n// EXTERNAL MODULE: ../packages/mds/src/blocks/Heading/index.js + 2 modules\nvar Heading = __webpack_require__(14892);\n// EXTERNAL MODULE: ../packages/mds/src/components/HeroCTAs/index.js + 1 modules\nvar HeroCTAs = __webpack_require__(47266);\n// EXTERNAL MODULE: ../packages/mds/src/blocks/Paragraph/index.js + 1 modules\nvar Paragraph = __webpack_require__(87899);\n// EXTERNAL MODULE: ../packages/mds/src/components/SignUpCTA/index.js + 2 modules\nvar SignUpCTA = __webpack_require__(25958);\n// EXTERNAL MODULE: ../packages/mds/src/styles/shared/colors.js\nvar colors = __webpack_require__(59263);\n// EXTERNAL MODULE: ../packages/mds/src/constants/prop-types.js\nvar prop_types = __webpack_require__(41255);\n// EXTERNAL MODULE: ../packages/mds/src/constants/index.js\nvar constants = __webpack_require__(74689);\n// EXTERNAL MODULE: ../packages/mds/src/styles/shared/css.js\nvar css = __webpack_require__(2622);\n// EXTERNAL MODULE: ../packages/mds/src/utils/image.js\nvar utils_image = __webpack_require__(12230);\n// EXTERNAL MODULE: ../packages/apps/GetFeedback/src/components/SignUpFlowModal/constants.js\nvar SignUpFlowModal_constants = __webpack_require__(50329);\n// EXTERNAL MODULE: ../packages/mds/src/constants/hero.js\nvar hero = __webpack_require__(85506);\n// EXTERNAL MODULE: ../packages/mds/src/constants/sizes.js\nvar sizes = __webpack_require__(25474);\n// EXTERNAL MODULE: ../packages/mds/src/styles/shared/sizes.js\nvar shared_sizes = __webpack_require__(96432);\n// EXTERNAL MODULE: ../node_modules/react-jss/dist/react-jss.esm.js\nvar react_jss_esm = __webpack_require__(66593);\n// EXTERNAL MODULE: ../packages/mds/src/utils/styles.js\nvar styles = __webpack_require__(63085);\n// EXTERNAL MODULE: ../packages/mds/src/styles/shared/index.js\nvar shared = __webpack_require__(93308);\n// EXTERNAL MODULE: ../packages/mds/src/styles/shared/media-query.js\nvar media_query = __webpack_require__(48922);\n;// CONCATENATED MODULE: ../packages/mds/src/blocks/HeroPlain/style.js\n\n\n\n\n\nconst useHeroPlainStyles = (0,react_jss_esm/* createUseStyles */.QM)(_ref => {\n  let {\n    colors,\n    mds: {\n      heroPlain\n    },\n    spacing\n  } = _ref;\n  // TODO: Revisit @wds/box as container once it provides extensions that enable setting CSS props such as background*, color, margin, min-height\n  return {\n    mdsHeroPlain: {\n      // Do not apply, see /src/properties/shared/blocks/Hero/hero-ctas.scss#L17\n      backgroundColor: _ref2 => {\n        let {\n          backgroundColor\n        } = _ref2;\n        return colors.brand[backgroundColor];\n      },\n      color: _ref3 => {\n        let {\n          textColor\n        } = _ref3;\n        return colors.brand[textColor];\n      },\n      minHeight: _ref4 => {\n        let {\n          size\n        } = _ref4;\n        return size === hero/* HERO_SIZE_VALUES */.jC.large ? heroPlain.minHeight.defaults.small : heroPlain.minHeight.defaults[size];\n      },\n      [media_query/* MD_MEDIA_QUERY */.jA]: {\n        minHeight: _ref5 => {\n          let {\n            size\n          } = _ref5;\n          return size === hero/* HERO_SIZE_VALUES */.jC.large ? heroPlain.minHeight.tablet[size] : heroPlain.minHeight.defaults[size];\n        }\n      },\n      [media_query/* LG_MEDIA_QUERY */.b0]: {\n        minHeight: _ref6 => {\n          let {\n            size\n          } = _ref6;\n          return size === hero/* HERO_SIZE_VALUES */.jC.large ? heroPlain.minHeight.desktop[size] : heroPlain.minHeight.defaults[size];\n        }\n      }\n    },\n    mdsHeroPlainBackgroundImage: _ref7 => {\n      let {\n        hasImage,\n        imageUrl\n      } = _ref7;\n      return {\n        backgroundImage: shared/* CSS_NONE */.RT,\n        // Show background if browser width is at least size md (768px)\n        [media_query/* MD_MEDIA_QUERY */.jA]: (0,styles/* backgroundCover */.Lo)(hasImage, imageUrl)\n      };\n    },\n    mdsHeroPlainContent: {\n      margin: [0, spacing[5]],\n      padding: [spacing[5], 0],\n      [media_query/* MD_MEDIA_QUERY */.jA]: {\n        padding: [spacing[7], 0]\n      }\n    },\n    mdsHeroPlainSignupCTAs: {\n      marginLeft: shared/* CSS_AUTO */.qi,\n      marginRight: shared/* CSS_AUTO */.qi\n    },\n    mdsHeroPlainCTAs: {\n      // Per https://momentiveai.atlassian.net/browse/CMS-6824\n      // TODO: @alee revisit when converting HeroCTAs into a full-fledge block and it has margins\n      margin: 0\n    },\n    mdsHeroPlainEyebrow: {\n      marginBottom: spacing[2],\n      [media_query/* MD_MEDIA_QUERY */.jA]: {\n        marginBottom: spacing[4]\n      }\n    },\n    mdsHeroPlainHeading: {\n      marginBottom: spacing[4],\n      [media_query/* MD_MEDIA_QUERY */.jA]: {\n        marginBottom: spacing[5]\n      }\n    },\n    mdsHeroPlainSubheadline: {\n      marginBottom: spacing[4],\n      [media_query/* MD_MEDIA_QUERY */.jA]: {\n        marginBottom: spacing[5]\n      }\n    }\n  };\n});\n/* harmony default export */ const style = (useHeroPlainStyles);\n;// CONCATENATED MODULE: ../packages/mds/src/blocks/HeroPlain/index.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Variety of hero options typically found at the beginning of the page. Customizations are dependent on the type of hero selected (see below).\n *\n * * HeroPlain: See Zeplin specs for <a href="zpl://project?seid=5b340976992a080a5c095b51&pid=5ad624f03c5359dd0e9e9a56">background image</a>.\n */\nfunction HeroPlain(_ref) {\n  let {\n    backgroundColor = colors.BRAND_COLOR_KEY_VALUES.color0,\n    className = constants/* EMPTY_STRING */.v6,\n    contentVerticalAlign = css/* FLEX_JUSTIFY_VALUES */.VF.center,\n    ctaIsFreeTrial = false,\n    ctaMobileFallbackText = constants/* EMPTY_STRING */.v6,\n    ctaType = prop_types/* CTA_VALUES */.R4.none,\n    eyebrow,\n    headline = constants/* EMPTY_STRING */.v6,\n    image = constants/* EMPTY_OBJECT */.Nu,\n    margin = prop_types/* MARGIN_VALUES */.n1.removeBottom,\n    primaryButtonColor = colors/* SEMANTIC_COLOR_VALUES */.cE.upgrade,\n    primaryButtonText = constants/* EMPTY_STRING */.v6,\n    primaryButtonUrl = constants/* EMPTY_STRING */.v6,\n    primaryButtonUrlOpenNewTab = false,\n    primaryButtonVariant = prop_types/* BUTTON_VARIANT_VALUES */.Wk.solid,\n    secondaryButtonColor = colors/* SEMANTIC_COLOR_VALUES */.cE.primary,\n    secondaryButtonText = constants/* EMPTY_STRING */.v6,\n    secondaryButtonUrl = constants/* EMPTY_STRING */.v6,\n    secondaryButtonUrlOpenNewTab = false,\n    secondaryButtonVariant = prop_types/* BUTTON_VARIANT_VALUES */.Wk.solid,\n    size = hero/* HERO_SIZE_VALUES */.jC.small,\n    subheadline = constants/* EMPTY_STRING */.v6,\n    textColor = colors.BRAND_COLOR_KEY_VALUES.color4\n  } = _ref;\n  // Get the full size background image URL and generate the image styles if it exists.\n  const {\n    hasImage,\n    imageUrl\n  } = (0,utils_image/* getImageSize */.A)(image);\n  const classes = style({\n    backgroundColor,\n    hasImage,\n    imageUrl,\n    margin,\n    size,\n    textColor\n  });\n  let cta = null;\n  if (ctaType === prop_types/* CTA_VALUES */.R4.hero) {\n    cta =\n    /*#__PURE__*/\n    // TODO: replace className when JSS HeroCTAs provides parameter for parent Hero\n    react.createElement(HeroCTAs/* default */.Z, {\n      className: classes.mdsHeroPlainCTAs,\n      primaryButtonColor: primaryButtonColor,\n      primaryButtonText: primaryButtonText,\n      primaryButtonUrl: primaryButtonUrl,\n      primaryButtonUrlOpenNewTab: primaryButtonUrlOpenNewTab,\n      primaryButtonVariant: primaryButtonVariant,\n      secondaryButtonColor: secondaryButtonColor,\n      secondaryButtonText: secondaryButtonText,\n      secondaryButtonUrl: secondaryButtonUrl,\n      secondaryButtonUrlOpenNewTab: secondaryButtonUrlOpenNewTab,\n      secondaryButtonVariant: secondaryButtonVariant\n    });\n  }\n  if (ctaType === prop_types/* CTA_VALUES */.R4.signup) {\n    cta = /*#__PURE__*/react.createElement(SignUpCTA/* default */.Z, {\n      buttonColor: primaryButtonColor,\n      buttonText: primaryButtonText,\n      buttonVariant: primaryButtonVariant,\n      className: classes.mdsHeroPlainSignupCTAs,\n      fallbackText: ctaMobileFallbackText,\n      formVariant: ctaIsFreeTrial ? SignUpFlowModal_constants/* GFP_SIGN_UP_FORM_VARIANT_VALUES */.n7.freeTrial : SignUpFlowModal_constants/* GFP_SIGN_UP_FORM_VARIANT_VALUES */.n7.demoRequest,\n      textColor: textColor\n    });\n  }\n  return /*#__PURE__*/react.createElement(FlexContainer/* default */.Z, {\n    className: `${classes.mdsHeroPlain}  ${classes.mdsHeroPlainBackgroundImage}  ${className}`,\n    display: css/* FLEX_DISPLAY_VALUES */.Xq.flex,\n    flexAlign: css/* FLEX_ALIGN_VALUES */.u6.center,\n    flexDirection: css/* FLEX_DIRECTION_VALUES */.xC.column,\n    flexJustify: contentVerticalAlign\n  }, /*#__PURE__*/react.createElement(GridPlus/* default */.Z, null, /*#__PURE__*/react.createElement(GridPlusItem/* default */.Z, {\n    sm: 1,\n    xl: 2\n  }), /*#__PURE__*/react.createElement(GridPlusItem/* default */.Z, {\n    display: css/* FLEX_DISPLAY_VALUES */.Xq.flex,\n    flexDirection: css/* FLEX_DIRECTION_VALUES */.xC.column,\n    flexJustify: css/* FLEX_JUSTIFY_VALUES */.VF.center,\n    sm: 10,\n    xl: 8,\n    xs: sizes/* MAX_NUM_GRIDS */.RI\n  }, /*#__PURE__*/react.createElement("div", {\n    className: classes.mdsHeroPlainContent\n  }, Boolean(eyebrow) && /*#__PURE__*/react.createElement(Heading/* default */.Z, {\n    align: prop_types/* TEXT_ALIGNMENT_VALUES */.xP.center,\n    className: classes.mdsHeroPlainEyebrow,\n    isBare: true,\n    level: 6,\n    marginBottom: prop_types/* SPACING_SIZE_VALUES */.vZ.none,\n    marginTop: prop_types/* SPACING_SIZE_VALUES */.vZ.none,\n    textColor: textColor\n  }, eyebrow), Boolean(headline) && /*#__PURE__*/react.createElement(Heading/* default */.Z, {\n    align: prop_types/* TEXT_ALIGNMENT_VALUES */.xP.center,\n    className: classes.mdsHeroPlainHeading,\n    isBare: true,\n    level: 1,\n    marginBottom: prop_types/* SPACING_SIZE_VALUES */.vZ.none,\n    marginTop: prop_types/* SPACING_SIZE_VALUES */.vZ.none,\n    textColor: textColor\n  }, headline), Boolean(subheadline) && /*#__PURE__*/react.createElement(Paragraph/* default */.Z, {\n    align: prop_types/* TEXT_ALIGNMENT_VALUES */.xP.center,\n    className: classes.mdsHeroPlainSubheadline,\n    content: subheadline,\n    fontSize: shared_sizes/* WP_FONT_SIZE_VALUES */.ox.size5,\n    isBare: true,\n    margin: prop_types/* MARGIN_VALUES */.n1.removeAll,\n    textColor: textColor\n  }), cta))));\n}\nHeroPlain.__docgenInfo = {\n  "description": "Variety of hero options typically found at the beginning of the page. Customizations are dependent on the type of hero selected (see below).\\n\\n* HeroPlain: See Zeplin specs for <a href=\\"zpl://project?seid=5b340976992a080a5c095b51&pid=5ad624f03c5359dd0e9e9a56\\">background image</a>.",\n  "methods": [],\n  "displayName": "HeroPlain",\n  "props": {\n    "backgroundColor": {\n      "defaultValue": {\n        "value": "BRAND_COLOR_KEY_VALUES.color0",\n        "computed": true\n      },\n      "description": "\\uD83D\\uDCDD Can change the background color.",\n      "type": {\n        "name": "enum",\n        "computed": true,\n        "value": "BRAND_COLOR_KEY_OPTIONS"\n      },\n      "required": false\n    },\n    "className": {\n      "defaultValue": {\n        "value": "EMPTY_STRING",\n        "computed": true\n      },\n      "description": "\\uD83D\\uDCDD Parent provided className.",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "contentVerticalAlign": {\n      "defaultValue": {\n        "value": "FLEX_JUSTIFY_VALUES.center",\n        "computed": true\n      },\n      "description": "\\uD83D\\uDCDD Content\'s vertical alignment.",\n      "type": {\n        "name": "enum",\n        "value": [{\n          "value": "FLEX_JUSTIFY_VALUES.center",\n          "computed": true\n        }, {\n          "value": "FLEX_JUSTIFY_VALUES.flexStart",\n          "computed": true\n        }]\n      },\n      "required": false\n    },\n    "ctaIsFreeTrial": {\n      "defaultValue": {\n        "value": "false",\n        "computed": false\n      },\n      "description": "\\uD83D\\uDCDD Can designate a sign up CTA as a free trial.",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "ctaMobileFallbackText": {\n      "defaultValue": {\n        "value": "EMPTY_STRING",\n        "computed": true\n      },\n      "description": "\\uD83D\\uDCDD Can specify fallback text for mobile breakpoints where free trials are not supported.",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "ctaType": {\n      "defaultValue": {\n        "value": "CTA_VALUES.none",\n        "computed": true\n      },\n      "description": "\\uD83D\\uDCDD Can choose from CTA types.",\n      "type": {\n        "name": "enum",\n        "computed": true,\n        "value": "CTA_OPTIONS"\n      },\n      "required": false\n    },\n    "headline": {\n      "defaultValue": {\n        "value": "EMPTY_STRING",\n        "computed": true\n      },\n      "description": "\\uD83D\\uDCDD Headline text.",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "image": {\n      "defaultValue": {\n        "value": "EMPTY_OBJECT",\n        "computed": true\n      },\n      "description": "\\uD83D\\uDCDD Can add a background image.",\n      "type": {\n        "name": "shape",\n        "value": {}\n      },\n      "required": false\n    },\n    "margin": {\n      "defaultValue": {\n        "value": "MARGIN_VALUES.removeBottom",\n        "computed": true\n      },\n      "description": "\\uD83D\\uDCDD Can keep or remove the top, bottom, or both margins outside the hero-plain.\\n   Removing margins eliminates white space between the hero-plain and other components.",\n      "type": {\n        "name": "enum",\n        "computed": true,\n        "value": "MARGIN_OPTIONS"\n      },\n      "required": false\n    },\n    "primaryButtonColor": {\n      "defaultValue": {\n        "value": "SEMANTIC_COLOR_VALUES.upgrade",\n        "computed": true\n      },\n      "description": "\\uD83D\\uDCDD Primary button color.",\n      "type": {\n        "name": "enum",\n        "computed": true,\n        "value": "SEMANTIC_COLOR_OPTIONS"\n      },\n      "required": false\n    },\n    "primaryButtonText": {\n      "defaultValue": {\n        "value": "EMPTY_STRING",\n        "computed": true\n      },\n      "description": "\\uD83D\\uDCDD Primary button text.",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "primaryButtonUrl": {\n      "defaultValue": {\n        "value": "EMPTY_STRING",\n        "computed": true\n      },\n      "description": "\\uD83D\\uDCDD Primary button url.",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "primaryButtonUrlOpenNewTab": {\n      "defaultValue": {\n        "value": "false",\n        "computed": false\n      },\n      "description": "\\uD83D\\uDCDD Primary button url opens to new tab.",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "primaryButtonVariant": {\n      "defaultValue": {\n        "value": "BUTTON_VARIANT_VALUES.solid",\n        "computed": true\n      },\n      "description": "\\uD83D\\uDCDD Primary button variant.",\n      "type": {\n        "name": "enum",\n        "computed": true,\n        "value": "BUTTON_VARIANT_OPTIONS"\n      },\n      "required": false\n    },\n    "secondaryButtonColor": {\n      "defaultValue": {\n        "value": "SEMANTIC_COLOR_VALUES.primary",\n        "computed": true\n      },\n      "description": "\\uD83D\\uDCDD Secondary button color.",\n      "type": {\n        "name": "enum",\n        "computed": true,\n        "value": "SEMANTIC_COLOR_OPTIONS"\n      },\n      "required": false\n    },\n    "secondaryButtonText": {\n      "defaultValue": {\n        "value": "EMPTY_STRING",\n        "computed": true\n      },\n      "description": "\\uD83D\\uDCDD Secondary button text.",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "secondaryButtonUrl": {\n      "defaultValue": {\n        "value": "EMPTY_STRING",\n        "computed": true\n      },\n      "description": "\\uD83D\\uDCDD Secondary button url.",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "secondaryButtonUrlOpenNewTab": {\n      "defaultValue": {\n        "value": "false",\n        "computed": false\n      },\n      "description": "\\uD83D\\uDCDD Secondary button url opens to new tab.",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "secondaryButtonVariant": {\n      "defaultValue": {\n        "value": "BUTTON_VARIANT_VALUES.solid",\n        "computed": true\n      },\n      "description": "\\uD83D\\uDCDD Secondary button variant.",\n      "type": {\n        "name": "enum",\n        "computed": true,\n        "value": "BUTTON_VARIANT_OPTIONS"\n      },\n      "required": false\n    },\n    "size": {\n      "defaultValue": {\n        "value": "HERO_SIZE_VALUES.small",\n        "computed": true\n      },\n      "description": "\\uD83D\\uDCDD Size limited to full to start with.",\n      "type": {\n        "name": "enum",\n        "computed": true,\n        "value": "HERO_SIZE_OPTIONS"\n      },\n      "required": false\n    },\n    "subheadline": {\n      "defaultValue": {\n        "value": "EMPTY_STRING",\n        "computed": true\n      },\n      "description": "\\uD83D\\uDCDD Subheadline.",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "textColor": {\n      "defaultValue": {\n        "value": "BRAND_COLOR_KEY_VALUES.color4",\n        "computed": true\n      },\n      "description": "\\uD83D\\uDCDD Can change the text color.",\n      "type": {\n        "name": "enum",\n        "computed": true,\n        "value": "BRAND_COLOR_KEY_OPTIONS"\n      },\n      "required": false\n    },\n    "eyebrow": {\n      "description": "\\uD83D\\uDCDD Eyebrow text.",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjc0NzIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ25HQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL3BhY2thZ2VzL21kcy9zcmMvYmxvY2tzL0hlcm9QbGFpbi9zdHlsZS5qcz80OGQ0Iiwid2VicGFjazovLy8uLi9wYWNrYWdlcy9tZHMvc3JjL2Jsb2Nrcy9IZXJvUGxhaW4vaW5kZXguanM/MjczMCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///67472\n')},47266:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  Z: () => (/* binding */ HeroCTAs)\n});\n\n// EXTERNAL MODULE: ../node_modules/react/index.js\nvar react = __webpack_require__(27378);\n// EXTERNAL MODULE: ../node_modules/react-redux/es/index.js + 20 modules\nvar es = __webpack_require__(23884);\n// EXTERNAL MODULE: ../node_modules/theming/dist/theming.esm.js\nvar theming_esm = __webpack_require__(24586);\n// EXTERNAL MODULE: ../packages/mds/src/components/FlexContainer/index.js\nvar FlexContainer = __webpack_require__(25834);\n// EXTERNAL MODULE: ../packages/mds/src/components/LinkButton/index.js + 6 modules\nvar LinkButton = __webpack_require__(53080);\n// EXTERNAL MODULE: ../packages/mds/src/constants/prop-types.js\nvar prop_types = __webpack_require__(41255);\n// EXTERNAL MODULE: ../packages/mds/src/constants/sizes.js\nvar sizes = __webpack_require__(25474);\n// EXTERNAL MODULE: ../packages/mds/src/constants/index.js\nvar constants = __webpack_require__(74689);\n// EXTERNAL MODULE: ../packages/mds/src/styles/shared/css.js\nvar css = __webpack_require__(2622);\n// EXTERNAL MODULE: ../packages/mds/src/utils/layout.js\nvar layout = __webpack_require__(41770);\n// EXTERNAL MODULE: ../packages/mds/src/constants/products.js\nvar products = __webpack_require__(95335);\n// EXTERNAL MODULE: ../packages/mds/src/styles/shared/colors.js\nvar colors = __webpack_require__(59263);\n// EXTERNAL MODULE: ../packages/mds/src/constants/tracking.js\nvar tracking = __webpack_require__(3568);\n// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/defineProperty.js\nvar defineProperty = __webpack_require__(64649);\n// EXTERNAL MODULE: ../node_modules/react-jss/dist/react-jss.esm.js\nvar react_jss_esm = __webpack_require__(66593);\n// EXTERNAL MODULE: ../packages/mds/src/hoc/withFlex.js\nvar withFlex = __webpack_require__(83170);\n// EXTERNAL MODULE: ../packages/mds/src/styles/shared/index.js\nvar shared = __webpack_require__(93308);\n// EXTERNAL MODULE: ../packages/mds/src/styles/shared/media-query.js\nvar media_query = __webpack_require__(48922);\n;// CONCATENATED MODULE: ../packages/mds/src/components/HeroCTAs/style.js\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0,defineProperty/* default */.Z)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n\n\n\n\n\nconst useHeroCTAsStyles = (0,react_jss_esm/* createUseStyles */.QM)(_ref => {\n  let {\n    mds: {\n      heroCTAs\n    },\n    spacing\n  } = _ref;\n  return {\n    mdsHeroCtaContainer: props => _objectSpread(_objectSpread({\n      margin: [[spacing[5] - spacing[1], 0, spacing[6], 0]],\n      flexWrap: css/* FLEX_WRAP_VALUES */.e3.wrap\n    }, (0,withFlex/* addFlexStyle */.H)(_objectSpread({}, props))), {}, {\n      [media_query/* MD_MEDIA_QUERY */.jA]: {\n        flexWrap: css/* FLEX_WRAP_VALUES */.e3.nowrap,\n        margin: [[spacing[6], 0]]\n      }\n    }),\n    mdsHeroCta: {\n      justifyContent: css/* FLEX_JUSTIFY_VALUES */.VF.center,\n      minWidth: _ref2 => {\n        let {\n          layoutColumns\n        } = _ref2;\n        return heroCTAs[layoutColumns].default;\n      },\n      marginTop: spacing[3],\n      width: shared/* CSS_100 */.Fl,\n      [media_query/* MD_MEDIA_QUERY */.jA]: {\n        minWidth: _ref3 => {\n          let {\n            layoutColumns\n          } = _ref3;\n          return heroCTAs[layoutColumns].md;\n        },\n        margin: [[0, spacing[3], 0, 0]],\n        width: shared/* CSS_AUTO */.qi\n      }\n    }\n  };\n});\n/* harmony default export */ const style = (useHeroCTAsStyles);\n;// CONCATENATED MODULE: ../packages/mds/src/components/HeroCTAs/index.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst INIT_FLEX_SETTINGS = {\n  display: css/* FLEX_DISPLAY_VALUES */.Xq.flex,\n  flexDirection: css/* FLEX_DIRECTION_VALUES */.xC.row\n};\nfunction HeroCTAs(_ref) {\n  let {\n    align = css/* FLEX_JUSTIFY_VALUES */.VF.center,\n    className = constants/* EMPTY_STRING */.v6,\n    flexSettings = INIT_FLEX_SETTINGS,\n    layoutColumns = 1,\n    primaryButtonColor = colors/* SEMANTIC_COLOR_VALUES */.cE.upgrade,\n    primaryButtonText = constants/* EMPTY_STRING */.v6,\n    primaryButtonUrl = constants/* EMPTY_STRING */.v6,\n    primaryButtonUrlOpenNewTab = false,\n    primaryButtonVariant = prop_types/* BUTTON_VARIANT_VALUES */.Wk.solid,\n    secondaryButtonColor = colors/* SEMANTIC_COLOR_VALUES */.cE.primary,\n    secondaryButtonText = constants/* EMPTY_STRING */.v6,\n    secondaryButtonUrl = constants/* EMPTY_STRING */.v6,\n    secondaryButtonUrlOpenNewTab = false,\n    secondaryButtonVariant = prop_types/* BUTTON_VARIANT_VALUES */.Wk.solid,\n    showAuth = prop_types/* SHOW_AUTH_VALUES */.eF.all\n  } = _ref;\n  const {\n    [products/* PRODUCT_PROP_KEY */.kR]: product\n  } = (0,theming_esm/* useTheme */.Fg)();\n  const hasPrimaryButton = primaryButtonText.length > 0 && primaryButtonUrl;\n  const hasSecondaryButton = secondaryButtonText.length > 0 && secondaryButtonUrl.length > 0;\n  const {\n    mdsHeroCta,\n    mdsHeroCtaContainer\n  } = style({\n    flexSettings,\n    layoutColumns\n  });\n\n  // If this is a Logged in Hero, and the primary CTA goes to create,\n  // and the current post is a "survey-template" page, and has a valid Survey Template ID,\n  // generate appropriate query params for the destination URL to deep link to the template.\n  const blocks = (0,es/* useSelector */.v9)(state => state?.post?.postData?.content ?? []);\n  const path = (0,es/* useSelector */.v9)(state => state?.post?.postData?.path ?? constants/* EMPTY_STRING */.v6);\n  const templateId = path.endsWith(\'-survey-template/\') ? (0,layout/* getSurveyTemplateFromPost */.JO)({\n    blocks\n  }) : 0;\n  if (primaryButtonUrl === \'/create/\' && showAuth === prop_types/* SHOW_AUTH_OPTIONS */.x7.in && templateId) {\n    primaryButtonUrl = `${primaryButtonUrl}?templateId=${templateId}`;\n  }\n  const primaryButtonTarget = primaryButtonUrlOpenNewTab ? \'_blank\' : undefined;\n  const secondaryButtonTarget = secondaryButtonUrlOpenNewTab ? \'_blank\' : undefined;\n  return /*#__PURE__*/react.createElement(FlexContainer/* default */.Z, {\n    className: `${mdsHeroCtaContainer}  ${className}`,\n    display: css/* FLEX_DISPLAY_VALUES */.Xq.flex,\n    flexJustify: align\n  }, hasPrimaryButton && /*#__PURE__*/react.createElement(LinkButton/* default */.Z, {\n    className: mdsHeroCta,\n    color: primaryButtonColor,\n    href: primaryButtonUrl,\n    size: sizes/* DISPLAY_SIZE_VALUES */.y5.lg,\n    target: primaryButtonTarget,\n    variant: primaryButtonVariant,\n    withTracking: tracking/* WITH_TRACKING_VALUES */.G0.hero\n  }, primaryButtonText), hasSecondaryButton && /*#__PURE__*/react.createElement(LinkButton/* default */.Z, {\n    className: mdsHeroCta,\n    color: secondaryButtonColor,\n    href: secondaryButtonUrl\n    /* When the secondary CTA has long text and an SVG arrow (only present in GetFeedback), it needs a span to be laid out correctly */,\n    needsTextWrapper: product === products/* PRODUCT_VALUES */.pO.gf,\n    size: sizes/* DISPLAY_SIZE_VALUES */.y5.lg,\n    target: secondaryButtonTarget,\n    variant: secondaryButtonVariant,\n    withTracking: tracking/* WITH_TRACKING_VALUES */.G0.hero\n  }, secondaryButtonText));\n}\nHeroCTAs.__docgenInfo = {\n  "description": "",\n  "methods": [],\n  "displayName": "HeroCTAs",\n  "props": {\n    "align": {\n      "defaultValue": {\n        "value": "FLEX_JUSTIFY_VALUES.center",\n        "computed": true\n      },\n      "description": "",\n      "type": {\n        "name": "enum",\n        "computed": true,\n        "value": "FLEX_JUSTIFY_OPTIONS"\n      },\n      "required": false\n    },\n    "className": {\n      "defaultValue": {\n        "value": "EMPTY_STRING",\n        "computed": true\n      },\n      "description": "\\uD83D\\uDEAB Any additional CSS classes to apply to the HeroCTA.",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "flexSettings": {\n      "defaultValue": {\n        "value": "{\\n  display: FLEX_DISPLAY_VALUES.flex,\\n  flexDirection: FLEX_DIRECTION_VALUES.row,\\n}",\n        "computed": false\n      },\n      "description": "",\n      "type": {\n        "name": "shape",\n        "value": "import {\\n  BUTTON_VARIANT_OPTIONS,\\n  BUTTON_VARIANT_VALUES,\\n  FLEX_PROP_TYPES,\\n  LAYOUT_COLUMNS,\\n  SHOW_AUTH_OPTIONS,\\n  SHOW_AUTH_VALUES,\\n} from \'~mds/constants/prop-types\';",\n        "computed": true\n      },\n      "required": false\n    },\n    "layoutColumns": {\n      "defaultValue": {\n        "value": "1",\n        "computed": false\n      },\n      "description": "",\n      "type": {\n        "name": "enum",\n        "computed": true,\n        "value": "LAYOUT_COLUMNS"\n      },\n      "required": false\n    },\n    "primaryButtonColor": {\n      "defaultValue": {\n        "value": "SEMANTIC_COLOR_VALUES.upgrade",\n        "computed": true\n      },\n      "description": "\\uD83D\\uDCDD Primary button color.",\n      "type": {\n        "name": "enum",\n        "computed": true,\n        "value": "SEMANTIC_COLOR_OPTIONS"\n      },\n      "required": false\n    },\n    "primaryButtonText": {\n      "defaultValue": {\n        "value": "EMPTY_STRING",\n        "computed": true\n      },\n      "description": "\\uD83D\\uDCDD Primary button text.",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "primaryButtonUrl": {\n      "defaultValue": {\n        "value": "EMPTY_STRING",\n        "computed": true\n      },\n      "description": "\\uD83D\\uDCDD Primary button url.",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "primaryButtonUrlOpenNewTab": {\n      "defaultValue": {\n        "value": "false",\n        "computed": false\n      },\n      "description": "\\uD83D\\uDCDD Primary button url opens to new tab.",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "primaryButtonVariant": {\n      "defaultValue": {\n        "value": "BUTTON_VARIANT_VALUES.solid",\n        "computed": true\n      },\n      "description": "\\uD83D\\uDCDD Primary button variant.",\n      "type": {\n        "name": "enum",\n        "computed": true,\n        "value": "BUTTON_VARIANT_OPTIONS"\n      },\n      "required": false\n    },\n    "secondaryButtonColor": {\n      "defaultValue": {\n        "value": "SEMANTIC_COLOR_VALUES.primary",\n        "computed": true\n      },\n      "description": "\\uD83D\\uDCDD Secondary button color.",\n      "type": {\n        "name": "enum",\n        "computed": true,\n        "value": "SEMANTIC_COLOR_OPTIONS"\n      },\n      "required": false\n    },\n    "secondaryButtonText": {\n      "defaultValue": {\n        "value": "EMPTY_STRING",\n        "computed": true\n      },\n      "description": "\\uD83D\\uDCDD Secondary button text.",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "secondaryButtonUrl": {\n      "defaultValue": {\n        "value": "EMPTY_STRING",\n        "computed": true\n      },\n      "description": "\\uD83D\\uDCDD Secondary button url.",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "secondaryButtonUrlOpenNewTab": {\n      "defaultValue": {\n        "value": "false",\n        "computed": false\n      },\n      "description": "\\uD83D\\uDCDD Secondary button url opens to new tab.",\n      "type": {\n        "name": "bool"\n      },\n      "required": false\n    },\n    "secondaryButtonVariant": {\n      "defaultValue": {\n        "value": "BUTTON_VARIANT_VALUES.solid",\n        "computed": true\n      },\n      "description": "\\uD83D\\uDCDD Secondary button variant.",\n      "type": {\n        "name": "enum",\n        "computed": true,\n        "value": "BUTTON_VARIANT_OPTIONS"\n      },\n      "required": false\n    },\n    "showAuth": {\n      "defaultValue": {\n        "value": "SHOW_AUTH_VALUES.all",\n        "computed": true\n      },\n      "description": "\\uD83D\\uDCDD What user state to show this Hero to.",\n      "type": {\n        "name": "enum",\n        "computed": true,\n        "value": "SHOW_AUTH_OPTIONS"\n      },\n      "required": false\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDcyNjYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2hEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9wYWNrYWdlcy9tZHMvc3JjL2NvbXBvbmVudHMvSGVyb0NUQXMvc3R5bGUuanM/ZTNhZCIsIndlYnBhY2s6Ly8vLi4vcGFja2FnZXMvbWRzL3NyYy9jb21wb25lbnRzL0hlcm9DVEFzL2luZGV4LmpzPzIyNWUiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///47266\n')},25958:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  Z: () => (/* binding */ SignUpCTA)\n});\n\n// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/defineProperty.js\nvar defineProperty = __webpack_require__(64649);\n// EXTERNAL MODULE: ../node_modules/react/index.js\nvar react = __webpack_require__(27378);\n// EXTERNAL MODULE: ../node_modules/@sm/intl/dist/index.js\nvar dist = __webpack_require__(8239);\n// EXTERNAL MODULE: ../node_modules/@wds/box/dist/index.es.js\nvar index_es = __webpack_require__(70659);\n// EXTERNAL MODULE: ../packages/mds/src/blocks/Button/index.js + 1 modules\nvar Button = __webpack_require__(49838);\n// EXTERNAL MODULE: ../packages/mds/src/blocks/Paragraph/index.js + 1 modules\nvar Paragraph = __webpack_require__(87899);\n// EXTERNAL MODULE: ../packages/mds/src/styles/shared/colors.js\nvar colors = __webpack_require__(59263);\n// EXTERNAL MODULE: ../packages/mds/src/constants/prop-types.js\nvar prop_types = __webpack_require__(41255);\n// EXTERNAL MODULE: ../packages/mds/src/styles/shared/css.js\nvar css = __webpack_require__(2622);\n// EXTERNAL MODULE: ../packages/mds/src/constants/index.js\nvar constants = __webpack_require__(74689);\n// EXTERNAL MODULE: ../packages/apps/GetFeedback/src/components/SignUpFlowModal/constants.js\nvar SignUpFlowModal_constants = __webpack_require__(50329);\n// EXTERNAL MODULE: ./constants/key-codes.js\nvar key_codes = __webpack_require__(85262);\n// EXTERNAL MODULE: ./util/contexts.js\nvar contexts = __webpack_require__(40668);\n// EXTERNAL MODULE: ../packages/mds/src/providers/ResponsiveBreakpoints/ResponsiveBreakpoints.js + 1 modules\nvar ResponsiveBreakpoints = __webpack_require__(69665);\n// EXTERNAL MODULE: ./util/hubspot/index.js + 1 modules\nvar hubspot = __webpack_require__(54118);\n// EXTERNAL MODULE: ../packages/mds/src/styles/shared/sizes.js\nvar sizes = __webpack_require__(96432);\n;// CONCATENATED MODULE: ../packages/mds/src/components/SignUpCTA/copy.js\n/* eslint-disable max-len */\n\n/* harmony default export */ const copy = ((0,dist/* defineMessages */.vU)({\n  EMAIL_PLACEHOLDER: {\n    "id": "MDS.Components.SignUpCTA.Email-Placeholder",\n    "defaultMessage": "Enter your email"\n  }\n}));\n// EXTERNAL MODULE: ../node_modules/react-jss/dist/react-jss.esm.js\nvar react_jss_esm = __webpack_require__(66593);\n// EXTERNAL MODULE: ../packages/mds/src/styles/shared/index.js\nvar shared = __webpack_require__(93308);\n// EXTERNAL MODULE: ../packages/mds/src/styles/shared/media-query.js\nvar media_query = __webpack_require__(48922);\n;// CONCATENATED MODULE: ../packages/mds/src/components/SignUpCTA/style.js\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0,defineProperty/* default */.Z)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n\n\n\n\n\n\nconst useSignUpCTAStyles = (0,react_jss_esm/* createUseStyles */.QM)(_ref => {\n  let {\n    colors: {\n      brand,\n      transparent\n    },\n    mds: {\n      signUpCTA: {\n        container,\n        border,\n        fontWeight,\n        maxWidth\n      }\n    },\n    spacing,\n    typography: {\n      fontSizes: {\n        size5,\n        size7\n      }\n    }\n  } = _ref;\n  return {\n    errorMessageClass: {\n      color: _ref2 => {\n        let {\n          textColor\n        } = _ref2;\n        return textColor === colors.BRAND_COLOR_KEY_VALUES.color0 ? brand.color0 : brand.color9;\n      },\n      position: css/* POSITION_VALUES */.Nr.absolute\n    },\n    inputClass: _objectSpread(_objectSpread({\n      background: transparent\n    }, border), {}, {\n      width: shared/* CSS_100 */.Fl,\n      \'&::placeholder\': {\n        color: brand.color15\n      }\n    }),\n    inputContainerClass: {\n      display: css/* DISPLAY_VALUES */.ZW.inlineBlock,\n      position: css/* POSITION_VALUES */.Nr.relative,\n      width: shared/* CSS_100 */.Fl,\n      [media_query/* SM_MEDIA_QUERY */.Pj]: {\n        marginRight: spacing[6],\n        maxWidth: maxWidth.sm\n      },\n      [media_query/* LG_MEDIA_QUERY */.b0]: {\n        maxWidth: maxWidth.lg\n      }\n    },\n    inputFontType: {\n      color: _ref3 => {\n        let {\n          textColor\n        } = _ref3;\n        return brand[textColor];\n      },\n      fontSize: size5.fontSize,\n      fontStyle: sizes/* FONT_STYLE_VALUES */.jT.italic,\n      fontWeight,\n      [media_query/* SM_MEDIA_QUERY */.Pj]: {\n        fontSize: size7.fontSize\n      },\n      [media_query/* LG_MEDIA_QUERY */.b0]: {\n        fontSize: size5.fontSize\n      }\n    },\n    signupCTAWrapper: {\n      [media_query/* SM_MEDIA_QUERY */.Pj]: {\n        alignItems: css/* FLEX_ALIGN_VALUES */.u6.center,\n        display: css/* DISPLAY_VALUES */.ZW.flex\n      }\n    },\n    wrapperClass: {\n      maxWidth: container.maxWidth\n    }\n  };\n});\n/* harmony default export */ const style = (useSignUpCTAStyles);\n;// CONCATENATED MODULE: ../packages/mds/src/components/SignUpCTA/index.js\n\nfunction SignUpCTA_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction SignUpCTA_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? SignUpCTA_ownKeys(Object(t), !0).forEach(function (r) { (0,defineProperty/* default */.Z)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : SignUpCTA_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @param {string}  buttonColor   The CTA button color.\n * @param {string}  buttonText    The CTA button text.\n * @param {string}  buttonVariant The CTA button variant.\n * @param {string}  className     Additional classes to pass.\n * @param {string}  fallbackText  The text to show for free trial CTAs at breakpoints where they are not supported.\n * @param {string}  formVariant   Whether this CTA is associated with a free trial request.\n * @param {string}  textColor     The color for the input field and legal text.\n */\nfunction SignUpCTA(_ref) {\n  let {\n    buttonColor,\n    buttonText,\n    buttonVariant,\n    className,\n    fallbackText,\n    formVariant,\n    textColor\n  } = _ref;\n  const {\n    email: [modalEmail, setModalEmail] = [],\n    formVariant: [, setFormVariant] = [],\n    modalState: [, setModalOpen] = []\n  } = (0,react.useContext)(contexts/* SignUpFlowModalContext */.fb) || {};\n  const {\n    isDesktop\n  } = (0,ResponsiveBreakpoints/* useMdsDeviceSize */.$p)();\n  const [email, setEmail] = (0,react.useState)(modalEmail);\n  // Use an `errors` object even though there is only\n  // one field in order to reuse existing form utils.\n  const [errors, setErrors] = (0,react.useState)({});\n\n  // As the button text can be dynamic based on screen size,\n  // and `window` is not available for SSR, do not use `matchMedia`\n  // on the server and immediately re-render on the client to do so.\n  const [isClient, setIsClient] = (0,react.useState)(false);\n  (0,react.useEffect)(() => {\n    setIsClient(true);\n  }, []);\n  const [inputIsFocused, setInputIsFocused] = (0,react.useState)(false);\n  const {\n    errorMessageClass,\n    inputClass,\n    inputFontType,\n    inputContainerClass,\n    signupCTAWrapper\n  } = style({\n    textColor\n  });\n  const handleClick = (0,react.useCallback)(e => {\n    const handleErrors = _ref2 => {\n      let {\n        name,\n        message\n      } = _ref2;\n      setErrors(errors => SignUpCTA_objectSpread(SignUpCTA_objectSpread({}, errors), {}, {\n        [name]: message\n      }));\n    };\n    if (e) {\n      e.preventDefault();\n    }\n    const isValid = (0,hubspot/* validateField */.OP)({\n      bypassEmailDomainFilter: true,\n      name: \'email\',\n      setErrors: handleErrors,\n      required: true,\n      value: email\n    });\n    if (isValid) {\n      setFormVariant(formVariant);\n      setModalOpen(true);\n      setModalEmail(email);\n    }\n  }, [email, formVariant, setFormVariant, setModalEmail, setModalOpen]);\n\n  // When the input field is focused, bind the click action (minus the preventDefault call) to the Enter key.\n  (0,react.useEffect)(() => {\n    const onPressEnter = _ref3 => {\n      let {\n        keyCode\n      } = _ref3;\n      if (keyCode === key_codes/* KEY_CODE_ENTER */.Uq) {\n        handleClick();\n      }\n    };\n    if (inputIsFocused) {\n      document.addEventListener(\'keyup\', onPressEnter);\n    }\n    return () => document.removeEventListener(\'keyup\', onPressEnter);\n  }, [handleClick, inputIsFocused]);\n  let showFallbackText = false;\n  if (isClient) {\n    showFallbackText = !isDesktop && formVariant === SignUpFlowModal_constants/* GFP_SIGN_UP_FORM_VARIANT_VALUES */.n7.freeTrial && fallbackText;\n  }\n  const actualButtonText = showFallbackText ? fallbackText : buttonText;\n  return /*#__PURE__*/react.createElement(index_es/* Box */.x, {\n    className: `${signupCTAWrapper} ${className}`,\n    display: css/* DISPLAY_VALUES */.ZW.flex,\n    flexAlign: css/* FLEX_ALIGN_VALUES */.u6.center,\n    my: 5\n  }, /*#__PURE__*/react.createElement("div", {\n    className: inputContainerClass\n  }, /*#__PURE__*/react.createElement("input", {\n    className: `${inputClass} ${inputFontType}`,\n    onBlur: () => {\n      setInputIsFocused(false);\n    },\n    onChange: e => {\n      setEmail(e.target.value);\n    },\n    onFocus: () => {\n      setInputIsFocused(true);\n    },\n    placeholder: (0,dist.t)(copy.EMAIL_PLACEHOLDER),\n    type: "text",\n    value: email\n  }), /*#__PURE__*/react.createElement(Paragraph/* default */.Z, {\n    className: errorMessageClass,\n    fontSize: sizes/* WP_FONT_SIZE_VALUES */.ox.size9,\n    isBare: true,\n    margin: prop_types/* MARGIN_VALUES */.n1.removeAll,\n    resetMargin: true\n  }, errors.email)), /*#__PURE__*/react.createElement(Button/* default */.Z, {\n    align: "center",\n    color: buttonColor,\n    columnSettings: {\n      xs: 12\n    },\n    onClick: handleClick,\n    text: actualButtonText,\n    variant: buttonVariant\n  }));\n}\nSignUpCTA.defaultProps = {\n  buttonColor: colors/* SEMANTIC_COLOR_VALUES */.cE.primary,\n  buttonText: constants/* EMPTY_STRING */.v6,\n  buttonVariant: prop_types/* BUTTON_VARIANT_VALUES */.Wk.solid,\n  className: constants/* EMPTY_STRING */.v6,\n  fallbackText: constants/* EMPTY_STRING */.v6,\n  formVariant: SignUpFlowModal_constants/* GFP_SIGN_UP_FORM_VARIANT_VALUES */.n7.demoRequest,\n  textColor: colors.BRAND_COLOR_KEY_VALUES.color0\n};\nSignUpCTA.__docgenInfo = {\n  "description": "@param {string}  buttonColor   The CTA button color.\\n@param {string}  buttonText    The CTA button text.\\n@param {string}  buttonVariant The CTA button variant.\\n@param {string}  className     Additional classes to pass.\\n@param {string}  fallbackText  The text to show for free trial CTAs at breakpoints where they are not supported.\\n@param {string}  formVariant   Whether this CTA is associated with a free trial request.\\n@param {string}  textColor     The color for the input field and legal text.",\n  "methods": [],\n  "displayName": "SignUpCTA",\n  "props": {\n    "buttonColor": {\n      "defaultValue": {\n        "value": "SEMANTIC_COLOR_VALUES.primary",\n        "computed": true\n      },\n      "description": "",\n      "type": {\n        "name": "enum",\n        "computed": true,\n        "value": "SEMANTIC_COLOR_OPTIONS"\n      },\n      "required": false\n    },\n    "buttonText": {\n      "defaultValue": {\n        "value": "EMPTY_STRING",\n        "computed": true\n      },\n      "description": "",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "buttonVariant": {\n      "defaultValue": {\n        "value": "BUTTON_VARIANT_VALUES.solid",\n        "computed": true\n      },\n      "description": "",\n      "type": {\n        "name": "enum",\n        "computed": true,\n        "value": "BUTTON_VARIANT_OPTIONS"\n      },\n      "required": false\n    },\n    "className": {\n      "defaultValue": {\n        "value": "EMPTY_STRING",\n        "computed": true\n      },\n      "description": "",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "fallbackText": {\n      "defaultValue": {\n        "value": "EMPTY_STRING",\n        "computed": true\n      },\n      "description": "",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "formVariant": {\n      "defaultValue": {\n        "value": "GFP_SIGN_UP_FORM_VARIANT_VALUES.demoRequest",\n        "computed": true\n      },\n      "description": "",\n      "type": {\n        "name": "string"\n      },\n      "required": false\n    },\n    "textColor": {\n      "defaultValue": {\n        "value": "BRAND_COLOR_KEY_VALUES.color0",\n        "computed": true\n      },\n      "description": "",\n      "type": {\n        "name": "enum",\n        "value": [{\n          "value": "BRAND_COLOR_KEY_VALUES.color0",\n          "computed": true\n        }, {\n          "value": "BRAND_COLOR_KEY_VALUES.color1",\n          "computed": true\n        }, {\n          "value": "BRAND_COLOR_KEY_VALUES.color17",\n          "computed": true\n        }]\n      },\n      "required": false\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjU5NTguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7QUNQQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDekZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL3BhY2thZ2VzL21kcy9zcmMvY29tcG9uZW50cy9TaWduVXBDVEEvY29weS5qcz9jYmY0Iiwid2VicGFjazovLy8uLi9wYWNrYWdlcy9tZHMvc3JjL2NvbXBvbmVudHMvU2lnblVwQ1RBL3N0eWxlLmpzPzA1MTEiLCJ3ZWJwYWNrOi8vLy4uL3BhY2thZ2VzL21kcy9zcmMvY29tcG9uZW50cy9TaWduVXBDVEEvaW5kZXguanM/OTI0OCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///25958\n')},85506:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Gv: () => (/* binding */ IMAGE_SIZE_VALUES),\n/* harmony export */   jC: () => (/* binding */ HERO_SIZE_VALUES)\n/* harmony export */ });\n/* unused harmony export HERO_SIZE_OPTIONS */\n/* harmony import */ var _mds_utils_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(46321);\n\n\n/**\n * Hero size name.\n * @constant\n */\nconst HERO_SIZE_OPTIONS = Object.freeze(['large', 'medium', 'small']);\nconst HERO_SIZE_VALUES = Object.freeze((0,_mds_utils_utils__WEBPACK_IMPORTED_MODULE_0__/* .generateObject */ .jA)(HERO_SIZE_OPTIONS));\n\n/**\n * The allowed image sizes.\n * TODO: Since rename from a hero-related constant to image-related constant, should move out of this file to appropriate constant file but leave for now.\n * @constant\n */\nconst IMAGE_SIZE_OPTIONS = Object.freeze(['full', 'large', 'medium', 'small', 'tall', 'thumbnail']);\nconst IMAGE_SIZE_VALUES = Object.freeze((0,_mds_utils_utils__WEBPACK_IMPORTED_MODULE_0__/* .generateObject */ .jA)(IMAGE_SIZE_OPTIONS));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODU1MDYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vcGFja2FnZXMvbWRzL3NyYy9jb25zdGFudHMvaGVyby5qcz82NGY0Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///85506\n")},12230:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (/* binding */ getImageSize)\n/* harmony export */ });\n/* harmony import */ var _mds_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(74689);\n/* harmony import */ var _mds_constants_hero__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(85506);\n\n\nfunction getImageSize(image) {\n  let size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _mds_constants_hero__WEBPACK_IMPORTED_MODULE_0__/* .IMAGE_SIZE_VALUES */ .Gv.full;\n  const hasImage = !!(image && Object.keys(image).length > 0 && image?.[_mds_constants_hero__WEBPACK_IMPORTED_MODULE_0__/* .IMAGE_SIZE_VALUES */ .Gv.full]);\n  return {\n    hasImage,\n    imageUrl: hasImage && image[size] ? image[size].src : _mds_constants__WEBPACK_IMPORTED_MODULE_1__/* .EMPTY_STRING */ .v6\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTIyMzAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9wYWNrYWdlcy9tZHMvc3JjL3V0aWxzL2ltYWdlLmpzPzFhMDIiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///12230\n")},68980:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  Rg: () => (/* binding */ HUBSPOT_EMAIL_SUBSCRIPTION_TYPE_IDS),\n  sw: () => (/* binding */ HUBSPOT_FORM_FIELDS_TO_BYPASS),\n  Ym: () => (/* binding */ HUBSPOT_IGNORED_FIELD_TYPES),\n  BO: () => (/* binding */ HUBSPOT_RESERVED_FIELDS),\n  C$: () => (/* binding */ HUBSPOT_SERVER_ERRORS_NAME_MAP),\n  _C: () => (/* binding */ HUBSPOT_SUBMIT_FORM_ENDPOINT_BASE),\n  I8: () => (/* binding */ HUBSPOT_SUBMIT_FORM_EVENT_NAME),\n  u8: () => (/* binding */ HUBSPOT_TRACKING_COOKIE),\n  V6: () => (/* binding */ HUBSPOT_VALIDATION_RULES)\n});\n\n// UNUSED EXPORTS: HUBSPOT_API_HOST, HUBSPOT_COUNTRY_INPUT_NAME, HUBSPOT_GET_FORM_ENDPOINT_BASE, HUBSPOT_NEWSLETTER_SUBSCRIPTION_FORM_ID, HUBSPOT_UNITED_STATES_STRING_VALUE\n\n;// CONCATENATED MODULE: ./constants/hubspot-spam-domains.js\n/* harmony default export */ const hubspot_spam_domains = ([\n// Spam domains not included in hubspot's filters.\n'domain.com', 'business.com', 'yourcompany.com', 'mailin.com']);\n;// CONCATENATED MODULE: ./constants/hubspot.js\n\n/**\n * The hostname for HubSpot APIs.\n *\n * @type {string}\n */\nconst HUBSPOT_API_HOST = 'https://api.hubapi.com';\n\n/**\n * The IDs of the email subscription types that users optionally consent\n * to signing up for when submitting a form.\n *\n * These could be fetched programmatically with an extension of our API integration,\n * but they are not expected to change except in rare circumstances after the initial launch.\n *\n * @see https://app.hubspot.com/settings/5811593/marketing/email/types (must be logged in to HubSpot)\n *\n * @type {array}\n */\nconst HUBSPOT_EMAIL_SUBSCRIPTION_TYPE_IDS = Object.freeze([9074378,\n// Monthly Newsletters\n9074384 // Product Updates\n]);\n\n/**\n * The form ID for the newsletter subscription module.\n *\n * @type {string}\n */\nconst HUBSPOT_NEWSLETTER_SUBSCRIPTION_FORM_ID = '7e40fdbf-2fc5-4d46-87c7-72bd0275f368';\n\n/**\n * The API endpoint base for getting a HubSpot form by its id.\n *\n * @type {string}\n */\nconst HUBSPOT_GET_FORM_ENDPOINT_BASE = (/* unused pure expression or super */ null && (`${HUBSPOT_API_HOST}/forms/v2/forms/`));\n\n/**\n * Field types that should not pre-fill contact record information.\n *\n * @type {array}\n */\nconst HUBSPOT_IGNORED_FIELD_TYPES = ['textarea'];\n\n/**\n * The email domains that should be blocked from submission in HubSpot forms.\n *\n * This is an abbreviated list of domains to block client-side.\n *\n * HubSpot will handle a complete list on server-side validation.\n *\n * @see https://knowledge.hubspot.com/forms/what-domains-are-blocked-when-using-the-forms-email-domains-to-block-feature\n *\n * @type {array}\n */\nconst HUBSPOT_INVALID_EMAIL_DOMAINS = Object.freeze(hubspot_spam_domains);\n\n/**\n * Field names that require special handling to populate their values.\n *\n * @type {object}\n *\n */\nconst HUBSPOT_RESERVED_FIELDS = Object.freeze({\n  currentPage: 'most_recent_lead_source_detail__c',\n  // The page the form is loaded on.\n  experiments: 'smasm',\n  // The current user's experiment assignments.\n  productInterest: 'product_interest__c',\n  // The product the form is associated with.\n  smAccountDetails: Object.freeze({\n    email: 'email',\n    // SurveyMonkey email.\n    first_name: 'firstname',\n    // First name on SurveyMonkey account.\n    last_name: 'lastname',\n    // Last name on SurveyMonkey account.\n    user_id: 'sm_user_id__c' // SurveyMonkey user id.\n  })\n});\n\n/**\n * A HubSpot field that is used to check for specific email validation\n *\n * @type {array}\n *\n */\nconst HUBSPOT_FORM_FIELDS_TO_BYPASS = Object.freeze(['email']);\n/**\n * A mapping for HubSpot server error types to keys that\n * correspond to localized strings in the app.\n *\n * @type {object}\n *\n */\nconst HUBSPOT_SERVER_ERRORS_NAME_MAP = Object.freeze({\n  BLOCKED_EMAIL: 'INVALID_EMAIL_DOMAIN_ERROR',\n  REQUIRED_FIELD: 'REQUIRED'\n});\n\n/**\n * The API endpoint base for submitting a HubSpot form via AJAX.\n * It uses a different hostname than other requests.\n *\n * Append a `formId` to complete the url, e.g. `${HUBSPOT_SUBMIT_FORM_ENDPOINT_BASE}${formId}`.\n *\n * @type {string}\n */\nconst HUBSPOT_SUBMIT_FORM_ENDPOINT_BASE = 'https://api.hsforms.com/submissions/v3/integration/submit/';\n\n/**\n * The GTM dataLayer event name for the HubSpot form submission.\n *\n * @type {string}\n */\nconst HUBSPOT_SUBMIT_FORM_EVENT_NAME = 'submitHubSpotForm';\n\n/**\n * The name of the HubSpot tracking cookie.\n *\n * This cookie is set by the HubSpot Tracking Code,\n * installed via Google Tag Manager.\n *\n * @type {string}\n */\nconst HUBSPOT_TRACKING_COOKIE = 'hubspotutk';\n\n/**\n * A set of custom validation rules to evaluate for specific form fields.\n * For each field name subject to custom rules, it includes a list of those rules\n * containing two properties:\n * - A compare function that returns `false` if the field violates the rule.\n * - The error message to display when that function returns `false`.\n *\n * @type {object}\n */\nconst HUBSPOT_VALIDATION_RULES = Object.freeze({\n  email: Object.freeze([{\n    messageId: 'INVALID_EMAIL_FORMAT_ERROR',\n    // @todo: Make this a testable util again and figure out circular dependency issue.\n    validationCallback: email => /^\\w+([\\.\\-\\+]+\\w+)*@\\w+([\\.\\-\\+]+\\w+)*(\\.\\w{2,9})+$/.test(email) // eslint-disable-line no-useless-escape\n  }, {\n    // Does the email include a blocked domain?\n    messageId: 'INVALID_EMAIL_DOMAIN_ERROR',\n    validationCallback: (value, blockedEmailAddresses, bypassEmailDomainFilter) => bypassEmailDomainFilter || !HUBSPOT_INVALID_EMAIL_DOMAINS.concat(blockedEmailAddresses).some(domain => value.includes(`@${domain}`))\n  }]),\n  phone: Object.freeze([{\n    messageId: 'INVALID_PHONE_FORMAT_ERROR',\n    validationCallback: phoneNumber => {\n      // Replace unnecessary characters and check that the number is 8 to 15 digits in length\n      const strippedExtraCharactersPhoneNumber = phoneNumber.replace(/[\\W\\s]/g, ''); // eslint-disable-line no-useless-escape\n      return /\\d{8,15}/.test(strippedExtraCharactersPhoneNumber);\n    }\n  }])\n});\n\n/**\n * Input name for Country input from HubSpot forms.\n *\n * Used by HubSpotForms component to check the country value in order to manipulate\n * the HubSpotCommunicationsConsent checkbox.\n *\n * @type {string}\n */\nconst HUBSPOT_COUNTRY_INPUT_NAME = 'contact_country__c';\n\n/**\n * Value for US option in Country input from HubSpot forms.\n *\n * Used by HubSpotForms component to check the country value in order to manipulate\n * the HubSpotCommunicationsConsent checkbox.\n *\n * @type {string}\n */\nconst HUBSPOT_UNITED_STATES_STRING_VALUE = 'United States';//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjg5ODAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7O0FDRkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2NvbnN0YW50cy9odWJzcG90LXNwYW0tZG9tYWlucy5qcz82NTVlIiwid2VicGFjazovLy8uL2NvbnN0YW50cy9odWJzcG90LmpzP2YyYmEiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///68980\n")},54118:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  Hs: () => (/* binding */ getInitialValues),\n  R5: () => (/* binding */ handleCustomFields),\n  jZ: () => (/* binding */ handleFormSubmission),\n  n9: () => (/* binding */ limitHubSpotHtml),\n  OJ: () => (/* binding */ showDependentField),\n  OP: () => (/* binding */ validateField)\n});\n\n// UNUSED EXPORTS: fetchContact, fetchForms, findCurrentForm, getContactApiUrl, getHubSpotFormContext, getHubSpotLegalConsent, onSubmissionReject, onSubmissionSuccess, passPairsToMatchingFields, submitHubSpotForm, validateEmail, validatePhoneNumber\n\n// EXTERNAL MODULE: ../node_modules/@babel/runtime/helpers/esm/defineProperty.js\nvar defineProperty = __webpack_require__(64649);\n// EXTERNAL MODULE: ../node_modules/js-cookie/dist/js.cookie.mjs\nvar js_cookie = __webpack_require__(31655);\n// EXTERNAL MODULE: ../node_modules/react/index.js\nvar react = __webpack_require__(27378);\n// EXTERNAL MODULE: ../node_modules/@sm/intl/dist/index.js\nvar dist = __webpack_require__(8239);\n// EXTERNAL MODULE: ../node_modules/@wds/typography/dist/index.es.js\nvar index_es = __webpack_require__(38604);\n// EXTERNAL MODULE: ./util/api.js\nvar api = __webpack_require__(36274);\n// EXTERNAL MODULE: ./constants/tracking.js\nvar tracking = __webpack_require__(48214);\n// EXTERNAL MODULE: ./util/tracking.js\nvar util_tracking = __webpack_require__(39527);\n// EXTERNAL MODULE: ./util/debug-logging.js + 1 modules\nvar debug_logging = __webpack_require__(31905);\n// EXTERNAL MODULE: ../packages/mds/src/constants/index.js\nvar constants = __webpack_require__(74689);\n// EXTERNAL MODULE: ./util/config.js\nvar util_config = __webpack_require__(39894);\n// EXTERNAL MODULE: ./util/links.js + 2 modules\nvar links = __webpack_require__(41462);\n// EXTERNAL MODULE: ./util/properties.js\nvar properties = __webpack_require__(29311);\n// EXTERNAL MODULE: ./constants/hubspot.js + 1 modules\nvar hubspot = __webpack_require__(68980);\n// EXTERNAL MODULE: ./util/inline-links.js\nvar inline_links = __webpack_require__(75025);\n// EXTERNAL MODULE: ./util/query-string.js\nvar query_string = __webpack_require__(92381);\n// EXTERNAL MODULE: ./constants/experiments.js\nvar experiments = __webpack_require__(49853);\n// EXTERNAL MODULE: ./util/observability.js\nvar observability = __webpack_require__(55126);\n;// CONCATENATED MODULE: ./util/hubspot/copy.js\n/* eslint-disable max-len */\n\n/* harmony default export */ const copy = ((0,dist/* defineMessages */.vU)({\n  INPUT_CHARACTER_LENGTH_ERROR: {\n    \"id\": \"copy.Web_HubSpot_Errors_InputCharacterLength\",\n    \"defaultMessage\": \"Must be {minCharacters}-{maxCharacters} characters\"\n  },\n  INVALID_EMAIL_DOMAIN_ERROR: {\n    \"id\": \"copy.Web_HubSpot_Errors_InvalidEmailDomain\",\n    \"defaultMessage\": \"Use business email\"\n  },\n  INVALID_EMAIL_FORMAT_ERROR: {\n    \"id\": \"copy.Web_HubSpot_Errors_InvalidEmailFormat\",\n    \"defaultMessage\": \"Invalid email format\"\n  },\n  INVALID_PHONE_FORMAT_ERROR: {\n    \"id\": \"copy.Web_HubSpot_Errors_InvalidPhoneFormat\",\n    \"defaultMessage\": \"Must be 8-15 digits\"\n  },\n  REQUIRED: {\n    \"id\": \"copy.Web_HubSpot_Errors_Required\",\n    \"defaultMessage\": \"Required\"\n  },\n  COMMUNICATIONS_CONSENT: {\n    \"id\": \"copy.Web_HubSpot_CommunicationsConsent\",\n    \"defaultMessage\": \"I wish to receive other information about Momentive like product updates, news, information, and special promotions. Visit the <privacyLink>Privacy Notice</privacyLink> for information on how we use your information. You can unsubscribe anytime using a link at the bottom of our communications. \\u2063\\u2062By clicking '{ctaText}', I agree to use of my details to contact me about my specific request or inquiry.\\u206B\"\n  }\n}));\n;// CONCATENATED MODULE: ./util/hubspot/index.js\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0,defineProperty/* default */.Z)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Fetches a form (or all forms) from the HubSpot forms API.\n * Only used server-side, as it requires a secret auth token.\n *\n * @param {string}  authToken   The token to authenticate HubSpot API requests.\n * @param {string}  formId      The form to fetch.\n * @param {boolean} getAllForms Whether to fetch all forms instead of an individual form.\n *\n * @return {object} The API response.\n */\nasync function fetchForms(_ref) {\n  let {\n    authToken,\n    formId,\n    getAllForms\n  } = _ref;\n  let formIdPath = formId;\n\n  // If we are getting all forms, modify the endpoint URL to accommodate.\n  if (getAllForms) {\n    formIdPath = EMPTY_STRING;\n  }\n  const config = {\n    headers: {\n      Authorization: `Bearer ${authToken}`\n    }\n  };\n  const {\n    data,\n    status\n  } = await apiFetchService({\n    config,\n    uri: `${HUBSPOT_GET_FORM_ENDPOINT_BASE}${formIdPath}`\n  });\n  return {\n    data,\n    status\n  };\n}\n\n/**\n * Given a list of the forms a user has previously submitted provided by the Contacts API,\n * determine whether the user has filled out the current form on the current page.\n *\n * If it is a resource form, determine if they have filled out the form either on the current\n * page, __or__ its linked page.\n *\n * @param {string} formId          The current formId in question.\n * @param {array}  formSubmissions The list of previous form submissions.\n * @param {string} hostname        The current page's hostname.\n * @param {string} pathname        The current page's pathname.\n * @param {string} slug            The post slug of the page.\n *\n * @return {boolean} The built request URL.\n */\nfunction findCurrentForm(_ref2) {\n  let {\n    formId: currentForm,\n    formSubmissions = [],\n    hostname,\n    pathname,\n    slug\n  } = _ref2;\n  return formSubmissions.some(_ref3 => {\n    let {\n      'form-id': formId,\n      'page-url': pageUrl\n    } = _ref3;\n    if (!currentForm || !hostname || !pathname) {\n      return false;\n    }\n    if (pathname.startsWith(PATHS.resources)) {\n      const regex = new RegExp(`^https://${hostname}${PATHS.resources}/(premium|lp)/${slug}/$`);\n      return formId === currentForm && regex.test(pageUrl);\n    }\n    return formId === currentForm && pageUrl === `https://${hostname}${pathname}`;\n  });\n}\n\n/**\n * Builds a request URL for the Contacts API based on a provided contact's id.\n *\n * @param {string} contactId\n *\n * @return {string} The built request URL.\n */\nfunction getContactApiUrl(contactId) {\n  return `${HUBSPOT_API_HOST}/contacts/v1/contact/utk/${contactId}/profile/`;\n}\n\n/**\n * Fetches a contact from the HubSpot contacts API.\n * Only used server-side, as it requires a secret auth token.\n *\n * @param {string} authToken The token to authenticate HubSpot API requests.\n * @param {string} contactId The id of the contact to fetch.\n *\n * @return {string} The API response.\n */\nasync function fetchContact(_ref4) {\n  let {\n    authToken,\n    contactId\n  } = _ref4;\n  const config = {\n    headers: {\n      Authorization: `Bearer ${authToken}`\n    }\n  };\n  const {\n    data,\n    status\n  } = await apiFetchService({\n    config,\n    uri: getContactApiUrl(contactId)\n  });\n  return {\n    data,\n    status\n  };\n}\n\n/**\n * Generates a form context object that is passed with the form submission.\n *\n * @see https://developers.hubspot.com/docs/methods/forms/submit_form.\n *\n * @return {object} context          The form's context.\n * @return {string} context.hutk     The user's HubSpot tracking cookie value.\n * @return {string} context.pageUri  The page the form was submitted on.\n * @return {string} context.pageName The title of the page the form was submitted on.\n */\nfunction getHubSpotFormContext() {\n  const {\n    origin,\n    pathname\n  } = new URL(window.location.href);\n  return {\n    hutk: js_cookie/* default */.Z.get(hubspot/* HUBSPOT_TRACKING_COOKIE */.u8),\n    pageUri: `${origin}${pathname}`,\n    // Strip off query string and hash to limit cardinality.\n    pageName: (0,util_tracking/* getDocumentTitle */.U$)()\n  };\n}\n\n/**\n * Generates legal consent options to submit with the form\n * depending on the user's form selection.\n *\n * @see https://developers.hubspot.com/docs/methods/forms/submit_form.\n *\n * @param {boolean} communicationsConsent Whether the user has consented to communications.\n *\n * @return {object} The built legal consent options.\n */\nfunction getHubSpotLegalConsent(_ref5) {\n  let {\n    communicationsConsent\n  } = _ref5;\n  // Pass the text that the user saw when giving communications consent,\n  // substituting link markup for plain text.\n  const text = (0,dist.t)(copy.COMMUNICATIONS_CONSENT, {\n    privacyLink: content => content,\n    unsubscribeLink: content => content\n  });\n  return {\n    consent: {\n      communications: hubspot/* HUBSPOT_EMAIL_SUBSCRIPTION_TYPE_IDS */.Rg.map(subscriptionTypeId => ({\n        text,\n        subscriptionTypeId,\n        value: communicationsConsent\n      })),\n      consentToProcess: true,\n      // Consent to process data is implied when they submit a form.\n      text: constants/* EMPTY_STRING */.v6\n    }\n  };\n}\n\n/**\n * Takes an object and passes each pair's value to a field\n * on the form whose name matches the pair's key.\n *\n * @param {object} initialValues The form's values before this mapping occurs.\n * @param {object} pairs         The pairs to push onto matching fields.\n *\n * @return {object} The updated form field values.\n */\nfunction passPairsToMatchingFields(_ref6) {\n  let {\n    initialValues = {},\n    pairs = {}\n  } = _ref6;\n  Object.entries(pairs).forEach(_ref7 => {\n    let [key, value] = _ref7;\n    const regex = new RegExp(`^(most_recent_)?${key}(__c)?$`); // Some HubSpot property names are appended with `__c`.\n    let fieldName;\n    if (Object.keys(initialValues).some(field => {\n      fieldName = field;\n      return regex.test(field);\n    })) {\n      initialValues[fieldName] = value;\n    }\n  });\n  return initialValues;\n}\n\n/**\n * Builds an object of form fields and their values based on the form/contact objects returned\n * from our HubSpot endpoint. This serves as the state that controls the form's inputs.\n *\n * @param {object}  contact                  An object containing a matched contact's stored properties.\n * @param {object}  form                     An object containing the HubSpot form's fields and properties.\n * @param {boolean} form.ignoreCurrentValues Whether to populate fields with stored contact properties.\n * @param {array}   form.formFieldGroups     The list of form field groups.\n * @param {object}  smAccountDetails         SurveyMonkey email, first/last name, and user id.\n *\n * @return {object} Form values, with each key corresponding to a field on the form.\n */\nfunction getInitialValues(_ref8) {\n  let {\n    data: {\n      contact = {},\n      form: {\n        ignoreCurrentValues = false,\n        formFieldGroups = []\n      } = {}\n    } = {},\n    smAccountDetails = {}\n  } = _ref8;\n  let initialValues = {};\n  const fieldTypes = {};\n  formFieldGroups.forEach(_ref9 => {\n    let {\n      fields = []\n    } = _ref9;\n    fields.forEach(_ref10 => {\n      let {\n        defaultValue,\n        dependentFieldFilters = [],\n        fieldType,\n        name,\n        options,\n        selectedOptions\n      } = _ref10;\n      // If the field type provides an array of options, the default is the selected options.\n      // Otherwise, it is the provided `defaultValue`.\n      initialValues[name] = options && options.length ? selectedOptions : defaultValue;\n      fieldTypes[name] = fieldType;\n\n      // Get initial values not only for main fields but also any potential dependent fields.\n      dependentFieldFilters.forEach(_ref11 => {\n        let {\n          dependentFormField: {\n            defaultValue,\n            fieldType,\n            name,\n            options,\n            selectedOptions\n          }\n        } = _ref11;\n        initialValues[name] = options && options.length ? selectedOptions : defaultValue;\n        fieldTypes[name] = fieldType;\n      });\n    });\n  });\n\n  // Pre-fill fields with SurveyMonkey account info for logged-in users.\n  const smAccountFields = hubspot/* HUBSPOT_RESERVED_FIELDS */.BO.smAccountDetails;\n  Object.entries(smAccountFields).forEach(_ref12 => {\n    let [key, fieldName] = _ref12;\n    const fieldValue = smAccountDetails[key];\n    if (fieldValue && fieldName in initialValues) {\n      initialValues[fieldName] = fieldValue;\n    }\n  });\n\n  // Only pre-fill contact info if the form settings call for it.\n  // Do not pre-fill contact values for certain field types, even if the form-level setting is enabled.\n  if (!ignoreCurrentValues) {\n    Object.entries(contact).forEach(_ref13 => {\n      let [property, value] = _ref13;\n      if (property in initialValues && !hubspot/* HUBSPOT_IGNORED_FIELD_TYPES */.Ym.includes(fieldTypes[property])) {\n        initialValues[property] = value;\n      }\n    });\n  }\n\n  // Pre-fill fields from matching cookies.\n  // Then pre-fill fields from a single cookie that stores all relevant UTM params in a JSON string.\n  // Then pre-fill fields from matching query params.\n  const cookies = js_cookie/* default */.Z.get();\n\n  // Wrap this in a try/catch just in case users manually alter\n  // this cookie to a non-JSON string to avoid crashing the app.\n  let attrCookie = {};\n  try {\n    attrCookie = JSON.parse(decodeURIComponent(cookies[tracking/* ATTRIBUTION_PARAMS_COOKIE */.ls]));\n  } catch (error) {\n    (0,observability/* reportError */.eK)({\n      error,\n      severity: 'info'\n    });\n  }\n\n  // Largely speaking, HubSpot utilities that use `window` aren't a problem\n  // because HubSpot forms are only rendered client-side, so these would never\n  // be triggered server-side.\n  const queryParams = (0,query_string/* parseQueryString */.d)(window.location.search);\n  const combinedParams = _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, cookies), attrCookie), window.history?.state?.state || {}), queryParams);\n  initialValues = passPairsToMatchingFields({\n    initialValues,\n    pairs: combinedParams\n  });\n  return initialValues;\n}\n\n/**\n * Pushes any custom field values provided in admin to the appropriate fields.\n *\n * @param {string}   customFields    The custom fields to push, in `field1::value1|field2::value2` format.\n * @param {object}   formValues      The field's current form values.\n * @param {function} setFormValues   The form values' setter.\n *\n * @return {object} The built legal consent options.\n */\nfunction handleCustomFields(_ref14) {\n  let {\n    customFields = constants/* EMPTY_STRING */.v6,\n    formValues = {},\n    setFormValues = () => {}\n  } = _ref14;\n  const entries = customFields.split('|').filter(Boolean).map(field => field.split('::'));\n  if (!entries.length) {\n    return;\n  }\n  entries.forEach(_ref15 => {\n    let [fieldName, value] = _ref15;\n    if (value && fieldName in formValues && value !== formValues[fieldName]) {\n      setFormValues(_objectSpread(_objectSpread({}, formValues), {}, {\n        [fieldName]: value\n      }));\n    }\n  });\n}\n\n// To do - Fix the tag conversion in Hubspot https://momentiveai.atlassian.net/browse/CMS-9689\n/**\n * A transform function passed to the `options` parameter of `reactHtmlParser`\n * that strips all but `a`, `em`, `h1` through `h6`, `p`, and `strong` tags from HTML entered\n * into HubSpot.\n *\n * @param {Node} node The DOM node to transform, provided by `reactHtmlParser`.\n * @param {String} index An index, used as a `key` prop on mapped React components.\n *\n * @returns {Node|undefined|null} The processed component if applicable,\n * `undefined`, leaving the original node untransformed, or `null` returning nothing.\n */\n/* eslint-disable react/prop-types */\nfunction limitHubSpotHtml() {\n  let node = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'initial';\n  const {\n    attribs: {\n      style: styleAttr = constants/* EMPTY_STRING */.v6\n    } = {},\n    children = [],\n    name,\n    type\n  } = node;\n  let processedName;\n\n  // If it is just text, return it as is.\n  if (type === 'text') {\n    return undefined;\n  }\n\n  // If it is a paragraph or anchor, proceed.\n  if (['a', 'em', 'p', 'strong'].includes(name)) {\n    processedName = name;\n\n    // Group all headings together.\n  } else if (['h1', 'h2', 'h3', 'h4', 'h5', 'h6'].includes(name)) {\n    processedName = 'heading';\n  }\n\n  // Convert the `styles` string into an object to allow for text alignment.\n  const styles = Object.fromEntries(styleAttr.split(';').filter(Boolean).map(style => {\n    const [property, value] = style.split(':');\n    return [property.trim(), value.trim()];\n  })) || {};\n  const textAlign = styles['text-align'];\n  switch (processedName) {\n    case 'a':\n      // Override any lingering classNames and style it like our links.\n      node.attribs.className = 'wds-type--link';\n      // Run links through another transform function to try and preserve SPA.\n      return (0,inline_links/* inlineAnchorToSMLink */.N)(node, index);\n    case 'em':\n      return /*#__PURE__*/react.createElement(\"em\", {\n        key: index\n      }, children.map(function () {\n        let child = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        let index = arguments.length > 1 ? arguments[1] : undefined;\n        if (child.type === 'tag') {\n          return limitHubSpotHtml(child, index);\n        }\n        return /*#__PURE__*/react.createElement(\"span\", {\n          key: index\n        }, child.data);\n      }));\n    case 'heading':\n      return /*#__PURE__*/react.createElement(index_es/* Typography */.ZT, {\n        align: textAlign\n        // Transform any headings to `h3` to avoid design issues with larger headings.\n        ,\n        component: \"h3\",\n        key: index,\n        variant: \"sectionTitle\",\n        weight: \"medium\"\n      }, children.map(function () {\n        let child = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        let index = arguments.length > 1 ? arguments[1] : undefined;\n        if (child.type === 'tag') {\n          return limitHubSpotHtml(child, index);\n        }\n        return /*#__PURE__*/react.createElement(\"span\", {\n          key: index\n        }, child.data);\n      }));\n    case 'p':\n      return /*#__PURE__*/react.createElement(index_es/* Typography */.ZT, {\n        align: textAlign,\n        component: \"p\",\n        key: index,\n        variant: \"body\"\n      }, children.map(function () {\n        let child = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        let index = arguments.length > 1 ? arguments[1] : undefined;\n        if (child.type === 'tag') {\n          return limitHubSpotHtml(child, index);\n        }\n        return /*#__PURE__*/react.createElement(\"span\", {\n          key: index\n        }, child.data);\n      }));\n    case 'strong':\n      return /*#__PURE__*/react.createElement(\"strong\", {\n        key: index\n      }, children.map(function () {\n        let child = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        let index = arguments.length > 1 ? arguments[1] : undefined;\n        if (child.type === 'tag') {\n          return limitHubSpotHtml(child, index);\n        }\n        return /*#__PURE__*/react.createElement(\"span\", {\n          key: index\n        }, child.data);\n      }));\n    // Scrap the node altogether if it does not match another case.\n    default:\n      return null;\n  }\n}\n\n/**\n * A set of actions to take when HubSpot has rejected the form sumbission.\n *\n * @param {object}   errors       The form's error state.\n * @param {object}   serverErrors The errors sent by the server.\n * @param {function} setErrors    The setter for the form's error state.\n *\n * @return {undefined}\n */\nfunction onSubmissionReject(_ref16) {\n  let {\n    errors,\n    serverErrors,\n    setErrors\n  } = _ref16;\n  const errorsObj = {};\n  serverErrors.forEach(_ref17 => {\n    let {\n      errorType,\n      message\n    } = _ref17;\n    const [,, field, rawErrorMessage = constants/* EMPTY_STRING */.v6] = message.match(/(fields|context)\\.([^']*)'\\.\\s(.*)/) || [];\n    if (field && errorType) {\n      const errorKey = hubspot/* HUBSPOT_SERVER_ERRORS_NAME_MAP */.C$[errorType];\n      errorsObj[field] = (0,dist.t)(copy[errorKey]) || rawErrorMessage;\n    }\n  });\n  setErrors(_objectSpread(_objectSpread({}, errors), errorsObj));\n}\n\n/**\n * A set of actions to take when HubSpot has accepted the form submission.\n *\n * @param {string}   formId          The submitted form's ID.\n * @param {function} handleSubmit    An optional callback to a successful form submission.\n * @param {string}   productInterest The value of the form's Product Interest field.\n * @param {function} push            React Router's history push function.\n * @param {string}   redirect        The url to redirect to on a successful form submission.\n *\n * @return {undefined}\n */\nfunction onSubmissionSuccess(_ref18) {\n  let {\n    communicationsConsent,\n    formId,\n    formValues,\n    handleSubmit,\n    productInterest,\n    push,\n    redirect\n  } = _ref18;\n  const handleRedirect = () => {\n    const {\n      location: {\n        hostname\n      }\n    } = window;\n    if (redirect) {\n      // If the provided redirect is a web path or an absolute url\n      // that can be resolved to one, use SPA.\n      // Otherwise, use a server reload.\n      const isWebPath = (0,properties/* getProperty */.$s)(redirect, hostname);\n      const possibleWebPath = isWebPath ? redirect : (0,links/* getPathFromAbsoluteUrl */.R)(redirect, hostname);\n      if (possibleWebPath) {\n        return push(possibleWebPath);\n      }\n      window.location.href = redirect;\n    }\n  };\n\n  // If the form provides its own success handling, use that. Otherwise, use the default.\n  // Resource forms provide their own callbacks.\n  const successCallback = handleSubmit || handleRedirect;\n  (0,debug_logging/* debugLog */.q)('HubSpot form submitted successfully.', {\n    formId,\n    formValues,\n    redirect,\n    isGTMready: !!window.google_tag_manager,\n    successCallback\n  });\n\n  // If GTM is not loaded for whatever reason (adblockers, etc.),\n  // handle the redirect without the data layer push.\n  if (!window.google_tag_manager) {\n    return successCallback({\n      communicationsConsent,\n      formValues\n    });\n  }\n  (0,util_tracking/* dataLayerPush */.lQ)(_objectSpread({\n    event: hubspot/* HUBSPOT_SUBMIT_FORM_EVENT_NAME */.I8,\n    hubspotFormValues: _objectSpread({}, formValues),\n    /**\n     * Instructs GTM not to call this function until all tags tied to the event above have fired.\n     * GTM fires this function once for every GTM container (including Google Optimize) on the page.\n     * As we have up to three containers, ensure the callback runs a maximum of one time.\n     *\n     * @param {string} id The ID of the container the eventCallback is currently firing for.\n     *\n     * @return {function} The callback function for the form submission.\n     */\n    eventCallback: id => {\n      const {\n        SMConfig: {\n          GOOGLE_GTM_ID: GTM_MAIN_CONTAINER_ID\n        } = {}\n      } = window;\n      const marketingContainerLoaded = (tracking/* GTM_MARKETING_CONTAINER_ID */.rU in window.google_tag_manager);\n      // If the marketing container is loaded, only run the callback for that container.\n      if (marketingContainerLoaded && id === tracking/* GTM_MARKETING_CONTAINER_ID */.rU) {\n        return successCallback({\n          communicationsConsent,\n          formValues\n        });\n      }\n      // If it is not loaded, only run the callback for the main container.\n      if (!marketingContainerLoaded && id === GTM_MAIN_CONTAINER_ID) {\n        return successCallback({\n          communicationsConsent,\n          formValues\n        });\n      }\n    },\n    // Fire the eventCallback function after this period even if all tags have not fired.\n    eventTimeout: tracking/* DEFAULT_GTM_EVENT_TIMEOUT */.tp,\n    formId\n  }, productInterest ? {\n    productInterest\n  } : {}));\n}\n\n/**\n * Massages form inputs to be sent to HubSpot's submission API.\n *\n * @see https://developers.hubspot.com/docs/methods/forms/submit_form.\n *\n * @param {object} formValues The form values to submit (`name:value`).\n *\n * @return {array} An array of field objects to submit.\n */\nfunction prepareFormValues(_ref19) {\n  let {\n    formValues\n  } = _ref19;\n  const {\n    location: {\n      origin,\n      pathname\n    }\n  } = window;\n\n  // Push the current page url to the proper field, if present.\n  const page = hubspot/* HUBSPOT_RESERVED_FIELDS */.BO.currentPage;\n  if (page in formValues) {\n    formValues[page] = origin + pathname;\n  }\n\n  /**\n   * Re-map the user's experiments to the appropriate field on submit\n   * to solve race conditions resulting from async experiments loading\n   * after the HubSpot form.\n   *\n   * @see https://momentiveai.atlassian.net/browse/CMS-6045\n   *\n   */\n  const exp = hubspot/* HUBSPOT_RESERVED_FIELDS */.BO.experiments;\n  if (exp in formValues) {\n    formValues[exp] = js_cookie/* default */.Z.get(experiments/* PERSISTENT_EXPERIMENTS_COOKIE */.hr);\n  }\n  return Object.entries(formValues).map(_ref20 => {\n    let [name, value = constants/* EMPTY_STRING */.v6] = _ref20;\n    // Fields that can have multiple values should be coerced into a semicolon-separated string.\n    const isArray = Array.isArray(value);\n    const cleanValue = isArray ? value.map(value => value.toString().trim()).join(';') : value.toString().trim();\n    return {\n      name,\n      value: cleanValue\n    };\n  });\n}\n\n/**\n * Processes whether to display a parent field's dependent form fields.\n *\n * @see https://knowledge.hubspot.com/forms/use-dependent-form-fields.\n *\n * @param {string|array} compareValue The inputted parent value to evaluate.\n * @param {boolean}      boolValue    The boolean to compare against, if applicable.\n * @param {number}       numberValue  The number to compare against, if applicable.\n * @param {array}        numberValues The array of numbers to compare against, if applicable.\n * @param {operator}     operator     The type of comparison to make.\n * @param {string}       strValue     The string to compare against, if applicable.\n * @param {array}        strValues    The array of strings to compare against, if applicable.\n *\n * @return {boolean} Whether to show the dependent field.\n */\nfunction showDependentField(_ref21) {\n  let {\n    compareValue = constants/* EMPTY_STRING */.v6,\n    filter: {\n      boolValue,\n      numberValue,\n      numberValues,\n      operator = constants/* EMPTY_STRING */.v6,\n      strValue = constants/* EMPTY_STRING */.v6,\n      strValues = []\n    } = {}\n  } = _ref21;\n  // Figure out which type we are comparing against.\n  const singleValue = strValue || numberValue.toString() || boolValue.toString();\n  const pluralValues = strValues.length ? strValues : numberValues.map(String);\n  switch (operator) {\n    case 'CONTAINS':\n      return compareValue.includes(singleValue);\n    case 'DOESNT_CONTAIN':\n      return !compareValue.includes(singleValue);\n    case 'EQ':\n      // Equal\n      return pluralValues.length ? [compareValue].flat().sort().join('|') === pluralValues.sort().join('|') : singleValue === compareValue;\n    case 'IS_NOT_EMPTY':\n      return compareValue.length > 0;\n    case 'NEQ':\n      // Not equal\n      return pluralValues.length ? [compareValue].flat().sort().join('|') !== pluralValues.sort().join('|') : singleValue !== compareValue;\n    case 'SET_ALL':\n      // Does input contain all needed values?\n      return [compareValue].flat().every(value => pluralValues.includes(value));\n    case 'SET_ANY':\n      // Does input contain any of the needed values?\n      return [compareValue].flat().some(value => pluralValues.includes(value));\n    case 'SET_EQ':\n      // Is the set of values equal?\n      return [compareValue].flat().sort().join('|') === pluralValues.sort().join('|');\n    case 'SET_NEQ':\n      // Is the set of values not equal?\n      return [compareValue].flat().sort().join('|') !== pluralValues.sort().join('|');\n    case 'SET_NOT_ALL':\n      // Opposite of SET_ALL\n      return ![compareValue].flat().every(value => pluralValues.includes(value));\n    case 'SET_NOT_ANY':\n      // Opposite of SET_ANY\n      return ![compareValue].flat().some(value => pluralValues.includes(value));\n    case 'STR_STARTS_WITH':\n      return compareValue.startsWith(strValue);\n    case 'STR_ENDS_WITH':\n      return compareValue.endsWith(strValue);\n    default:\n      return false;\n  }\n}\n\n/**\n * Submits form data via the HubSpot API.\n *\n * @see https://developers.hubspot.com/docs/methods/forms/submit_form.\n *\n * @param {boolean} communicationsConsent The form to submit a response to.\n * @param {string}  formId                The form to submit a response to.\n * @param {object}  formValues            The values to submit.\n *\n * @return {object} The response from the server, indicating a successful submission or an error.\n */\nasync function submitHubSpotForm(_ref22) {\n  let {\n    communicationsConsent,\n    formId,\n    formValues\n  } = _ref22;\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    validateStatus: () => true\n  };\n  const portalId = (0,util_config/* getConfig */.i)('HUBSPOT_PORTAL_ID');\n  try {\n    const {\n      data,\n      status\n    } = await (0,api/* apiFetchService */.wK)({\n      config,\n      payload: JSON.stringify({\n        context: getHubSpotFormContext(),\n        fields: prepareFormValues({\n          formValues\n        }),\n        legalConsentOptions: getHubSpotLegalConsent({\n          communicationsConsent\n        })\n      }),\n      uri: `${hubspot/* HUBSPOT_SUBMIT_FORM_ENDPOINT_BASE */._C}${portalId}/${formId}`\n    });\n    return {\n      data,\n      status\n    };\n  } catch (response) {\n    return response;\n  }\n}\n\n/**\n * Execute form submission tasks, making a request to the HubSpot API,\n * and proceeding according to the response's status code.\n *\n * @param {boolean}  communicationsConsent Whether the user has given consent for communications.\n * @param {object}   errors                The form's error state.\n * @param {string}   formId                The form's ID.\n * @param {object}   formValues            The form's values.\n * @param {function} handleSubmit          An optional callback to a successful form submission.\n * @param {function} push                  React Router's history push function.\n * @param {string}   redirect              The url to redirect to on a successful form submission.\n * @param {function} setErrors             The setter for the form's error state.\n * @param {function} setIsSubmitting       The setter for the form's `isSubmitting` state.\n * @param {function} setShowErrorToast     The setter for the form's error toast notification.\n * @param {function} setSubmissionFailed   The setter for the form's failed submission state.\n *\n * @return {function} Updates input state with the first error it encounters, or clears it if no error.\n */\nasync function handleFormSubmission(_ref23) {\n  let {\n    communicationsConsent,\n    errors,\n    formId,\n    formValues,\n    handleReject,\n    handleSubmit,\n    push,\n    redirect,\n    setErrors,\n    setIsSubmitting,\n    setShowErrorToast,\n    setSubmissionFailed\n  } = _ref23;\n  // If there are any errors client-side, flag those and block the request to the HubSpot server.\n  if (Object.values(errors).filter(Boolean).length) {\n    setIsSubmitting(false);\n    setShowErrorToast(true);\n    return false;\n  }\n  try {\n    const {\n      data: {\n        errors: serverErrors,\n        inlineMessage = constants/* EMPTY_STRING */.v6\n      } = {},\n      status\n    } = await submitHubSpotForm({\n      communicationsConsent,\n      formId,\n      formValues\n    });\n    const productInterest = formValues[hubspot/* HUBSPOT_RESERVED_FIELDS */.BO.productInterest];\n    switch (status) {\n      case 200:\n        return onSubmissionSuccess({\n          communicationsConsent,\n          formId,\n          formValues,\n          handleSubmit,\n          inlineMessage,\n          productInterest,\n          push,\n          redirect\n        });\n      case 400:\n        return (() => {\n          setIsSubmitting(false);\n          onSubmissionReject({\n            errors,\n            serverErrors,\n            setErrors\n          });\n          handleReject({\n            errors,\n            formValues,\n            serverErrors,\n            status\n          });\n        })();\n      default:\n        return (() => {\n          setSubmissionFailed(true);\n          setIsSubmitting(false);\n          handleReject({\n            errors,\n            formValues,\n            serverErrors,\n            status\n          });\n        })();\n    }\n  } catch (error) {\n    setSubmissionFailed(true);\n    setIsSubmitting(false);\n    handleReject({\n      errors,\n      formValues\n    });\n  }\n}\n\n/**\n * Validates a form field client-side.\n *\n * @param {boolean}      bypassEmailDomainFilter          Whether to allow personal email addresses.\n * @param {string}       name                             The name of the field.\n * @param {boolean}      required                         Whether the field is required.\n * @param {function}     setErrors                        The setter function for the form's inputs state.\n * @param {string}       validation.data                  Gives additional validation conditions from the API.\n * @param {array}        validation.blockedEmailAddresses A custom list of additional blocked email domains to validate against.\n * @param {string|array} value                            The field value to validate.\n *\n * @return {function} Updates input state with the first error it encounters, or clears it if no error.\n */\nfunction validateField(_ref24) {\n  let {\n    bypassEmailDomainFilter = false,\n    name,\n    required = false,\n    setErrors,\n    validation: {\n      data,\n      blockedEmailAddresses = []\n    } = {},\n    value\n  } = _ref24;\n  const trimmedValue = typeof value !== 'undefined' ? value.trim() : constants/* EMPTY_STRING */.v6;\n\n  // First, check if the field is required and bail out if it is not present.\n  if (required && (!trimmedValue || trimmedValue.length === 0)) {\n    return setErrors({\n      name,\n      message: (0,dist.t)(copy.REQUIRED)\n    });\n  }\n\n  // Next, check if the value's character count matches the restrictions provided by the API.\n  if (data) {\n    const [, minCharacters, maxCharacters] = data.match(/(\\d+):(\\d+)/) || []; // e.g., `7:20:true`\n\n    if (value.length < minCharacters || value.length > maxCharacters) {\n      return setErrors({\n        name,\n        message: (0,dist.t)(copy.INPUT_CHARACTER_LENGTH_ERROR, {\n          maxCharacters,\n          minCharacters\n        })\n      });\n    }\n  }\n\n  // Next, check any custom validation rules for the field in question.\n  const rules = hubspot/* HUBSPOT_VALIDATION_RULES */.V6[name];\n  if (!rules) {\n    return setErrors({\n      name,\n      message: null\n    });\n  }\n\n  // As soon as any of these rules flags an error, set it.\n  const isInvalid = rules.some(_ref25 => {\n    let {\n      messageId,\n      validationCallback\n    } = _ref25;\n    if (hubspot/* HUBSPOT_FORM_FIELDS_TO_BYPASS */.sw.includes(name)) {\n      // Bypass this validation if blocked email domain filter is set.\n      // In this case adding an email address to block on the fly does not kick in.\n      if (!validationCallback(value, blockedEmailAddresses, bypassEmailDomainFilter)) {\n        setErrors({\n          name,\n          message: (0,dist.t)(copy[messageId])\n        });\n        return true;\n      }\n      return false;\n    }\n    // Generic approach where no external flags are required\n    if (!validationCallback(value)) {\n      setErrors({\n        name,\n        message: (0,dist.t)(copy[messageId])\n      });\n      return true;\n    }\n    return false;\n  });\n\n  // If an error was identified above, bail so we do not immediately re-set state with no error.\n  if (isInvalid) {\n    return !isInvalid;\n  }\n\n  // If no errors trigger, clear the input's error state.\n  setErrors({\n    name,\n    message: null\n  });\n  return true;\n}\n\n/**\n * Is email address in a valid format?\n * @see https://www.w3resource.com/javascript/form/email-validation.php for regex explanation.\n *\n * Allows for TLDs up to 9 characters, which includes ~94% of valid TLDs.\n * @see https://data.iana.org/TLD/tlds-alpha-by-domain.txt\n *\n * @param {string} email The email address to validate.\n *\n * @return {boolean} `false` if invalid, `true` if valid.\n *\n */\nfunction validateEmail(email) {\n  return /^\\w+([\\.-]+\\w+)*@\\w+([\\.-]+\\w+)*(\\.\\w{2,9})+$/.test(email); // eslint-disable-line no-useless-escape\n}\n\n/**\n * Is phone number in a valid format?\n * This is a loose validation that will avoid rejections for edge-case international number formats.\n *\n * Look for:\n * - An optional `+`.\n * - An optional `(`.\n * - Between 1 and 4 digits.\n * - An optional `)`.\n * - Any number of `-`, spaces, periods, or digits.\n *\n * @param {string} phoneNumber The number to validate.\n *\n * @return {boolean} `false` if invalid, `true` if valid.\n *\n */\nfunction validatePhoneNumber(phoneNumber) {\n  const strippedExtraCharactersPhoneNumber = phoneNumber.replace(/[\\W\\s]/g, EMPTY_STRING); // eslint-disable-line no-useless-escape\n  return /\\d{8,15}/.test(strippedExtraCharactersPhoneNumber);\n}\nlimitHubSpotHtml.__docgenInfo = {\n  \"description\": \"A transform function passed to the `options` parameter of `reactHtmlParser`\\nthat strips all but `a`, `em`, `h1` through `h6`, `p`, and `strong` tags from HTML entered\\ninto HubSpot.\\n\\n@param {Node} node The DOM node to transform, provided by `reactHtmlParser`.\\n@param {String} index An index, used as a `key` prop on mapped React components.\\n\\n@returns {Node|undefined|null} The processed component if applicable,\\n`undefined`, leaving the original node untransformed, or `null` returning nothing.\",\n  \"methods\": [],\n  \"displayName\": \"limitHubSpotHtml\"\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTQxMTguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUMzQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vdXRpbC9odWJzcG90L2NvcHkuanM/MGM5MiIsIndlYnBhY2s6Ly8vLi91dGlsL2h1YnNwb3QvaW5kZXguanM/ZTZkMCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///54118\n")}}]);