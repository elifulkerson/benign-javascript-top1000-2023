if (!String.prototype.startsWith) { String.prototype.startsWith = function(searchString, position) { position = position || 0; return this.substr(position, searchString.length) === searchString; }; } if (!Array.prototype.map) { Array.prototype.map = function(callback, thisArg) { var T, A, k; if (this === null) { throw new TypeError(' this is null or not defined'); } var O = Object(this); var len = O.length >>> 0; if (typeof callback !== 'function') { throw new TypeError(callback + ' is not a function'); } if (arguments.length > 1) { T = thisArg; } A = new Array(len); k = 0; while (k < len) { var kValue, mappedValue; if (k in O) { kValue = O[k]; mappedValue = callback.call(T, kValue, k, O); A[k] = mappedValue; } k++; } return A; }; } if (!Array.prototype.indexOf) { Array.prototype.indexOf = function(searchElement, fromIndex) { if (this === undefined || this === null) { throw new TypeError('"this" is null or not defined'); } var length = this.length >>> 0; fromIndex = +fromIndex || 0; if (Math.abs(fromIndex) === Infinity) { fromIndex = 0; } if (fromIndex < 0) { fromIndex += length; if (fromIndex < 0) { fromIndex = 0; } } for (; fromIndex < length; fromIndex++) { if (this[fromIndex] === searchElement) { return fromIndex; } } return -1; }; } String.prototype.capitalize = function() { return this.charAt(0).toUpperCase() + this.slice(1); }; String.prototype.trim = function() { return this.replace(/^\s+|\s+$/g, ''); }; String.prototype.ltrim = function() { return this.replace(/^\s+/, ''); }; String.prototype.rtrim = function() { return this.replace(/\s+$/, ''); }; String.prototype.fulltrim = function() { return this.replace(/(?:(?:^|\n)\s+|\s+(?:$|\n))/g, '').replace(/\s+/g, ' '); }; String.prototype.escapeRegEx = function() { return this.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, '\\$&'); }; String.prototype.killWhiteSpace = function() { return this.replace(/\s/g, ''); }; String.prototype.reduceWhiteSpace = function() { return this.replace(/\s+/g, ' '); }; Array.prototype.remove = function(from, to) { if (from) { var rest = this.slice((to || from) + 1 || this.length); this.length = from < 0 ? this.length + from : from; return this.push.apply(this, rest); } return this; }; if (typeof console == 'undefined') { console = {}; } if (typeof console.log == 'undefined') { console.log = function (args) {}; } if (typeof console.debug == 'undefined') { console.debug = function (args) {}; } if (typeof console.info === 'undefined') { console.info = function (args) {}; } if (typeof console.warn === 'undefined') { console.warn = function (args) {}; } if (typeof console.error === 'undefined') { console.error = function (args) {}; } if (!window.getComputedStyle) { window.getComputedStyle = function (el, pseudo) { this.el = el; this.getPropertyValue = function (prop) { var re = /(\-([a-z]){1})/g; if (prop == 'float') prop = 'styleFloat'; if (re.test(prop)) { prop = prop.replace(re, function () { return arguments[2].toUpperCase(); }); } return el.currentStyle[prop] ? el.currentStyle[prop] : null; }; return this; }; } function __extend(d, s){ for(var i in s) { d[i] = s[i]; } } /** * Created by alexstf on 1/5/16 for cam4. Used to wait for async loading specific resources. */ var WaitFor = (function() { var _defaultRepeats = 100; var _defaultTimeout = 100; var _memoData = {}; function dependencies(variableList, callback, repeats, timeout) { var pidKey = (variableList + '').replace(/,/g, '_'); if (_memoData[pidKey] && _memoData[pidKey] === true && callback) { setTimeout(function() { try { callback(variableList); } catch (ex) { console.log(ex); } }, 0); /*leave this to run callbacks in parallel*/ return; } var _repeats = _defaultRepeats; var _timeout = _defaultTimeout; if (repeats) { _repeats = repeats; } if (timeout) { _timeout = timeout; } var _numChecks = 0; var sid = setInterval(function() { _numChecks++; var _numVarsChecked = 0; for (var i = 0; i < variableList.length; i++) { if (typeof window[variableList[i]] != 'undefined') { _numVarsChecked++; } } if (_numVarsChecked == variableList.length) { if (callback) { setTimeout(function() { try { callback(variableList); } catch (ex) { console.log(ex); console.log('failed for', variableList, callback + ''); } }, 0); /*leave this to run callbacks in parallel*/ _memoData[pidKey] = true; } clearInterval(sid); } else if (_numChecks > _repeats) { clearInterval(sid); } }, _timeout); } function core(callback) { dependencies(['jQuery', 'Cam4Event'], callback, 100, 90); } function lang(callback) { dependencies(['jQuery', 'Cam4Event', 'js_i18n'], callback, 100, 90); } function getLoaded() { return _memoData; } return { dependencies: dependencies, lang: lang, getLoaded: getLoaded, core: core }; })(); var $ = jQuery; var $j = jQuery; var Cam4User = Cam4User ? Cam4User : {}; Cam4User.htmlStates = Cam4User.htmlStates ? Cam4User.htmlStates : []; Cam4User.xtra = { affiliateReferer: false, enabled: ('true' === 'false'), showDisclaimer: 'false', isLoggedIn: 'false', mode: 'sponsored', rightWidth: '162', zoneName: 'right.top', userName: '', listingType: 'female', isDirectory: 'false', key: 'straight', showBroadcast: 'false', isProfilePage: ('false' === 'true'), hasPurchases: false, hasEarnings: false }; __extend(Cam4User, { isUserInStudio: false, profileImageUrl: '', chatMessagesLimit: parseInt(50), isBroadcastingWindow: false, stealthModeValue: '', maxTranslatedMessages: parseInt(0), useUnbundling: false, useNewGoldFeatures: true, friendsListReloadInterval: "30", userFirebaseShard: "", userFirebaseToken: "", adsServer: 'https://ads00.cam4.com', showTwitterOptions: false, isAffiliateReferer: false, useGuestBilling:true, guestPromptEmailExists: false, guestTipEnablePercentage: parseInt('0'), showTipping: 'false', showTippingBar: false, psPrice: '0', hasFanClubEditingRequired: false, xmppDomain: '', xmpp_http_bind: '', tabletStraightDatingUrl: '//a.libertystmedia.com/loader?a=80&t=8&s=5&p=4 ', tabletGayDatingUrl: '//a.libertystmedia.com/loader?a=81&t=8&s=5&p=4', tabletShemaleDatingUrl: '//a.libertystmedia.com/loader?a=82&t=8&s=5&p=4', mobileStraightDatingUrl: '//a.libertystmedia.com/loader?a=48&t=8&s=5&p=4', mobileGayDatingUrl: '//a.libertystmedia.com/loader?a=49&t=8&s=5&p=4', mobileShemaleDatingUrl: '//a.libertystmedia.com/loader?a=84&t=8&s=5&p=4', desktopStraightDatingUrl: '//a.libertystmedia.com/loader?a=46&t=4&s=5&p=4', desktopGayDatingUrl: '//a.libertystmedia.com/loader?a=47&t=4&s=5&p=4', desktopShemaleDatingUrl: '//a.libertystmedia.com/loader?a=83&t=4&s=5&p=4', desktopGaySexGamesUrl: '//a.libertystmedia.com/loader?a=86&t=4&s=5&p=4', desktopShemaleSexGamesUrl: '//a.libertystmedia.com/loader?a=87&t=4&s=5&p=4', desktopStraightSexGamesUrl: '//a.libertystmedia.com/loader?a=85&t=4&s=5&p=4', tabletGaySexGamesUrl: '//a.libertystmedia.com/loader?a=92&t=8&s=5&p=4', tabletShemaleSexGamesUrl: '//a.libertystmedia.com/loader?a=93&t=8&s=5&p=4', tabletStraightSexGamesUrl: '//a.libertystmedia.com/loader?a=91&t=8&s=5&p=4', mobileGaySexGamesUrl: '//a.libertystmedia.com/loader?a=89&t=8&s=5&p=4', mobileShemaleSexGamesUrl: '//a.libertystmedia.com/loader?a=90&t=8&s=5&p=4', mobileStraightSexGamesUrl: '//a.libertystmedia.com/loader?a=88&t=8&s=5&p=4', isPerformer: false, intercomEnabled: false, gaUserUid:'', maxRoomRequestRetries: 3, tipLeader: '', hideEdgeOriginIp: false, useNonBlockingTipping: true, useWebGl: false, useVrPlayer: false, userAcceptedSexualProfiling: false, windowFocused: true, twoFaUserData: {}, twoFaDismissed: false, twoFaEnforced: false, sfw : false, paypalStatus: {}, performerAcceptTips: false, contextualGender: 'female', gender: '', countryCode : 'us', countryName : 'United States', currentIp : '70.163.140.175', localeString: 'en', lang :'en', performerName: '', iB : 0, guestUserName: '', profileCountry: '', userLanguage: '', userName: '', accessLevel: 0, userGender: '', userSexPref: '', profileName: '', kN : '', id: 0, lastBroadcastDate: false, isModerator: false, userId: '', referrerUrlId: '', creationTimestamp: '', couponCodeForTokenBonus: '', fanClubRequiredNotification: false, isLoggedIn : false, isLoggedInAsGuest : false, profileName: '', apiToken: '', performerAcceptRiskTokens: true, isCam4RedUser: false, isOnDevMachine: function() { return false; }, autoReloadData: { threshold: '-1' }, samplers: { ga_track_watch_broadcast: parseFloat(0.01), log_js_errors: '0.01' }, getIpSampler: function(samplerName){ var arr = 0; try{ arr = Cam4User.currentIp.split('.'); var a = parseInt(arr[0]); var b = parseInt(arr[1]); var c = parseInt(arr[2]); var d = parseInt(arr[3]); var totalCount = Math.pow(256, 4); var result = (((d * 256 + c) * 256 + b) * 256 + a) / totalCount; return (result <= Cam4User.samplers[samplerName]); }catch(ex){ } return false; }, profileInfo: { fanClubImageCover: false, isBroadcasting: false }, useFirebase: function(){ return false; }, needsMainProfileInfoCompletion: function(){ return ('false' === 'true'); }, performerIsFavorite: function(){ return 'false'==='true' }, performerHasFanclub: function(){ return false; }, userHasFanclub: function() { return false; }, isSubscribedToFanClub: function(){ return false; }, isSubscribedToShow: function(){ return 'false' === 'true'; }, notificationSettings: { canReceive: function(){ return ('false' === 'true'); } }, isPayingMember : function(){ return ('false' === 'true'); }, isViewer : function(){ return ('false'=== 'true'); }, isBroadcaster: function(){ if(document.getElementById('Cam4VChat')){ return ('false'!== 'true'); } return (Cam4User.htmlStates.indexOf('broadcast_ftl') > -1); }, fanClubEnabled: ('true' === 'true'), useBeatTipLeader: (function(){ var r = false; try { r = (document.querySelector('input[name=beatTipLeaderFlag]') != null && document.querySelector('input[name=beatTipLeaderFlag]').value == 'true'); } catch(ex) { console.log(ex); } return r; })(), lprop: "" }); Cam4User.cameraData = Cam4User.cameraData ? Cam4User.cameraData : {}; __extend(Cam4User.cameraData, { streamLoggerServer: 'false', useHlsVideoOnMobile: false, useVideoJS: false, canUseTranscoding: false, flashData: '', noggerUrl: '', noggerIntervalSeconds: parseInt('0'), noggerLevel: parseInt('0'), camEmbedded: false, embed: false, edgeConnectToken: '', chatlessViewerFlashUrl: '', chatlessBroadcasterFlashUrl: '', webRTC: { streamName: '', applicationName: '', sdpUrl: '', }, useWebRTCPlayer: false }); Cam4User.cameraData.useFlashPlayer = true; Cam4User.streamingData = { broadcastSettings: {} }; if(!Cam4User.xtra.userName) { Cam4User.xtra.userName = Cam4User.performerName; } var ControlledFeatures = { GOLD_CONTEXTUAL_OVERLAYS: true, NEW_GOLD_OVERLAY: false, V2_PAYMENT_STYLE: true, PAY_PAL_OPTIMIZATION: true, USE_EPAY_CE: true, USE_PAYOUTS: true, TIPPING_GAMES: true, FIREBASE_LIGHT_CHAT: false, FIREBASE_LIGHT_ROSTER: true, EXTERNAL_ENCODER_NO_VIDEO: false, USE_NEW_VIDEO_CONTROLS_DESIGN: true, COMPLETE_GOAL_BUTTON: true, KIIROO_ENABLED: true, LIMIT_BROADCASTER_PLAYER_SIZE: false, USE_SWITCH_RESOLUTIONS: false, USE_JS_BROADCAST_SETTINGS: true, USE_NEW_TOKENS_OVERLAY: true, USER_NOTES: false, ONBOARDING: false, USE_NONJQUERY_TIP_COMMUNICATOR: true, USE_WEBRTC_BROADCAST: true, USE_WEBRTC_EXTERNAL_BROADCAST: false, MAKE_WEBRTC_SUCK_LESS_BY_CLICKING_START_ONLY_ONCE: true, USE_WEBRTC_PLAYER: false, USE_HLS_WHEN_FLASH_DISABLED: true, USE_WEB_TIPPING_SESSION: true, USE_FLASH_RESTRICTION_FALLBACK: false, USE_BROADCASTER_2D_VR: false, BROADCAST_DEBUG_USERS: false, USE_CDN_FOR_HLS_VIEWERS: true, HLS_TUNED_PARAMETERS: true, STREAMING_HLS_VIEWER: false, MULTI_DEVICE_PRESENCE: true, USE_CAM4RED: true, USE_NEW_BROADCAST_RESOLUTIONS: true, STREAMING_HLS_VIEWER: false, BROADCAST_SETTINGS_V2: true, USE_DIRECTORY_PREVIEW: true, USE_DIRECTORY_PREVIEW_ON_MOBILE: false, SHOW_ANALYTICS_ON_DIRECTORY: true, APM_REAL_USER_MONITORING_BROADCASTER: false, APM_REAL_USER_MONITORING_VIEWER: false, APM_REAL_USER_MONITORING_REACT: false, EMBEDDED_DIRECTORY_FILTERS: false, BOOBS_COLLECTOR: true, USE_HLS_BROADCAST_SNAPSHOT: false, ENABLE_VIDEO_QUALITY_FILTER: true, SHOW_HLS_PLAY_BUTTON: false, USE_EMOJI: true, GUEST_TIP_ENABLE_PERCENTAGE: true, SEXGAMES_ENABLED: true, EXPERIMENTAL_WEBRTC_SETTINGS: false, USE_EWALLET: false, TEST_EWALLET: false, USE_TEST_EWALLET: false, RECOMMENDED_CAMS_DL: false, USE_RECOMMENDATION_ENGINE: true, HIGHLIGHT_RECOMMENDED_CAMS: false, LOAD_LSM_ADS: true, LOAD_VIDEO_ADS: true, MID_ROLL_VIDEO_ADS: true, LOAD_SHAFT_VIDEO_ADS: true, ENABLE_BANDWIDTH_CHECKER: false, GOLD_FREE_FEATURES: false, PRIVATE_SHOW_TIME_BLOCKS: true, USE_SNAPSHOTS_API: true, FACIAL_DETECTION_SNAPSHOTS: false, SHOW_PAUSE_BUTTON: false, AUTO_PAUSE_EXIT_FROM_PRIVATE: true, USE_GAME_CENTER: true, USE_SYSTEM73_FOR_HLS: false, TRACK_HLS_EVENTS: true, USE_PHENIX_FOR_WEBRTC_BROADCAST: false, USE_PHENIX_FOR_WEBRTC_PLAYBACK: false, USE_CLIENT_SNAPSHOTS: false, USE_VR_PLAYER: true, USE_UNIFIED_QUALITY: false, GDPR: true, GDPR_WITH_STEPS: true, GDPR_NEW_DESIGN: true, DISTRIBUTED_TRACING: true, USE_NEW_STREAMING_NODE: false, BROADCAST_ISSUES_INFO_ALERT: false, PILOT_ORIGIN_SERVER: false, USE_STREAMING_SERVERS_API: true, RESERVED_QA_AUTOMATION: false, SILENCE_FEATURE: true, FIXED_WIDTH_CHAT: true, AVOID_WEAK_PASSWORD: false, NEW_ACCOUNT_CREATION: true, NEW_ONBOARDING_V2: true, TIPPING_BAR_APPS_ENGINE_VIEWER: false, TIPPING_BAR_APPS_ENGINE_BROADCASTER: false, CYBER_PROMO: false, USE_ONBOARDING: true, PERSONAL_DATA_EXPORT: false, USE_NEW_CAM2CAM: false, USE_NEW_CAM2CAM_WITH_OBS: false, USE_C2C_PRICES: true, DISABLE_C2C_PS: true, EXO_POPS_MOBILE: true, FAN_CLUB_IN_PERFORMER_DASHBOARD: true, ON_CAM_OFFER: false, LOAD_VIDEO_ADS_OPTIMIZATION: false, TIPPING_GAME_NOTIFICATIONS: true, MYSHOP_DISCOUNTS: true, DIRECTORY_V2: true, GOLD_OVERLAY_ONE_PACKAGE: false, MY_ACCOUNT_V2: true, RECOMMENDATION_ENGINE: true, TOKEN_AWARENESS_OVERLAY: false, USER_REPORTED_MESSAGES: true, ALWAYS_ALLOW_PS_REQUEST: true, DECOUPLE_GROUP_SHOW_TICKETS: true, REMOVE_ADMIN_REGULAR_QUEUE: true, CUSTOM_PS_MIN_CHARGE_ROOM: false, BOOST_CAM: true, BOOST_HALLOWEEN_2020: false, PREMIUM_PRIVATE_SHOW: true, BROADCAST_WINDOW_REVAMP: true, AWARDS_V2: true, SAFARI_14_REDIRECT_BROADCAST: false, BOOST_PHASE_2: true, SAFARI_FLASH_DISABLE: false, TRANS_NEW_ATTRIBUTES: true, PRIVATE_SHOW_RATINGS: true, SOLO_PRIVATE_SHOW: true, PROFILES_V2: true, PRIVATE_SHOW_RATINGS: true, SHAFT_TRAFFIC_EX_ADS: false, REGULAR_BROADCASTER_FLASH_ENABLED: false, SPECIAL_SHOWS_CHAT_LOCK: true, CHROME_MIC_WARNING: false, SIGN_UP_OVERLAY_SHORT_DELAY: false, PROFILES_V2_MOBILE_TOKEN_BALANCE_VARIATION: true, USE_DEFLASH_EXTERNAL_BROADCASTER: true, DEFLASH_ENFORCE_BITRATE_ABR: false, DEFLASH_ENFORCE_DROPPED_PACKETS_ABR: false, DEFLASH_DISPLAY_ABR_BUTTON: true, CAM2CAM_ENABLED: false, DEFLASH_ADAPTIVE_BITRATE_ABR: false, DEFLASH_NEW_BITRATES: false, PRIVATE_DIRECTORY_OFFLINE_REQUESTS: false, FAN_CLUB_PAGE_HIDE: true, IOS_BROADCASTER: true, VALENTINES_2021: false, VALENTINES_2022: false, STREAMING_SAAS: true, BROADCAST_OBS_VIRTUAL_CAMERA_WARNING: true, INFO_OVERLAY_FORCED_EXTERNAL_ENCODER: false, USE_ONE_STREAM_FOR_SETTINGS: true, GOLD_IMPROVEMENTS_2021: true, TIP_MENU_2021: true, NO_2257_NO_BROADCAST: false, CAM4_XMAS_LOGO_2021: false, NO_MOBILE_POPUNDER_ADS: false, EXADS_MOBILE_INTERSTITIAL: true, BACKGROUND_IMAGE_STATIC_RESOURCE: false, KIIROO_CONTROL: true, FIREBASE_WARNING: false, CAM4_BIRTHDAY_2022: false, DESIGNER_RECRUITMENT_BANNER: false, }; var PASS_THROUGH_PARAMS = { 'linkCode': 'fm', 'pageVersion': 'default', 'membershipOperation': 'upgrade' }; var WEB_CDN = "https://cam4-static-test.xcdnpro.com/web", CDN_LOCATION = "https://cam4-static-test.xcdnpro.com/web", GAMES_CENTER_VERSION = '392.a08fcaf71bfc67f528851e20e336c594c3bce84b', APPS_ENGINE_URL = 'https://omniappz.com/apps/rest/v1/app/cam4', THUMBNAILS_CDN = "https://snapshots.xcdnpro.com/thumbnails", EPAY_PLUGIN_LOCATION = 'https://cam4-static-test.xcdnpro.com/plugin/epay/1.236', KYOLIB_VERSION = '396.b0681fae338cd4d7efcc43d4d6d32d7595b9d6b5', CURRENT_STATE = "undefined", TIPPING_SERVER = "https://tipping.cam4.com", SMS_SERVER = "https://sms.globalsecureserver.com", WHITELABEL_DOMAIN = "cam4.com", JQUERY_PATH = 'https://cam4-static-test.xcdnpro.com/web/js/jquery/jquery.min.1.7.2.js', DOMAIN_NAME = 'cam4.com', DOMAIN_PREFIX = 'com.cam4', SERVER_NAME = 'www.cam4.com', roomName = Cam4User.performerName, useBroadcasterFirebaseChat = false, translatorServer = "https://translator.cam4.com", mobileStreamingURL = '', webServerTimestamp = '1697434348956', responsiveDirectoryForMobile = false, communicatorNotificationsGroup = false, profileImageBaseUrl = '', usePollingTipping = true, passwordMinLength = 6, passwordMaxLength = 128, specialChars = "0123456789!#$%&()*+,.:;<>=?@^_{|}][", strengthIncreased = "true", isTabooCams = (WHITELABEL_DOMAIN === 'taboocams.com'), USER_RATING = (0).toFixed(2), EPAY_SERVER = "https://omnivaults.com", EWALLET_SERVER = "https://ewallet.omnivaults.com/cam4", cam4SupportUrl = "https://cam4support.com", gameNotificationPeriod = "600", enableCaptcha = true, tippingSoundThresholds = "5|50|250", needsIdVerification = false, pendingIdVerification = false, idVerificationEnabled = false, consentsEnabled = true, showConsents = false, userAcceptedSexualProfiling = false, useNewChatlessResolution = true, BROADCASTER_PLAYER_MAX_SIZE = '', BROADCAST_RESOLUTION = '', SFW = false, EDIT_PROFILE_PAGE =false, DISABLE_CALL_BROADCAST_ID = 1, allowBroadcast = false, pauseMaxMillis = '', cam4WebChatHost = 'https://webchat.cam4.com/', userNotesColors = '', showStreammate = false, svrlang="en", SNAPSHOTS_LOGGER_SERVER = 'https://logger007.cam4.com/stats/snapshots', imageServers = ["https://cam4-codelnet.xcdnpro.com"], bioImageProtocol = 'https', landingLink = '', feedbackUrl = '', prerollVideoAdsFrequency = 1; boostedRoomPriceTokens = 25; boostedRoomDurationMinutes = 5; boostedRoomExtendedDurationMinutes = 25; boostedRoomViewerThreshold = 10; var STREAMING_API_BASE_URL = 'https://api.cam4.com/streaming'; var UserAgent = { tablet: false, phone: false, desktop: true, string: 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:21.0) Gecko/20100101 Firefox/21.0' }; if(typeof Cam4User.isPayingMember === 'undefined') { Cam4User.isPayingMember = function(){}; } if(typeof Cam4User.userFeatures === 'undefined') { Cam4User.userFeatures = {}; } var Cam4Ultimate = { footerAdServer: 'https://streamate.cam4.com' }; var adsKey = "straight"; var processorPopUpPageWidth = 650, popUpCheckoutWidth = 680; var useSecurePaymentServer = false; var isMedhatUser = false; var Campaigns = { activeCampaignName: "default" }; var StreamFeedbackIssues = false; var TranslationLanguages = { }; var translatorHashLength = 32; var Cam4Performer = { name: '', userId: '', fanclubBadgeUrl: '', fanclubPrice: 0, referrerUrlId: '', statusModel : { gender: '', mobileViewerLimitNotReached: false, isPrivate: false, isBroadcasting: false, showState: '', source: '', technology: '', featureIndex: '0', isGoldPartyWinner: false, goldShowPrice: 0 } }; Cam4User.fanclubSubscriptionsAboutToExpire = [ ]; Cam4User.expiredDeactivatedFanClubs = [ ]; var PageStatus = { isCheckoutTokensModalActive: false, taboocamsFirstLogin: false, showLoginModal: false, isDirectory: ('false' === 'true'), enablePopUnder:('true' === 'true'), isProfile: false, contextAllowPopunder: true, allowSignupValidation: false, broadcastSource: 'false', responsiveBroadcast: false, sourcePage:'browserupgrade', has: function(str) { var htm = [ 'footer_jsp', ]; return (htm.indexOf(str) != -1); } }; Cam4User.broadcastSource = PageStatus.broadcastSource; var NSPrices = { privateShowPrice: '0', cam2camPrice: '30' }, GSDefaults={ timeLimit : parseInt('0'), costOfTicket : parseInt('0'), showLength : parseInt('0'), ticketGoal : parseInt('0') }, PrivateShow = { settings : JSON.parse('{}'), defaultPricesPerMinute: { viewer: parseInt('0'), spy: parseInt('0'), c2c: parseInt('0') } }, GSSelectOpts = { modify : { data: [ ] }, set: { data: [ ] }, prices : [ ], c2cPrices: [], defaultPrices: { privateShow: parseInt('0'), spyShow: parseInt('0'), c2cShow: parseInt('0') }, psInitialPricesPerMinute: [ ] }; var RequireJsModules = [ '' ]; var StreamEmbedApi = { enabled: false }; var RequestParameters = { 'pageAllowPopUnder': 'true' , 'ads_listingType': 'female' , 'mobileFooterAd': '' , 'ads_showBroadcast': 'false' , 'error': '' , 'title': 'CAM4: Browser Upgrade' , 'ads_rightWidth': '162' , 'ads_noAds': 'false' , 'noAds': 'true' , 'path': 'browserupgrade' , 'ads_zoneName': 'right.top' , 'ads_key': 'straight' , 'footer_jsp': 'footer_jsp' , 'sourcePage': 'browserupgrade' , 'ads_username': '' , 'showStreammate': 'false' , 'responsiveDirectoryForMobile': 'false' , 'page': '' , 'isDirectory': 'false' , 'affiliateReferer': 'false' , 'contacts': '' , 'ads_mode': 'sponsored' , 'ads_isDirectory': 'false' , 'ads_isProfilePage': 'false' }; RequestParameters.page = parseInt(''); RequestParameters.isDirectory = false; RequestParameters.responsiveDirectoryForMobile = false;var intercomAppId = 'xku5pmiv'; var isVrStream = false; var mbaVersion = false; var cam4UserAgent = 'Desktop';